import{E as sm,F as sy,R as Eb,r as Fe,j as oa}from"./index-B-HRXyag.js";var Pd={exports:{}},ys={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var rv;function Tb(){return rv||(rv=1,ys.ConcurrentRoot=1,ys.ContinuousEventPriority=8,ys.DefaultEventPriority=32,ys.DiscreteEventPriority=2,ys.IdleEventPriority=268435456,ys.LegacyRoot=0,ys.NoEventPriority=0),ys}var ov;function Ab(){return ov||(ov=1,Pd.exports=Tb()),Pd.exports}var Pu=Ab();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Rh="173",Cb={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},wb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ay=0,Bp=1,ry=2,Rb=3,oy=0,Dh=1,vl=2,Hi=3,Us=0,Xn=1,ts=2,Rs=0,er=1,zp=2,Fp=3,Hp=4,ly=5,aa=100,cy=101,uy=102,hy=103,fy=104,dy=200,py=201,my=202,gy=203,Fu=204,Hu=205,vy=206,_y=207,yy=208,xy=209,Sy=210,My=211,by=212,Ey=213,Ty=214,Vu=0,Gu=1,ku=2,ar=3,Wu=4,Xu=5,qu=6,Yu=7,Yl=0,Ay=1,Cy=2,ns=0,wy=1,Ry=2,Dy=3,am=4,Uy=5,Ny=6,Ly=7,Vp="attached",Py="detached",Uh=300,Ns=301,la=302,wl=303,Rl=304,Mo=306,Dl=1e3,Di=1001,Ul=1002,En=1003,rm=1004,Db=1004,co=1005,Ub=1005,fn=1006,_l=1007,Nb=1007,es=1008,Lb=1008,ki=1009,om=1010,lm=1011,go=1012,Nh=1013,Ls=1014,ni=1015,bo=1016,Lh=1017,Ph=1018,rr=1020,cm=35902,um=1021,hm=1022,Pn=1023,fm=1024,dm=1025,nr=1026,or=1027,Ih=1028,Zl=1029,pm=1030,Oh=1031,Pb=1032,Bh=1033,yl=33776,xl=33777,Sl=33778,Ml=33779,Zu=35840,Ku=35841,Ju=35842,ju=35843,Qu=36196,$u=37492,th=37496,eh=37808,nh=37809,ih=37810,sh=37811,ah=37812,rh=37813,oh=37814,lh=37815,ch=37816,uh=37817,hh=37818,fh=37819,dh=37820,ph=37821,bl=36492,mh=36494,gh=36495,mm=36283,vh=36284,_h=36285,yh=36286,Iy=2200,Oy=2201,By=2202,Nl=2300,xh=2301,Iu=2302,Ja=2400,ja=2401,Ll=2402,zh=2500,gm=2501,Ib=0,Ob=1,Bb=2,zy=3200,Fy=3201,zb=3202,Fb=3203,ha=0,Hy=1,As="",Ln="srgb",ca="srgb-linear",Pl="linear",Oe="srgb",Hb=0,Ya=7680,Vb=7681,Gb=7682,kb=7683,Wb=34055,Xb=34056,qb=5386,Yb=512,Zb=513,Kb=514,Jb=515,jb=516,Qb=517,$b=518,Gp=519,Vy=512,Gy=513,ky=514,vm=515,Wy=516,Xy=517,qy=518,Yy=519,Il=35044,tE=35048,eE=35040,nE=35045,iE=35049,sE=35041,aE=35046,rE=35050,oE=35042,lE="100",kp="300 es",Gi=2e3,Ol=2001,cE={COMPUTE:"compute",RENDER:"render"};class rs{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}const Dn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let lv=1234567;const ir=Math.PI/180,vo=180/Math.PI;function vi(){const a=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Dn[a&255]+Dn[a>>8&255]+Dn[a>>16&255]+Dn[a>>24&255]+"-"+Dn[t&255]+Dn[t>>8&255]+"-"+Dn[t>>16&15|64]+Dn[t>>24&255]+"-"+Dn[e&63|128]+Dn[e>>8&255]+"-"+Dn[e>>16&255]+Dn[e>>24&255]+Dn[n&255]+Dn[n>>8&255]+Dn[n>>16&255]+Dn[n>>24&255]).toLowerCase()}function oe(a,t,e){return Math.max(t,Math.min(e,a))}function _m(a,t){return(a%t+t)%t}function uE(a,t,e,n,i){return n+(a-t)*(i-n)/(e-t)}function hE(a,t,e){return a!==t?(e-a)/(t-a):0}function El(a,t,e){return(1-e)*a+e*t}function fE(a,t,e,n){return El(a,t,1-Math.exp(-e*n))}function dE(a,t=1){return t-Math.abs(_m(a,t*2)-t)}function pE(a,t,e){return a<=t?0:a>=e?1:(a=(a-t)/(e-t),a*a*(3-2*a))}function mE(a,t,e){return a<=t?0:a>=e?1:(a=(a-t)/(e-t),a*a*a*(a*(a*6-15)+10))}function gE(a,t){return a+Math.floor(Math.random()*(t-a+1))}function vE(a,t){return a+Math.random()*(t-a)}function _E(a){return a*(.5-Math.random())}function yE(a){a!==void 0&&(lv=a);let t=lv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function xE(a){return a*ir}function SE(a){return a*vo}function ME(a){return(a&a-1)===0&&a!==0}function bE(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function EE(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}function TE(a,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":a.set(c*p,h*m,h*g,c*f);break;case"YZY":a.set(h*g,c*p,h*m,c*f);break;case"ZXZ":a.set(h*m,h*g,c*p,c*f);break;case"XZX":a.set(c*p,h*x,h*v,c*f);break;case"YXY":a.set(h*v,c*p,h*x,c*f);break;case"ZYZ":a.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Wn(a,t){switch(t.constructor){case Float32Array:return a;case Uint32Array:return a/4294967295;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int32Array:return Math.max(a/2147483647,-1);case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}function he(a,t){switch(t.constructor){case Float32Array:return a;case Uint32Array:return Math.round(a*4294967295);case Uint16Array:return Math.round(a*65535);case Uint8Array:return Math.round(a*255);case Int32Array:return Math.round(a*2147483647);case Int16Array:return Math.round(a*32767);case Int8Array:return Math.round(a*127);default:throw new Error("Invalid component type.")}}const AE={DEG2RAD:ir,RAD2DEG:vo,generateUUID:vi,clamp:oe,euclideanModulo:_m,mapLinear:uE,inverseLerp:hE,lerp:El,damp:fE,pingpong:dE,smoothstep:pE,smootherstep:mE,randInt:gE,randFloat:vE,randFloatSpread:_E,seededRandom:yE,degToRad:xE,radToDeg:SE,isPowerOfTwo:ME,ceilPowerOfTwo:bE,floorPowerOfTwo:EE,setQuaternionFromProperEuler:TE,normalize:he,denormalize:Wn};class ht{constructor(t=0,e=0){ht.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ce{constructor(t,e,n,i,o,l,c,h,f){ce.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],y=i[6],E=i[1],A=i[4],T=i[7],L=i[2],U=i[5],I=i[8];return o[0]=l*b+c*E+h*L,o[3]=l*S+c*A+h*U,o[6]=l*y+c*T+h*I,o[1]=f*b+p*E+m*L,o[4]=f*S+p*A+m*U,o[7]=f*y+p*T+m*I,o[2]=g*b+v*E+x*L,o[5]=g*S+v*A+x*U,o[8]=g*y+v*T+x*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Id.makeScale(t,e)),this}rotate(t){return this.premultiply(Id.makeRotation(-t)),this}translate(t,e){return this.premultiply(Id.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Id=new ce;function Zy(a){for(let t=a.length-1;t>=0;--t)if(a[t]>=65535)return!0;return!1}const CE={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function uo(a,t){return new CE[a](t)}function Bl(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function Ky(){const a=Bl("canvas");return a.style.display="block",a}const cv={};function lo(a){a in cv||(cv[a]=!0,console.warn(a))}function wE(a,t,e){return new Promise(function(n,i){function o(){switch(a.clientWaitSync(t,a.SYNC_FLUSH_COMMANDS_BIT,0)){case a.WAIT_FAILED:i();break;case a.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}function RE(a){const t=a.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function DE(a){const t=a.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const uv=new ce().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),hv=new ce().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function UE(){const a={enabled:!0,workingColorSpace:ca,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===Oe&&(i.r=Ds(i.r),i.g=Ds(i.g),i.b=Ds(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===Oe&&(i.r=mo(i.r),i.g=mo(i.g),i.b=mo(i.b))),i},fromWorkingColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},toWorkingColorSpace:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===As?Pl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return a.define({[ca]:{primaries:t,whitePoint:n,transfer:Pl,toXYZ:uv,fromXYZ:hv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Ln},outputColorSpaceConfig:{drawingBufferColorSpace:Ln}},[Ln]:{primaries:t,whitePoint:n,transfer:Oe,toXYZ:uv,fromXYZ:hv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Ln}}}),a}const be=UE();function Ds(a){return a<.04045?a*.0773993808:Math.pow(a*.9478672986+.0521327014,2.4)}function mo(a){return a<.0031308?a*12.92:1.055*Math.pow(a,.41666)-.055}let Vr;class Jy{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Vr===void 0&&(Vr=Bl("canvas")),Vr.width=t.width,Vr.height=t.height;const n=Vr.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Vr}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Bl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Ds(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ds(e[n]/255)*255):e[n]=Ds(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let NE=0;class Qa{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:NE++}),this.uuid=vi(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Od(i[l].image)):o.push(Od(i[l]))}else o=Od(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Od(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?Jy.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let LE=0;class sn extends rs{constructor(t=sn.DEFAULT_IMAGE,e=sn.DEFAULT_MAPPING,n=Di,i=Di,o=fn,l=es,c=Pn,h=ki,f=sn.DEFAULT_ANISOTROPY,p=As){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:LE++}),this.uuid=vi(),this.name="",this.source=new Qa(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ht(0,0),this.repeat=new ht(1,1),this.center=new ht(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ce,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Uh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Dl:t.x=t.x-Math.floor(t.x);break;case Di:t.x=t.x<0?0:1;break;case Ul:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Dl:t.y=t.y-Math.floor(t.y);break;case Di:t.y=t.y<0?0:1;break;case Ul:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}sn.DEFAULT_IMAGE=null;sn.DEFAULT_MAPPING=Uh;sn.DEFAULT_ANISOTROPY=1;class Re{constructor(t=0,e=0,n=0,i=1){Re.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],y=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,L=(y+1)/2,U=(p+g)/4,I=(m+b)/4,z=(x+S)/4;return A>T&&A>L?A<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(A),i=U/n,o=I/n):T>L?T<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(T),n=U/i,o=z/i):L<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(L),n=I/o,i=z/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+y-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this.z=oe(this.z,t.z,e.z),this.w=oe(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this.z=oe(this.z,t,e),this.w=oe(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fh extends rs{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Re(0,0,t,e),this.scissorTest=!1,this.viewport=new Re(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:fn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const o=new sn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);o.flipY=!1,o.generateMipmaps=n.generateMipmaps,o.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,i=t.textures.length;n<i;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const e=Object.assign({},t.texture.image);return this.texture.source=new Qa(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class as extends Fh{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Kl extends sn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=En,this.minFilter=En,this.wrapR=Di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class PE extends as{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Kl(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Hh extends sn{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=En,this.minFilter=En,this.wrapR=Di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class IE extends as{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Hh(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class ii{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const y=h*g+f*v+p*x+m*b,E=y>=0?1:-1,A=1-y*y;if(A>Number.EPSILON){const L=Math.sqrt(A),U=Math.atan2(L,y*E);S=Math.sin(S*U)/L,c=Math.sin(c*U)/L}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const L=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=L,f*=L,p*=L,m*=L}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(oe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(t=0,e=0,n=0){B.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(fv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(fv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this.z=oe(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this.z=oe(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Bd.copy(this).projectOnVector(t),this.sub(Bd)}reflect(t){return this.sub(Bd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Bd=new B,fv=new ii;class qn{constructor(t=new B(1/0,1/0,1/0),e=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Bi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Bi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Bi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Bi):Bi.fromBufferAttribute(o,l),Bi.applyMatrix4(t.matrixWorld),this.expandByPoint(Bi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Vc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Vc.copy(n.boundingBox)),Vc.applyMatrix4(t.matrixWorld),this.union(Vc)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Bi),Bi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(il),Gc.subVectors(this.max,il),Gr.subVectors(t.a,il),kr.subVectors(t.b,il),Wr.subVectors(t.c,il),js.subVectors(kr,Gr),Qs.subVectors(Wr,kr),Pa.subVectors(Gr,Wr);let e=[0,-js.z,js.y,0,-Qs.z,Qs.y,0,-Pa.z,Pa.y,js.z,0,-js.x,Qs.z,0,-Qs.x,Pa.z,0,-Pa.x,-js.y,js.x,0,-Qs.y,Qs.x,0,-Pa.y,Pa.x,0];return!zd(e,Gr,kr,Wr,Gc)||(e=[1,0,0,0,1,0,0,0,1],!zd(e,Gr,kr,Wr,Gc))?!1:(kc.crossVectors(js,Qs),e=[kc.x,kc.y,kc.z],zd(e,Gr,kr,Wr,Gc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Bi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Bi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(xs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),xs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),xs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),xs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),xs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),xs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),xs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),xs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(xs),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const xs=[new B,new B,new B,new B,new B,new B,new B,new B],Bi=new B,Vc=new qn,Gr=new B,kr=new B,Wr=new B,js=new B,Qs=new B,Pa=new B,il=new B,Gc=new B,kc=new B,Ia=new B;function zd(a,t,e,n,i){for(let o=0,l=a.length-3;o<=l;o+=3){Ia.fromArray(a,o);const c=i.x*Math.abs(Ia.x)+i.y*Math.abs(Ia.y)+i.z*Math.abs(Ia.z),h=t.dot(Ia),f=e.dot(Ia),p=n.dot(Ia);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const OE=new qn,sl=new B,Fd=new B;class In{constructor(t=new B,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):OE.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;sl.subVectors(t,this.center);const e=sl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(sl,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Fd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(sl.copy(t.center).add(Fd)),this.expandByPoint(sl.copy(t.center).sub(Fd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ss=new B,Hd=new B,Wc=new B,$s=new B,Vd=new B,Xc=new B,Gd=new B;class Eo{constructor(t=new B,e=new B(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ss)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ss.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ss.copy(this.origin).addScaledVector(this.direction,e),Ss.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Hd.copy(t).add(e).multiplyScalar(.5),Wc.copy(e).sub(t).normalize(),$s.copy(this.origin).sub(Hd);const o=t.distanceTo(e)*.5,l=-this.direction.dot(Wc),c=$s.dot(this.direction),h=-$s.dot(Wc),f=$s.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Hd).addScaledVector(Wc,g),v}intersectSphere(t,e){Ss.subVectors(t.center,this.origin);const n=Ss.dot(this.direction),i=Ss.dot(Ss)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ss)!==null}intersectTriangle(t,e,n,i,o){Vd.subVectors(e,t),Xc.subVectors(n,t),Gd.crossVectors(Vd,Xc);let l=this.direction.dot(Gd),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;$s.subVectors(this.origin,t);const h=c*this.direction.dot(Xc.crossVectors($s,Xc));if(h<0)return null;const f=c*this.direction.dot(Vd.cross($s));if(f<0||h+f>l)return null;const p=-c*$s.dot(Gd);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ee{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){ee.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const y=this.elements;return y[0]=t,y[4]=e,y[8]=n,y[12]=i,y[1]=o,y[5]=l,y[9]=c,y[13]=h,y[2]=f,y[6]=p,y[10]=m,y[14]=g,y[3]=v,y[7]=x,y[11]=b,y[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ee().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Xr.setFromMatrixColumn(t,0).length(),o=1/Xr.setFromMatrixColumn(t,1).length(),l=1/Xr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(BE,t,zE)}lookAt(t,e,n){const i=this.elements;return mi.subVectors(t,e),mi.lengthSq()===0&&(mi.z=1),mi.normalize(),ta.crossVectors(n,mi),ta.lengthSq()===0&&(Math.abs(n.z)===1?mi.x+=1e-4:mi.z+=1e-4,mi.normalize(),ta.crossVectors(n,mi)),ta.normalize(),qc.crossVectors(mi,ta),i[0]=ta.x,i[4]=qc.x,i[8]=mi.x,i[1]=ta.y,i[5]=qc.y,i[9]=mi.y,i[2]=ta.z,i[6]=qc.z,i[10]=mi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],y=n[14],E=n[3],A=n[7],T=n[11],L=n[15],U=i[0],I=i[4],z=i[8],w=i[12],C=i[1],F=i[5],$=i[9],W=i[13],K=i[2],at=i[6],V=i[10],it=i[14],Y=i[3],ct=i[7],gt=i[11],St=i[15];return o[0]=l*U+c*C+h*K+f*Y,o[4]=l*I+c*F+h*at+f*ct,o[8]=l*z+c*$+h*V+f*gt,o[12]=l*w+c*W+h*it+f*St,o[1]=p*U+m*C+g*K+v*Y,o[5]=p*I+m*F+g*at+v*ct,o[9]=p*z+m*$+g*V+v*gt,o[13]=p*w+m*W+g*it+v*St,o[2]=x*U+b*C+S*K+y*Y,o[6]=x*I+b*F+S*at+y*ct,o[10]=x*z+b*$+S*V+y*gt,o[14]=x*w+b*W+S*it+y*St,o[3]=E*U+A*C+T*K+L*Y,o[7]=E*I+A*F+T*at+L*ct,o[11]=E*z+A*$+T*V+L*gt,o[15]=E*w+A*W+T*it+L*St,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],y=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+y*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],y=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*y+c*g*y,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*y-l*g*y,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*y+l*m*y,L=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,U=e*E+n*A+i*T+o*L;if(U===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/U;return t[0]=E*I,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*y-n*g*y)*I,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*y+n*h*y)*I,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*I,t[4]=A*I,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*y+e*g*y)*I,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*y-e*h*y)*I,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*I,t[8]=T*I,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*y-e*m*y)*I,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*y+e*c*y)*I,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*I,t[12]=L*I,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*I,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*I,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*I,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,y=c*m,E=h*f,A=h*p,T=h*m,L=n.x,U=n.y,I=n.z;return i[0]=(1-(b+y))*L,i[1]=(v+T)*L,i[2]=(x-A)*L,i[3]=0,i[4]=(v-T)*U,i[5]=(1-(g+y))*U,i[6]=(S+E)*U,i[7]=0,i[8]=(x+A)*I,i[9]=(S-E)*I,i[10]=(1-(g+b))*I,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=Xr.set(i[0],i[1],i[2]).length();const l=Xr.set(i[4],i[5],i[6]).length(),c=Xr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],zi.copy(this);const f=1/o,p=1/l,m=1/c;return zi.elements[0]*=f,zi.elements[1]*=f,zi.elements[2]*=f,zi.elements[4]*=p,zi.elements[5]*=p,zi.elements[6]*=p,zi.elements[8]*=m,zi.elements[9]*=m,zi.elements[10]*=m,e.setFromRotationMatrix(zi),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Gi){const h=this.elements,f=2*o/(e-t),p=2*o/(n-i),m=(e+t)/(e-t),g=(n+i)/(n-i);let v,x;if(c===Gi)v=-(l+o)/(l-o),x=-2*l*o/(l-o);else if(c===Ol)v=-l/(l-o),x=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Gi){const h=this.elements,f=1/(e-t),p=1/(n-i),m=1/(l-o),g=(e+t)*f,v=(n+i)*p;let x,b;if(c===Gi)x=(l+o)*m,b=-2*m;else if(c===Ol)x=o*m,b=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=b,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Xr=new B,zi=new ee,BE=new B(0,0,0),zE=new B(1,1,1),ta=new B,qc=new B,mi=new B,dv=new ee,pv=new ii;class _i{constructor(t=0,e=0,n=0,i=_i.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(oe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-oe(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(oe(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-oe(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(oe(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-oe(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return dv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(dv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return pv.setFromEuler(this),this.setFromQuaternion(pv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}_i.DEFAULT_ORDER="XYZ";class _o{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let FE=0;const mv=new B,qr=new ii,Ms=new ee,Yc=new B,al=new B,HE=new B,VE=new ii,gv=new B(1,0,0),vv=new B(0,1,0),_v=new B(0,0,1),yv={type:"added"},GE={type:"removed"},Yr={type:"childadded",child:null},kd={type:"childremoved",child:null};class De extends rs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:FE++}),this.uuid=vi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=De.DEFAULT_UP.clone();const t=new B,e=new _i,n=new ii,i=new B(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ee},normalMatrix:{value:new ce}}),this.matrix=new ee,this.matrixWorld=new ee,this.matrixAutoUpdate=De.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new _o,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return qr.setFromAxisAngle(t,e),this.quaternion.multiply(qr),this}rotateOnWorldAxis(t,e){return qr.setFromAxisAngle(t,e),this.quaternion.premultiply(qr),this}rotateX(t){return this.rotateOnAxis(gv,t)}rotateY(t){return this.rotateOnAxis(vv,t)}rotateZ(t){return this.rotateOnAxis(_v,t)}translateOnAxis(t,e){return mv.copy(t).applyQuaternion(this.quaternion),this.position.add(mv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(gv,t)}translateY(t){return this.translateOnAxis(vv,t)}translateZ(t){return this.translateOnAxis(_v,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ms.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Yc.copy(t):Yc.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),al.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ms.lookAt(al,Yc,this.up):Ms.lookAt(Yc,al,this.up),this.quaternion.setFromRotationMatrix(Ms),i&&(Ms.extractRotation(i.matrixWorld),qr.setFromRotationMatrix(Ms),this.quaternion.premultiply(qr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(yv),Yr.child=t,this.dispatchEvent(Yr),Yr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(GE),kd.child=t,this.dispatchEvent(kd),kd.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ms.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ms.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ms),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(yv),Yr.child=t,this.dispatchEvent(Yr),Yr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(al,t,HE),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(al,VE,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}De.DEFAULT_UP=new B(0,1,0);De.DEFAULT_MATRIX_AUTO_UPDATE=!0;De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Fi=new B,bs=new B,Wd=new B,Es=new B,Zr=new B,Kr=new B,xv=new B,Xd=new B,qd=new B,Yd=new B,Zd=new Re,Kd=new Re,Jd=new Re;class ei{constructor(t=new B,e=new B,n=new B){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Fi.subVectors(t,e),i.cross(Fi);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){Fi.subVectors(i,e),bs.subVectors(n,e),Wd.subVectors(t,e);const l=Fi.dot(Fi),c=Fi.dot(bs),h=Fi.dot(Wd),f=bs.dot(bs),p=bs.dot(Wd),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Es)===null?!1:Es.x>=0&&Es.y>=0&&Es.x+Es.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,Es)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,Es.x),h.addScaledVector(l,Es.y),h.addScaledVector(c,Es.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return Zd.setScalar(0),Kd.setScalar(0),Jd.setScalar(0),Zd.fromBufferAttribute(t,e),Kd.fromBufferAttribute(t,n),Jd.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(Zd,o.x),l.addScaledVector(Kd,o.y),l.addScaledVector(Jd,o.z),l}static isFrontFacing(t,e,n,i){return Fi.subVectors(n,e),bs.subVectors(t,e),Fi.cross(bs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Fi.subVectors(this.c,this.b),bs.subVectors(this.a,this.b),Fi.cross(bs).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ei.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ei.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return ei.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return ei.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ei.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;Zr.subVectors(i,n),Kr.subVectors(o,n),Xd.subVectors(t,n);const h=Zr.dot(Xd),f=Kr.dot(Xd);if(h<=0&&f<=0)return e.copy(n);qd.subVectors(t,i);const p=Zr.dot(qd),m=Kr.dot(qd);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(Zr,l);Yd.subVectors(t,o);const v=Zr.dot(Yd),x=Kr.dot(Yd);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(Kr,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return xv.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(xv,c);const y=1/(S+b+g);return l=b*y,c=g*y,e.copy(n).addScaledVector(Zr,l).addScaledVector(Kr,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const jy={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ea={h:0,s:0,l:0},Zc={h:0,s:0,l:0};function jd(a,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?a+(t-a)*6*e:e<1/2?t:e<2/3?a+(t-a)*6*(2/3-e):a}class Ot{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Ln){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,be.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=be.workingColorSpace){return this.r=t,this.g=e,this.b=n,be.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=be.workingColorSpace){if(t=_m(t,1),e=oe(e,0,1),n=oe(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=jd(l,o,t+1/3),this.g=jd(l,o,t),this.b=jd(l,o,t-1/3)}return be.toWorkingColorSpace(this,i),this}setStyle(t,e=Ln){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Ln){const n=jy[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ds(t.r),this.g=Ds(t.g),this.b=Ds(t.b),this}copyLinearToSRGB(t){return this.r=mo(t.r),this.g=mo(t.g),this.b=mo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Ln){return be.fromWorkingColorSpace(Un.copy(this),t),Math.round(oe(Un.r*255,0,255))*65536+Math.round(oe(Un.g*255,0,255))*256+Math.round(oe(Un.b*255,0,255))}getHexString(t=Ln){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=be.workingColorSpace){be.fromWorkingColorSpace(Un.copy(this),e);const n=Un.r,i=Un.g,o=Un.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=be.workingColorSpace){return be.fromWorkingColorSpace(Un.copy(this),e),t.r=Un.r,t.g=Un.g,t.b=Un.b,t}getStyle(t=Ln){be.fromWorkingColorSpace(Un.copy(this),t);const e=Un.r,n=Un.g,i=Un.b;return t!==Ln?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(ea),this.setHSL(ea.h+t,ea.s+e,ea.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ea),t.getHSL(Zc);const n=El(ea.h,Zc.h,e),i=El(ea.s,Zc.s,e),o=El(ea.l,Zc.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Un=new Ot;Ot.NAMES=jy;let kE=0;class On extends rs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:kE++}),this.uuid=vi(),this.name="",this.type="Material",this.blending=er,this.side=Us,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Fu,this.blendDst=Hu,this.blendEquation=aa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ot(0,0,0),this.blendAlpha=0,this.depthFunc=ar,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Gp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ya,this.stencilZFail=Ya,this.stencilZPass=Ya,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==er&&(n.blending=this.blending),this.side!==Us&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Fu&&(n.blendSrc=this.blendSrc),this.blendDst!==Hu&&(n.blendDst=this.blendDst),this.blendEquation!==aa&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ar&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Gp&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ya&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ya&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ya&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class fa extends On{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ot(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _i,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Cs=WE();function WE(){const a=new ArrayBuffer(4),t=new Float32Array(a),e=new Uint32Array(a),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function ti(a){Math.abs(a)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),a=oe(a,-65504,65504),Cs.floatView[0]=a;const t=Cs.uint32View[0],e=t>>23&511;return Cs.baseTable[e]+((t&8388607)>>Cs.shiftTable[e])}function ml(a){const t=a>>10;return Cs.uint32View[0]=Cs.mantissaTable[Cs.offsetTable[t]+(a&1023)]+Cs.exponentTable[t],Cs.floatView[0]}const XE={toHalfFloat:ti,fromHalfFloat:ml},cn=new B,Kc=new ht;let qE=0;class He{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:qE++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Il,this.updateRanges=[],this.gpuType=ni,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Kc.fromBufferAttribute(this,e),Kc.applyMatrix3(t),this.setXY(e,Kc.x,Kc.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix3(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix4(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyNormalMatrix(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.transformDirection(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Wn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=he(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Wn(e,this.array)),e}setX(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Wn(e,this.array)),e}setY(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Wn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Wn(e,this.array)),e}setW(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array),o=he(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Il&&(t.usage=this.usage),t}}class YE extends He{constructor(t,e,n){super(new Int8Array(t),e,n)}}class ZE extends He{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class KE extends He{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class JE extends He{constructor(t,e,n){super(new Int16Array(t),e,n)}}class ym extends He{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class jE extends He{constructor(t,e,n){super(new Int32Array(t),e,n)}}class xm extends He{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class QE extends He{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=ml(this.array[t*this.itemSize]);return this.normalized&&(e=Wn(e,this.array)),e}setX(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize]=ti(e),this}getY(t){let e=ml(this.array[t*this.itemSize+1]);return this.normalized&&(e=Wn(e,this.array)),e}setY(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+1]=ti(e),this}getZ(t){let e=ml(this.array[t*this.itemSize+2]);return this.normalized&&(e=Wn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+2]=ti(e),this}getW(t){let e=ml(this.array[t*this.itemSize+3]);return this.normalized&&(e=Wn(e,this.array)),e}setW(t,e){return this.normalized&&(e=he(e,this.array)),this.array[t*this.itemSize+3]=ti(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this.array[t+2]=ti(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array),o=he(o,this.array)),this.array[t+0]=ti(e),this.array[t+1]=ti(n),this.array[t+2]=ti(i),this.array[t+3]=ti(o),this}}class qt extends He{constructor(t,e,n){super(new Float32Array(t),e,n)}}let $E=0;const Ri=new ee,Qd=new De,Jr=new B,gi=new qn,rl=new qn,_n=new B;class de extends rs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:$E++}),this.uuid=vi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Zy(t)?xm:ym)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new ce().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ri.makeRotationFromQuaternion(t),this.applyMatrix4(Ri),this}rotateX(t){return Ri.makeRotationX(t),this.applyMatrix4(Ri),this}rotateY(t){return Ri.makeRotationY(t),this.applyMatrix4(Ri),this}rotateZ(t){return Ri.makeRotationZ(t),this.applyMatrix4(Ri),this}translate(t,e,n){return Ri.makeTranslation(t,e,n),this.applyMatrix4(Ri),this}scale(t,e,n){return Ri.makeScale(t,e,n),this.applyMatrix4(Ri),this}lookAt(t){return Qd.lookAt(t),Qd.updateMatrix(),this.applyMatrix4(Qd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Jr).negate(),this.translate(Jr.x,Jr.y,Jr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new qt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];gi.setFromBufferAttribute(o),this.morphTargetsRelative?(_n.addVectors(this.boundingBox.min,gi.min),this.boundingBox.expandByPoint(_n),_n.addVectors(this.boundingBox.max,gi.max),this.boundingBox.expandByPoint(_n)):(this.boundingBox.expandByPoint(gi.min),this.boundingBox.expandByPoint(gi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new In);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(t){const n=this.boundingSphere.center;if(gi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];rl.setFromBufferAttribute(c),this.morphTargetsRelative?(_n.addVectors(gi.min,rl.min),gi.expandByPoint(_n),_n.addVectors(gi.max,rl.max),gi.expandByPoint(_n)):(gi.expandByPoint(rl.min),gi.expandByPoint(rl.max))}gi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)_n.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(_n));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)_n.fromBufferAttribute(c,f),h&&(Jr.fromBufferAttribute(t,f),_n.add(Jr)),i=Math.max(i,n.distanceToSquared(_n))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new He(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new B,h[z]=new B;const f=new B,p=new B,m=new B,g=new ht,v=new ht,x=new ht,b=new B,S=new B;function y(z,w,C){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,w),m.fromBufferAttribute(n,C),g.fromBufferAttribute(o,z),v.fromBufferAttribute(o,w),x.fromBufferAttribute(o,C),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const F=1/(v.x*x.y-x.x*v.y);isFinite(F)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(F),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(F),c[z].add(b),c[w].add(b),c[C].add(b),h[z].add(S),h[w].add(S),h[C].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let z=0,w=E.length;z<w;++z){const C=E[z],F=C.start,$=C.count;for(let W=F,K=F+$;W<K;W+=3)y(t.getX(W+0),t.getX(W+1),t.getX(W+2))}const A=new B,T=new B,L=new B,U=new B;function I(z){L.fromBufferAttribute(i,z),U.copy(L);const w=c[z];A.copy(w),A.sub(L.multiplyScalar(L.dot(w))).normalize(),T.crossVectors(U,w);const F=T.dot(h[z])<0?-1:1;l.setXYZW(z,A.x,A.y,A.z,F)}for(let z=0,w=E.length;z<w;++z){const C=E[z],F=C.start,$=C.count;for(let W=F,K=F+$;W<K;W+=3)I(t.getX(W+0)),I(t.getX(W+1)),I(t.getX(W+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new He(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new B,o=new B,l=new B,c=new B,h=new B,f=new B,p=new B,m=new B;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)_n.fromBufferAttribute(t,e),_n.normalize(),t.setXYZ(e,_n.x,_n.y,_n.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let y=0;y<p;y++)g[x++]=f[v++]}return new He(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new de,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Sv=new ee,Oa=new Eo,Jc=new In,Mv=new B,jc=new B,Qc=new B,$c=new B,$d=new B,tu=new B,bv=new B,eu=new B;class un extends De{constructor(t=new de,e=new fa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){tu.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&($d.fromBufferAttribute(m,t),l?tu.addScaledVector($d,p):tu.addScaledVector($d.sub(e),p))}e.add(tu)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Jc.copy(n.boundingSphere),Jc.applyMatrix4(o),Oa.copy(t.ray).recast(t.near),!(Jc.containsPoint(Oa.origin)===!1&&(Oa.intersectSphere(Jc,Mv)===null||Oa.origin.distanceToSquared(Mv)>(t.far-t.near)**2))&&(Sv.copy(o).invert(),Oa.copy(t.ray).applyMatrix4(Sv),!(n.boundingBox!==null&&Oa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Oa)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],y=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,L=A;T<L;T+=3){const U=c.getX(T),I=c.getX(T+1),z=c.getX(T+2);i=nu(this,y,t,n,f,p,m,U,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,y=b;S<y;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=nu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],y=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,L=A;T<L;T+=3){const U=T,I=T+1,z=T+2;i=nu(this,y,t,n,f,p,m,U,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,y=b;S<y;S+=3){const E=S,A=S+1,T=S+2;i=nu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function t1(a,t,e,n,i,o,l,c){let h;if(t.side===Xn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Us,c),h===null)return null;eu.copy(c),eu.applyMatrix4(a.matrixWorld);const f=e.ray.origin.distanceTo(eu);return f<e.near||f>e.far?null:{distance:f,point:eu.clone(),object:a}}function nu(a,t,e,n,i,o,l,c,h,f){a.getVertexPosition(c,jc),a.getVertexPosition(h,Qc),a.getVertexPosition(f,$c);const p=t1(a,t,e,n,jc,Qc,$c,bv);if(p){const m=new B;ei.getBarycoord(bv,jc,Qc,$c,m),i&&(p.uv=ei.getInterpolatedAttribute(i,c,h,f,m,new ht)),o&&(p.uv1=ei.getInterpolatedAttribute(o,c,h,f,m,new ht)),l&&(p.normal=ei.getInterpolatedAttribute(l,c,h,f,m,new B),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new B,materialIndex:0};ei.getNormal(jc,Qc,$c,g.normal),p.face=g,p.barycoord=m}return p}class hr extends de{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new qt(f,3)),this.setAttribute("normal",new qt(p,3)),this.setAttribute("uv",new qt(m,2));function x(b,S,y,E,A,T,L,U,I,z,w){const C=T/I,F=L/z,$=T/2,W=L/2,K=U/2,at=I+1,V=z+1;let it=0,Y=0;const ct=new B;for(let gt=0;gt<V;gt++){const St=gt*F-W;for(let Pt=0;Pt<at;Pt++){const le=Pt*C-$;ct[b]=le*E,ct[S]=St*A,ct[y]=K,f.push(ct.x,ct.y,ct.z),ct[b]=0,ct[S]=0,ct[y]=U>0?1:-1,p.push(ct.x,ct.y,ct.z),m.push(Pt/I),m.push(1-gt/z),it+=1}}for(let gt=0;gt<z;gt++)for(let St=0;St<I;St++){const Pt=g+St+at*gt,le=g+St+at*(gt+1),nt=g+(St+1)+at*(gt+1),_t=g+(St+1)+at*gt;h.push(Pt,le,_t),h.push(le,nt,_t),Y+=6}c.addGroup(v,Y,w),v+=Y,g+=it}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function yo(a){const t={};for(const e in a){t[e]={};for(const n in a[e]){const i=a[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Gn(a){const t={};for(let e=0;e<a.length;e++){const n=yo(a[e]);for(const i in n)t[i]=n[i]}return t}function e1(a){const t=[];for(let e=0;e<a.length;e++)t.push(a[e].clone());return t}function Qy(a){const t=a.getRenderTarget();return t===null?a.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:be.workingColorSpace}const $y={clone:yo,merge:Gn};var n1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,i1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Wi extends On{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=n1,this.fragmentShader=i1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=yo(t.uniforms),this.uniformsGroups=e1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Vh extends De{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ee,this.projectionMatrix=new ee,this.projectionMatrixInverse=new ee,this.coordinateSystem=Gi}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const na=new B,Ev=new ht,Tv=new ht;class yn extends Vh{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=vo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(ir*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return vo*2*Math.atan(Math.tan(ir*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){na.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(na.x,na.y).multiplyScalar(-t/na.z),na.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(na.x,na.y).multiplyScalar(-t/na.z)}getViewSize(t,e){return this.getViewBounds(t,Ev,Tv),e.subVectors(Tv,Ev)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(ir*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const jr=-90,Qr=1;class tx extends De{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new yn(jr,Qr,t,e);i.layers=this.layers,this.add(i);const o=new yn(jr,Qr,t,e);o.layers=this.layers,this.add(o);const l=new yn(jr,Qr,t,e);l.layers=this.layers,this.add(l);const c=new yn(jr,Qr,t,e);c.layers=this.layers,this.add(c);const h=new yn(jr,Qr,t,e);h.layers=this.layers,this.add(h);const f=new yn(jr,Qr,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Gi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===Ol)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class Jl extends sn{constructor(t,e,n,i,o,l,c,h,f,p){t=t!==void 0?t:[],e=e!==void 0?e:Ns,super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ex extends as{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Jl(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:fn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new hr(5,5,5),o=new Wi({name:"CubemapFromEquirect",uniforms:yo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Xn,blending:Rs});o.uniforms.tEquirect.value=e;const l=new un(i,o),c=e.minFilter;return e.minFilter===es&&(e.minFilter=fn),new tx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,i){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class ho extends De{constructor(){super(),this.isGroup=!0,this.type="Group"}}const s1={type:"move"};class Ou{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ho,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ho,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ho,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),y=this._getHandJoint(f,b);S!==null&&(y.matrix.fromArray(S.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=S.radius),y.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(s1)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new ho;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Gh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ot(t),this.density=e}clone(){return new Gh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class kh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ot(t),this.near=e,this.far=n}clone(){return new kh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Sm extends De{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new _i,this.environmentIntensity=1,this.environmentRotation=new _i,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Wh{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Il,this.updateRanges=[],this.version=0,this.uuid=vi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=vi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Vn=new B;class lr{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Vn.fromBufferAttribute(this,e),Vn.applyMatrix4(t),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Vn.fromBufferAttribute(this,e),Vn.applyNormalMatrix(t),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Vn.fromBufferAttribute(this,e),Vn.transformDirection(t),this.setXYZ(e,Vn.x,Vn.y,Vn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Wn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=he(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=he(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=he(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=he(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=he(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Wn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Wn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Wn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Wn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=he(e,this.array),n=he(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=he(e,this.array),n=he(n,this.array),i=he(i,this.array),o=he(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new He(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new lr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Mm extends On{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ot(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let $r;const ol=new B,to=new B,eo=new B,no=new ht,ll=new ht,nx=new ee,iu=new B,cl=new B,su=new B,Av=new ht,tp=new ht,Cv=new ht;class ix extends De{constructor(t=new Mm){if(super(),this.isSprite=!0,this.type="Sprite",$r===void 0){$r=new de;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Wh(e,5);$r.setIndex([0,1,2,0,2,3]),$r.setAttribute("position",new lr(n,3,0,!1)),$r.setAttribute("uv",new lr(n,2,3,!1))}this.geometry=$r,this.material=t,this.center=new ht(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),to.setFromMatrixScale(this.matrixWorld),nx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),eo.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&to.multiplyScalar(-eo.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;au(iu.set(-.5,-.5,0),eo,l,to,i,o),au(cl.set(.5,-.5,0),eo,l,to,i,o),au(su.set(.5,.5,0),eo,l,to,i,o),Av.set(0,0),tp.set(1,0),Cv.set(1,1);let c=t.ray.intersectTriangle(iu,cl,su,!1,ol);if(c===null&&(au(cl.set(-.5,.5,0),eo,l,to,i,o),tp.set(0,1),c=t.ray.intersectTriangle(iu,su,cl,!1,ol),c===null))return;const h=t.ray.origin.distanceTo(ol);h<t.near||h>t.far||e.push({distance:h,point:ol.clone(),uv:ei.getInterpolation(ol,iu,cl,su,Av,tp,Cv,new ht),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function au(a,t,e,n,i,o){no.subVectors(a,e).addScalar(.5).multiply(n),i!==void 0?(ll.x=o*no.x-i*no.y,ll.y=i*no.x+o*no.y):ll.copy(no),a.copy(t),a.x+=ll.x,a.y+=ll.y,a.applyMatrix4(nx)}const ru=new B,wv=new B;class sx extends De{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){ru.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(ru);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){ru.setFromMatrixPosition(t.matrixWorld),wv.setFromMatrixPosition(this.matrixWorld);const n=ru.distanceTo(wv)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Rv=new B,Dv=new Re,Uv=new Re,a1=new B,Nv=new ee,ou=new B,ep=new In,Lv=new ee,np=new Eo;class ax extends un{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Vp,this.bindMatrix=new ee,this.bindMatrixInverse=new ee,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new qn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,ou),this.boundingBox.expandByPoint(ou)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new In),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,ou),this.boundingSphere.expandByPoint(ou)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ep.copy(this.boundingSphere),ep.applyMatrix4(i),t.ray.intersectsSphere(ep)!==!1&&(Lv.copy(i).invert(),np.copy(t.ray).applyMatrix4(Lv),!(this.boundingBox!==null&&np.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,np)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Re,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Vp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Py?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Dv.fromBufferAttribute(i.attributes.skinIndex,t),Uv.fromBufferAttribute(i.attributes.skinWeight,t),Rv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=Uv.getComponent(o);if(l!==0){const c=Dv.getComponent(o);Nv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(a1.copy(Rv).applyMatrix4(Nv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class bm extends De{constructor(){super(),this.isBone=!0,this.type="Bone"}}class is extends sn{constructor(t=null,e=1,n=1,i,o,l,c,h,f=En,p=En,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Pv=new ee,r1=new ee;class Xh{constructor(t=[],e=[]){this.uuid=vi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ee)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new ee;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:r1;Pv.multiplyMatrices(c,e[o]),Pv.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Xh(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new is(e,t,t,Pn,ni);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new bm),this.bones.push(l),this.boneInverses.push(new ee().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class xo extends He{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const io=new ee,Iv=new ee,lu=[],Ov=new qn,o1=new ee,ul=new un,hl=new In;class rx extends un{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new xo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,o1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new qn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),Ov.copy(t.boundingBox).applyMatrix4(io),this.boundingBox.union(Ov)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new In),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),hl.copy(t.boundingSphere).applyMatrix4(io),this.boundingSphere.union(hl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(ul.geometry=this.geometry,ul.material=this.material,ul.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),hl.copy(this.boundingSphere),hl.applyMatrix4(n),t.ray.intersectsSphere(hl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,io),Iv.multiplyMatrices(n,io),ul.matrixWorld=Iv,ul.raycast(t,lu);for(let l=0,c=lu.length;l<c;l++){const h=lu[l];h.instanceId=o,h.object=this,e.push(h)}lu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new xo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new is(new Float32Array(i*this.count),i,this.count,Ih,ni));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}const ip=new B,l1=new B,c1=new ce;class sa{constructor(t=new B(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ip.subVectors(n,e).cross(l1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(ip),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||c1.getNormalMatrix(t),i=this.coplanarPoint(ip).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ba=new In,cu=new B;class jl{constructor(t=new sa,e=new sa,n=new sa,i=new sa,o=new sa,l=new sa){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Gi){const n=this.planes,i=t.elements,o=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],b=i[10],S=i[11],y=i[12],E=i[13],A=i[14],T=i[15];if(n[0].setComponents(h-o,g-f,S-v,T-y).normalize(),n[1].setComponents(h+o,g+f,S+v,T+y).normalize(),n[2].setComponents(h+l,g+p,S+x,T+E).normalize(),n[3].setComponents(h-l,g-p,S-x,T-E).normalize(),n[4].setComponents(h-c,g-m,S-b,T-A).normalize(),e===Gi)n[5].setComponents(h+c,g+m,S+b,T+A).normalize();else if(e===Ol)n[5].setComponents(c,m,b,A).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ba.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ba.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ba)}intersectsSprite(t){return Ba.center.set(0,0,0),Ba.radius=.7071067811865476,Ba.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ba)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(cu.x=i.normal.x>0?t.max.x:t.min.x,cu.y=i.normal.y>0?t.max.y:t.min.y,cu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(cu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function sp(a,t){return a-t}function u1(a,t){return a.z-t.z}function h1(a,t){return t.z-a.z}class f1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const $n=new ee,d1=new Ot(1,1,1),ap=new jl,uu=new qn,za=new In,fl=new B,Bv=new B,p1=new B,rp=new f1,Nn=new un,hu=[];function m1(a,t,e=0){const n=t.itemSize;if(a.isInterleavedBufferAttribute||a.array.constructor!==t.array.constructor){const i=a.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,a.getComponent(o,l))}else t.array.set(a.array,e*n);t.needsUpdate=!0}function Fa(a,t){if(a.constructor!==t.constructor){const e=Math.min(a.length,t.length);for(let n=0;n<e;n++)t[n]=a[n]}else{const e=Math.min(a.length,t.length);t.set(new a.constructor(a.buffer,0,e))}}class ox extends un{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(t,e,n=e*2,i){super(new de,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new is(e,t,t,Pn,ni);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new is(e,t,t,Zl,Ls);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new is(e,t,t,Pn,ni);n.colorSpace=be.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new He(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new He(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,$n),this.getBoundingBoxAt(o,uu).applyMatrix4($n),t.union(uu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new In);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,$n),this.getBoundingSphereAt(o,za).applyMatrix4($n),t.union(za)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(sp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;$n.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(d1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(sp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);m1(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let y=0;y<v;y++)g.setComponent(S,y,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new qn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(fl.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new In;this.getBoundingBoxAt(t,uu),uu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),fl.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(fl))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(sp);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Fa(this._multiDrawCounts,i),Fa(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Fa(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Fa(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Fa(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new de,this._initializeGeometry(o));const l=this.geometry;o.index&&Fa(o.index.array,l.index.array);for(const c in o.attributes)Fa(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;Nn.material=this.material,Nn.geometry.index=l.index,Nn.geometry.attributes=l.attributes,Nn.geometry.boundingBox===null&&(Nn.geometry.boundingBox=new qn),Nn.geometry.boundingSphere===null&&(Nn.geometry.boundingSphere=new In);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Nn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Nn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,Nn.geometry.boundingBox),this.getBoundingSphereAt(f,Nn.geometry.boundingSphere),Nn.raycast(t,hu);for(let m=0,g=hu.length;m<g;m++){const v=hu[m];v.object=this,v.batchId=c,e.push(v)}hu.length=0}Nn.material=null,Nn.geometry.index=null,Nn.geometry.attributes={},Nn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._geometryCount=t._geometryCount,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data;g&&($n.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),ap.setFromProjectionMatrix($n,t.coordinateSystem));let b=0;if(this.sortObjects){$n.copy(this.matrixWorld).invert(),fl.setFromMatrixPosition(n.matrixWorld).applyMatrix4($n),Bv.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection($n);for(let E=0,A=h.length;E<A;E++)if(h[E].visible&&h[E].active){const T=h[E].geometryIndex;this.getMatrixAt(E,$n),this.getBoundingSphereAt(T,za).applyMatrix4($n);let L=!1;if(g&&(L=!ap.intersectsSphere(za)),!L){const U=m[T],I=p1.subVectors(za.center,fl).dot(Bv);rp.push(U.start,U.count,I,E)}}const S=rp.list,y=this.customSort;y===null?S.sort(o.transparent?h1:u1):y.call(this,S,n);for(let E=0,A=S.length;E<A;E++){const T=S[E];f[b]=T.start*c,p[b]=T.count,x[b]=T.index,b++}rp.reset()}else for(let S=0,y=h.length;S<y;S++)if(h[S].visible&&h[S].active){const E=h[S].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(S,$n),this.getBoundingSphereAt(E,za).applyMatrix4($n),A=!ap.intersectsSphere(za)),!A){const T=m[E];f[b]=T.start*c,p[b]=T.count,x[b]=S,b++}}v.needsUpdate=!0,this._multiDrawCount=b,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class Yn extends On{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ot(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Sh=new B,Mh=new B,zv=new ee,dl=new Eo,fu=new In,op=new B,Fv=new B;class ua extends De{constructor(t=new de,e=new Yn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Sh.fromBufferAttribute(e,i-1),Mh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Sh.distanceTo(Mh);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fu.copy(n.boundingSphere),fu.applyMatrix4(i),fu.radius+=o,t.ray.intersectsSphere(fu)===!1)return;zv.copy(i).invert(),dl.copy(t.ray).applyMatrix4(zv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const y=p.getX(b),E=p.getX(b+1),A=du(this,t,dl,h,y,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),y=du(this,t,dl,h,b,S,x-1);y&&e.push(y)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const y=du(this,t,dl,h,b,b+1,b);y&&e.push(y)}if(this.isLineLoop){const b=du(this,t,dl,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function du(a,t,e,n,i,o,l){const c=a.geometry.attributes.position;if(Sh.fromBufferAttribute(c,i),Mh.fromBufferAttribute(c,o),e.distanceSqToSegment(Sh,Mh,op,Fv)>n)return;op.applyMatrix4(a.matrixWorld);const f=t.ray.origin.distanceTo(op);if(!(f<t.near||f>t.far))return{distance:f,point:Fv.clone().applyMatrix4(a.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:a}}const Hv=new B,Vv=new B;class os extends ua{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)Hv.fromBufferAttribute(e,i),Vv.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hv.distanceTo(Vv);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class lx extends ua{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Em extends On{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ot(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Gv=new ee,Wp=new Eo,pu=new In,mu=new B;class cx extends De{constructor(t=new de,e=new Em){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),pu.copy(n.boundingSphere),pu.applyMatrix4(i),pu.radius+=o,t.ray.intersectsSphere(pu)===!1)return;Gv.copy(i).invert(),Wp.copy(t.ray).applyMatrix4(Gv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);mu.fromBufferAttribute(m,S),kv(mu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)mu.fromBufferAttribute(m,x),kv(mu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function kv(a,t,e,n,i,o,l){const c=Wp.distanceSqToPoint(a);if(c<e){const h=new B;Wp.closestPointToPoint(a,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class ux extends sn{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:fn,this.magFilter=o!==void 0?o:fn,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class g1 extends ux{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class v1 extends sn{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=En,this.minFilter=En,this.generateMipmaps=!1,this.needsUpdate=!0}}class qh extends sn{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class _1 extends qh{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Di,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class y1 extends qh{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Ns),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class x1 extends sn{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Tm extends sn{constructor(t,e,n,i,o,l,c,h,f,p=nr){if(p!==nr&&p!==or)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===nr&&(n=Ls),n===void 0&&p===or&&(n=rr),super(null,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=c!==void 0?c:En,this.minFilter=h!==void 0?h:En,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Xi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new ht:new B);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new B,i=[],o=[],l=[],c=new B,h=new ee;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new B)}o[0]=new B,l[0]=new B;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(oe(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(oe(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Yh extends Xi{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new ht){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class hx extends Yh{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Am(){let a=0,t=0,e=0,n=0;function i(o,l,c,h){a=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return a+t*o+e*l+n*c}}}const gu=new B,lp=new Am,cp=new Am,up=new Am;class fx extends Xi{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new B){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(gu.subVectors(i[0],i[1]).add(i[0]),f=gu);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(gu.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=gu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),lp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),cp.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),up.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(lp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),cp.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),up.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(lp.calc(h),cp.calc(h),up.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new B().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Wv(a,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=a*a,h=a*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*a+e}function S1(a,t){const e=1-a;return e*e*t}function M1(a,t){return 2*(1-a)*a*t}function b1(a,t){return a*a*t}function Tl(a,t,e,n){return S1(a,t)+M1(a,e)+b1(a,n)}function E1(a,t){const e=1-a;return e*e*e*t}function T1(a,t){const e=1-a;return 3*e*e*a*t}function A1(a,t){return 3*(1-a)*a*a*t}function C1(a,t){return a*a*a*t}function Al(a,t,e,n,i){return E1(a,t)+T1(a,e)+A1(a,n)+C1(a,i)}class Cm extends Xi{constructor(t=new ht,e=new ht,n=new ht,i=new ht){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ht){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Al(t,i.x,o.x,l.x,c.x),Al(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class dx extends Xi{constructor(t=new B,e=new B,n=new B,i=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new B){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Al(t,i.x,o.x,l.x,c.x),Al(t,i.y,o.y,l.y,c.y),Al(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class wm extends Xi{constructor(t=new ht,e=new ht){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ht){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ht){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class px extends Xi{constructor(t=new B,e=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new B){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new B){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Rm extends Xi{constructor(t=new ht,e=new ht,n=new ht){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ht){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Tl(t,i.x,o.x,l.x),Tl(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Dm extends Xi{constructor(t=new B,e=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new B){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Tl(t,i.x,o.x,l.x),Tl(t,i.y,o.y,l.y),Tl(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Um extends Xi{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ht){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(Wv(c,h.x,f.x,p.x,m.x),Wv(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ht().fromArray(i))}return this}}var bh=Object.freeze({__proto__:null,ArcCurve:hx,CatmullRomCurve3:fx,CubicBezierCurve:Cm,CubicBezierCurve3:dx,EllipseCurve:Yh,LineCurve:wm,LineCurve3:px,QuadraticBezierCurve:Rm,QuadraticBezierCurve3:Dm,SplineCurve:Um});class mx extends Xi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new bh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new bh[i.type]().fromJSON(i))}return this}}class zl extends mx{constructor(t){super(),this.type="Path",this.currentPoint=new ht,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new wm(this.currentPoint.clone(),new ht(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Rm(this.currentPoint.clone(),new ht(t,e),new ht(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new Cm(this.currentPoint.clone(),new ht(t,e),new ht(n,i),new ht(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Um(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new Yh(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Ql extends de{constructor(t=[new ht(0,-.5),new ht(.5,0),new ht(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=oe(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new B,g=new ht,v=new B,x=new B,b=new B;let S=0,y=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,y=t[E+1].y-t[E].y,v.x=y*1,v.y=-S,v.z=y*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,y=t[E+1].y-t[E].y,v.x=y*1,v.y=-S,v.z=y*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),L=Math.cos(A);for(let U=0;U<=t.length-1;U++){m.x=t[U].x*T,m.y=t[U].y,m.z=t[U].x*L,l.push(m.x,m.y,m.z),g.x=E/e,g.y=U/(t.length-1),c.push(g.x,g.y);const I=h[3*U+0]*T,z=h[3*U+1],w=h[3*U+0]*L;f.push(I,z,w)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,L=T,U=T+t.length,I=T+t.length+1,z=T+1;o.push(L,U,z),o.push(I,z,U)}this.setIndex(o),this.setAttribute("position",new qt(l,3)),this.setAttribute("uv",new qt(c,2)),this.setAttribute("normal",new qt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ql(t.points,t.segments,t.phiStart,t.phiLength)}}class Zh extends Ql{constructor(t=1,e=1,n=4,i=8){const o=new zl;o.absarc(0,-e/2,t,Math.PI*1.5,0),o.absarc(0,e/2,t,0,Math.PI*.5),super(o.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:n,radialSegments:i}}static fromJSON(t){return new Zh(t.radius,t.length,t.capSegments,t.radialSegments)}}class Kh extends de{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new B,p=new ht;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new qt(l,3)),this.setAttribute("normal",new qt(c,3)),this.setAttribute("uv",new qt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Kh(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class To extends de{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let y=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function E(){const T=new B,L=new B;let U=0;const I=(e-t)/n;for(let z=0;z<=o;z++){const w=[],C=z/o,F=C*(e-t)+t;for(let $=0;$<=i;$++){const W=$/i,K=W*h+c,at=Math.sin(K),V=Math.cos(K);L.x=F*at,L.y=-C*n+S,L.z=F*V,m.push(L.x,L.y,L.z),T.set(at,I,V).normalize(),g.push(T.x,T.y,T.z),v.push(W,1-C),w.push(x++)}b.push(w)}for(let z=0;z<i;z++)for(let w=0;w<o;w++){const C=b[w][z],F=b[w+1][z],$=b[w+1][z+1],W=b[w][z+1];(t>0||w!==0)&&(p.push(C,F,W),U+=3),(e>0||w!==o-1)&&(p.push(F,$,W),U+=3)}f.addGroup(y,U,0),y+=U}function A(T){const L=x,U=new ht,I=new B;let z=0;const w=T===!0?t:e,C=T===!0?1:-1;for(let $=1;$<=i;$++)m.push(0,S*C,0),g.push(0,C,0),v.push(.5,.5),x++;const F=x;for(let $=0;$<=i;$++){const K=$/i*h+c,at=Math.cos(K),V=Math.sin(K);I.x=w*V,I.y=S*C,I.z=w*at,m.push(I.x,I.y,I.z),g.push(0,C,0),U.x=at*.5+.5,U.y=V*.5*C+.5,v.push(U.x,U.y),x++}for(let $=0;$<i;$++){const W=L+$,K=F+$;T===!0?p.push(K,K+1,W):p.push(K+1,K,W),z+=3}f.addGroup(y,z,T===!0?1:2),y+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new To(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Jh extends To{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new Jh(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class da extends de{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new qt(o,3)),this.setAttribute("normal",new qt(o.slice(),3)),this.setAttribute("uv",new qt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new B,T=new B,L=new B;for(let U=0;U<e.length;U+=3)v(e[U+0],A),v(e[U+1],T),v(e[U+2],L),h(A,T,L,E)}function h(E,A,T,L){const U=L+1,I=[];for(let z=0;z<=U;z++){I[z]=[];const w=E.clone().lerp(T,z/U),C=A.clone().lerp(T,z/U),F=U-z;for(let $=0;$<=F;$++)$===0&&z===U?I[z][$]=w:I[z][$]=w.clone().lerp(C,$/F)}for(let z=0;z<U;z++)for(let w=0;w<2*(U-z)-1;w++){const C=Math.floor(w/2);w%2===0?(g(I[z][C+1]),g(I[z+1][C]),g(I[z][C])):(g(I[z][C+1]),g(I[z+1][C+1]),g(I[z+1][C]))}}function f(E){const A=new B;for(let T=0;T<o.length;T+=3)A.x=o[T+0],A.y=o[T+1],A.z=o[T+2],A.normalize().multiplyScalar(E),o[T+0]=A.x,o[T+1]=A.y,o[T+2]=A.z}function p(){const E=new B;for(let A=0;A<o.length;A+=3){E.x=o[A+0],E.y=o[A+1],E.z=o[A+2];const T=S(E)/2/Math.PI+.5,L=y(E)/Math.PI+.5;l.push(T,1-L)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],L=l[E+4],U=Math.max(A,T,L),I=Math.min(A,T,L);U>.9&&I<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),L<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new B,A=new B,T=new B,L=new B,U=new ht,I=new ht,z=new ht;for(let w=0,C=0;w<o.length;w+=9,C+=6){E.set(o[w+0],o[w+1],o[w+2]),A.set(o[w+3],o[w+4],o[w+5]),T.set(o[w+6],o[w+7],o[w+8]),U.set(l[C+0],l[C+1]),I.set(l[C+2],l[C+3]),z.set(l[C+4],l[C+5]),L.copy(E).add(A).add(T).divideScalar(3);const F=S(L);b(U,C+0,E,F),b(I,C+2,A,F),b(z,C+4,T,F)}}function b(E,A,T,L){L<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=L/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function y(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new da(t.vertices,t.indices,t.radius,t.details)}}class jh extends da{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new jh(t.radius,t.detail)}}const vu=new B,_u=new B,hp=new B,yu=new ei;class gx extends de{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(ir*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:y}=yu;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),y.fromBufferAttribute(c,f[2]),yu.getNormal(hp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],L=m[A],U=yu[p[E]],I=yu[p[A]],z=`${T}_${L}`,w=`${L}_${T}`;w in g&&g[w]?(hp.dot(g[w].normal)<=o&&(v.push(U.x,U.y,U.z),v.push(I.x,I.y,I.z)),g[w]=null):z in g||(g[z]={index0:f[E],index1:f[A],normal:hp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];vu.fromBufferAttribute(c,b),_u.fromBufferAttribute(c,S),v.push(vu.x,vu.y,vu.z),v.push(_u.x,_u.y,_u.z)}this.setAttribute("position",new qt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class sr extends zl{constructor(t){super(t),this.uuid=vi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new zl().fromJSON(i))}return this}}const w1={triangulate:function(a,t,e=2){const n=t&&t.length,i=n?t[0]*e:a.length;let o=vx(a,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f,p,m,g,v;if(n&&(o=L1(a,t,o,e)),a.length>80*e){c=f=a[0],h=p=a[1];for(let x=e;x<i;x+=e)m=a[x],g=a[x+1],m<c&&(c=m),g<h&&(h=g),m>f&&(f=m),g>p&&(p=g);v=Math.max(f-c,p-h),v=v!==0?32767/v:0}return Fl(o,l,e,c,h,v,0),l}};function vx(a,t,e,n,i){let o,l;if(i===W1(a,t,e,n)>0)for(o=t;o<e;o+=n)l=Xv(o,a[o],a[o+1],l);else for(o=e-n;o>=t;o-=n)l=Xv(o,a[o],a[o+1],l);return l&&Qh(l,l.next)&&(Vl(l),l=l.next),l}function cr(a,t){if(!a)return a;t||(t=a);let e=a,n;do if(n=!1,!e.steiner&&(Qh(e,e.next)||je(e.prev,e,e.next)===0)){if(Vl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Fl(a,t,e,n,i,o,l){if(!a)return;!l&&o&&z1(a,n,i,o);let c=a,h,f;for(;a.prev!==a.next;){if(h=a.prev,f=a.next,o?D1(a,n,i,o):R1(a)){t.push(h.i/e|0),t.push(a.i/e|0),t.push(f.i/e|0),Vl(a),a=f.next,c=f.next;continue}if(a=f,a===c){l?l===1?(a=U1(cr(a),t,e),Fl(a,t,e,n,i,o,2)):l===2&&N1(a,t,e,n,i,o):Fl(cr(a),t,e,n,i,o,1);break}}}function R1(a){const t=a.prev,e=a,n=a.next;if(je(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=i<o?i<l?i:l:o<l?o:l,m=c<h?c<f?c:f:h<f?h:f,g=i>o?i>l?i:l:o>l?o:l,v=c>h?c>f?c:f:h>f?h:f;let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&fo(i,c,o,h,l,f,x.x,x.y)&&je(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function D1(a,t,e,n){const i=a.prev,o=a,l=a.next;if(je(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=c<h?c<f?c:f:h<f?h:f,x=p<m?p<g?p:g:m<g?m:g,b=c>h?c>f?c:f:h>f?h:f,S=p>m?p>g?p:g:m>g?m:g,y=Xp(v,x,t,e,n),E=Xp(b,S,t,e,n);let A=a.prevZ,T=a.nextZ;for(;A&&A.z>=y&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&fo(c,p,h,m,f,g,A.x,A.y)&&je(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&fo(c,p,h,m,f,g,T.x,T.y)&&je(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=y;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&fo(c,p,h,m,f,g,A.x,A.y)&&je(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&fo(c,p,h,m,f,g,T.x,T.y)&&je(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function U1(a,t,e){let n=a;do{const i=n.prev,o=n.next.next;!Qh(i,o)&&_x(i,n,n.next,o)&&Hl(i,o)&&Hl(o,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(o.i/e|0),Vl(n),Vl(n.next),n=a=o),n=n.next}while(n!==a);return cr(n)}function N1(a,t,e,n,i,o){let l=a;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&V1(l,c)){let h=yx(l,c);l=cr(l,l.next),h=cr(h,h.next),Fl(l,t,e,n,i,o,0),Fl(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==a)}function L1(a,t,e,n){const i=[];let o,l,c,h,f;for(o=0,l=t.length;o<l;o++)c=t[o]*n,h=o<l-1?t[o+1]*n:a.length,f=vx(a,c,h,n,!1),f===f.next&&(f.steiner=!0),i.push(H1(f));for(i.sort(P1),o=0;o<i.length;o++)e=I1(i[o],e);return e}function P1(a,t){return a.x-t.x}function I1(a,t){const e=O1(a,t);if(!e)return t;const n=yx(e,a);return cr(n,n.next),cr(e,e.next)}function O1(a,t){let e=t,n=-1/0,i;const o=a.x,l=a.y;do{if(l<=e.y&&l>=e.next.y&&e.next.y!==e.y){const g=e.x+(l-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(g<=o&&g>n&&(n=g,i=e.x<e.next.x?e:e.next,g===o))return i}e=e.next}while(e!==t);if(!i)return null;const c=i,h=i.x,f=i.y;let p=1/0,m;e=i;do o>=e.x&&e.x>=h&&o!==e.x&&fo(l<f?o:n,l,h,f,l<f?n:o,l,e.x,e.y)&&(m=Math.abs(l-e.y)/(o-e.x),Hl(e,a)&&(m<p||m===p&&(e.x>i.x||e.x===i.x&&B1(i,e)))&&(i=e,p=m)),e=e.next;while(e!==c);return i}function B1(a,t){return je(a.prev,a,t.prev)<0&&je(t.next,a,a.next)<0}function z1(a,t,e,n){let i=a;do i.z===0&&(i.z=Xp(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==a);i.prevZ.nextZ=null,i.prevZ=null,F1(i)}function F1(a){let t,e,n,i,o,l,c,h,f=1;do{for(e=a,a=null,o=null,l=0;e;){for(l++,n=e,c=0,t=0;t<f&&(c++,n=n.nextZ,!!n);t++);for(h=f;c>0||h>0&&n;)c!==0&&(h===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,c--):(i=n,n=n.nextZ,h--),o?o.nextZ=i:a=i,i.prevZ=o,o=i;e=n}o.nextZ=null,f*=2}while(l>1);return a}function Xp(a,t,e,n,i){return a=(a-e)*i|0,t=(t-n)*i|0,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,a|t<<1}function H1(a){let t=a,e=a;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==a);return e}function fo(a,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(a-l)*(o-c)&&(a-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function V1(a,t){return a.next.i!==t.i&&a.prev.i!==t.i&&!G1(a,t)&&(Hl(a,t)&&Hl(t,a)&&k1(a,t)&&(je(a.prev,a,t.prev)||je(a,t.prev,t))||Qh(a,t)&&je(a.prev,a,a.next)>0&&je(t.prev,t,t.next)>0)}function je(a,t,e){return(t.y-a.y)*(e.x-t.x)-(t.x-a.x)*(e.y-t.y)}function Qh(a,t){return a.x===t.x&&a.y===t.y}function _x(a,t,e,n){const i=Su(je(a,t,e)),o=Su(je(a,t,n)),l=Su(je(e,n,a)),c=Su(je(e,n,t));return!!(i!==o&&l!==c||i===0&&xu(a,e,t)||o===0&&xu(a,n,t)||l===0&&xu(e,a,n)||c===0&&xu(e,t,n))}function xu(a,t,e){return t.x<=Math.max(a.x,e.x)&&t.x>=Math.min(a.x,e.x)&&t.y<=Math.max(a.y,e.y)&&t.y>=Math.min(a.y,e.y)}function Su(a){return a>0?1:a<0?-1:0}function G1(a,t){let e=a;do{if(e.i!==a.i&&e.next.i!==a.i&&e.i!==t.i&&e.next.i!==t.i&&_x(e,e.next,a,t))return!0;e=e.next}while(e!==a);return!1}function Hl(a,t){return je(a.prev,a,a.next)<0?je(a,t,a.next)>=0&&je(a,a.prev,t)>=0:je(a,t,a.prev)<0||je(a,a.next,t)<0}function k1(a,t){let e=a,n=!1;const i=(a.x+t.x)/2,o=(a.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==a);return n}function yx(a,t){const e=new qp(a.i,a.x,a.y),n=new qp(t.i,t.x,t.y),i=a.next,o=t.prev;return a.next=t,t.prev=a,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function Xv(a,t,e,n){const i=new qp(a,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Vl(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function qp(a,t,e){this.i=a,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function W1(a,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(a[l]-a[o])*(a[o+1]+a[l+1]),l=o;return i}class ss{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return ss.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];qv(t),Yv(n,t);let l=t.length;e.forEach(qv);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,Yv(n,e[h]);const c=w1.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function qv(a){const t=a.length;t>2&&a[t-1].equals(a[0])&&a.pop()}function Yv(a,t){for(let e=0;e<t.length;e++)a.push(t[e].x),a.push(t[e].y)}class $h extends de{constructor(t=new sr([new ht(.5,.5),new ht(-.5,.5),new ht(-.5,-.5),new ht(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new qt(i,3)),this.setAttribute("uv",new qt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const y=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:X1;let A,T=!1,L,U,I,z;y&&(A=y.getSpacedPoints(p),T=!0,g=!1,L=y.computeFrenetFrames(p,!1),U=new B,I=new B,z=new B),g||(S=0,v=0,x=0,b=0);const w=c.extractPoints(f);let C=w.shape;const F=w.holes;if(!ss.isClockWise(C)){C=C.reverse();for(let mt=0,ft=F.length;mt<ft;mt++){const O=F[mt];ss.isClockWise(O)&&(F[mt]=O.reverse())}}const W=ss.triangulateShape(C,F),K=C;for(let mt=0,ft=F.length;mt<ft;mt++){const O=F[mt];C=C.concat(O)}function at(mt,ft,O){return ft||console.error("THREE.ExtrudeGeometry: vec does not exist"),mt.clone().addScaledVector(ft,O)}const V=C.length,it=W.length;function Y(mt,ft,O){let Wt,vt,Dt;const Et=mt.x-ft.x,Qt=mt.y-ft.y,Tt=O.x-mt.x,P=O.y-mt.y,R=Et*Et+Qt*Qt,J=Et*P-Qt*Tt;if(Math.abs(J)>Number.EPSILON){const rt=Math.sqrt(R),dt=Math.sqrt(Tt*Tt+P*P),lt=ft.x-Qt/rt,kt=ft.y+Et/rt,wt=O.x-P/dt,zt=O.y+Tt/dt,me=((wt-lt)*P-(zt-kt)*Tt)/(Et*P-Qt*Tt);Wt=lt+Et*me-mt.x,vt=kt+Qt*me-mt.y;const yt=Wt*Wt+vt*vt;if(yt<=2)return new ht(Wt,vt);Dt=Math.sqrt(yt/2)}else{let rt=!1;Et>Number.EPSILON?Tt>Number.EPSILON&&(rt=!0):Et<-Number.EPSILON?Tt<-Number.EPSILON&&(rt=!0):Math.sign(Qt)===Math.sign(P)&&(rt=!0),rt?(Wt=-Qt,vt=Et,Dt=Math.sqrt(R)):(Wt=Et,vt=Qt,Dt=Math.sqrt(R/2))}return new ht(Wt/Dt,vt/Dt)}const ct=[];for(let mt=0,ft=K.length,O=ft-1,Wt=mt+1;mt<ft;mt++,O++,Wt++)O===ft&&(O=0),Wt===ft&&(Wt=0),ct[mt]=Y(K[mt],K[O],K[Wt]);const gt=[];let St,Pt=ct.concat();for(let mt=0,ft=F.length;mt<ft;mt++){const O=F[mt];St=[];for(let Wt=0,vt=O.length,Dt=vt-1,Et=Wt+1;Wt<vt;Wt++,Dt++,Et++)Dt===vt&&(Dt=0),Et===vt&&(Et=0),St[Wt]=Y(O[Wt],O[Dt],O[Et]);gt.push(St),Pt=Pt.concat(St)}for(let mt=0;mt<S;mt++){const ft=mt/S,O=v*Math.cos(ft*Math.PI/2),Wt=x*Math.sin(ft*Math.PI/2)+b;for(let vt=0,Dt=K.length;vt<Dt;vt++){const Et=at(K[vt],ct[vt],Wt);bt(Et.x,Et.y,-O)}for(let vt=0,Dt=F.length;vt<Dt;vt++){const Et=F[vt];St=gt[vt];for(let Qt=0,Tt=Et.length;Qt<Tt;Qt++){const P=at(Et[Qt],St[Qt],Wt);bt(P.x,P.y,-O)}}}const le=x+b;for(let mt=0;mt<V;mt++){const ft=g?at(C[mt],Pt[mt],le):C[mt];T?(I.copy(L.normals[0]).multiplyScalar(ft.x),U.copy(L.binormals[0]).multiplyScalar(ft.y),z.copy(A[0]).add(I).add(U),bt(z.x,z.y,z.z)):bt(ft.x,ft.y,0)}for(let mt=1;mt<=p;mt++)for(let ft=0;ft<V;ft++){const O=g?at(C[ft],Pt[ft],le):C[ft];T?(I.copy(L.normals[mt]).multiplyScalar(O.x),U.copy(L.binormals[mt]).multiplyScalar(O.y),z.copy(A[mt]).add(I).add(U),bt(z.x,z.y,z.z)):bt(O.x,O.y,m/p*mt)}for(let mt=S-1;mt>=0;mt--){const ft=mt/S,O=v*Math.cos(ft*Math.PI/2),Wt=x*Math.sin(ft*Math.PI/2)+b;for(let vt=0,Dt=K.length;vt<Dt;vt++){const Et=at(K[vt],ct[vt],Wt);bt(Et.x,Et.y,m+O)}for(let vt=0,Dt=F.length;vt<Dt;vt++){const Et=F[vt];St=gt[vt];for(let Qt=0,Tt=Et.length;Qt<Tt;Qt++){const P=at(Et[Qt],St[Qt],Wt);T?bt(P.x,P.y+A[p-1].y,A[p-1].x+O):bt(P.x,P.y,m+O)}}}nt(),_t();function nt(){const mt=i.length/3;if(g){let ft=0,O=V*ft;for(let Wt=0;Wt<it;Wt++){const vt=W[Wt];Xt(vt[2]+O,vt[1]+O,vt[0]+O)}ft=p+S*2,O=V*ft;for(let Wt=0;Wt<it;Wt++){const vt=W[Wt];Xt(vt[0]+O,vt[1]+O,vt[2]+O)}}else{for(let ft=0;ft<it;ft++){const O=W[ft];Xt(O[2],O[1],O[0])}for(let ft=0;ft<it;ft++){const O=W[ft];Xt(O[0]+V*p,O[1]+V*p,O[2]+V*p)}}n.addGroup(mt,i.length/3-mt,0)}function _t(){const mt=i.length/3;let ft=0;Bt(K,ft),ft+=K.length;for(let O=0,Wt=F.length;O<Wt;O++){const vt=F[O];Bt(vt,ft),ft+=vt.length}n.addGroup(mt,i.length/3-mt,1)}function Bt(mt,ft){let O=mt.length;for(;--O>=0;){const Wt=O;let vt=O-1;vt<0&&(vt=mt.length-1);for(let Dt=0,Et=p+S*2;Dt<Et;Dt++){const Qt=V*Dt,Tt=V*(Dt+1),P=ft+Wt+Qt,R=ft+vt+Qt,J=ft+vt+Tt,rt=ft+Wt+Tt;xe(P,R,J,rt)}}}function bt(mt,ft,O){h.push(mt),h.push(ft),h.push(O)}function Xt(mt,ft,O){Yt(mt),Yt(ft),Yt(O);const Wt=i.length/3,vt=E.generateTopUV(n,i,Wt-3,Wt-2,Wt-1);ve(vt[0]),ve(vt[1]),ve(vt[2])}function xe(mt,ft,O,Wt){Yt(mt),Yt(ft),Yt(Wt),Yt(ft),Yt(O),Yt(Wt);const vt=i.length/3,Dt=E.generateSideWallUV(n,i,vt-6,vt-3,vt-2,vt-1);ve(Dt[0]),ve(Dt[1]),ve(Dt[3]),ve(Dt[1]),ve(Dt[2]),ve(Dt[3])}function Yt(mt){i.push(h[mt*3+0]),i.push(h[mt*3+1]),i.push(h[mt*3+2])}function ve(mt){o.push(mt.x),o.push(mt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return q1(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new bh[i.type]().fromJSON(i)),new $h(n,t.options)}}const X1={generateTopUV:function(a,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new ht(o,l),new ht(c,h),new ht(f,p)]},generateSideWallUV:function(a,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],y=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new ht(l,1-h),new ht(f,1-m),new ht(g,1-x),new ht(b,1-y)]:[new ht(c,1-h),new ht(p,1-m),new ht(v,1-x),new ht(S,1-y)]}};function q1(a,t,e){if(e.shapes=[],Array.isArray(a))for(let n=0,i=a.length;n<i;n++){const o=a[n];e.shapes.push(o.uuid)}else e.shapes.push(a.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class tf extends da{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new tf(t.radius,t.detail)}}class $l extends da{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new $l(t.radius,t.detail)}}class Ao extends de{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let y=0;y<p;y++){const E=y*g-l;for(let A=0;A<f;A++){const T=A*m-o;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-y/h)}}for(let y=0;y<h;y++)for(let E=0;E<c;E++){const A=E+f*y,T=E+f*(y+1),L=E+1+f*(y+1),U=E+1+f*y;v.push(A,T,U),v.push(T,L,U)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(b,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ao(t.width,t.height,t.widthSegments,t.heightSegments)}}class ef extends de{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new B,x=new ht;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const y=o+S/n*l;v.x=m*Math.cos(y),v.y=m*Math.sin(y),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let y=0;y<n;y++){const E=y+S,A=E,T=E+n+1,L=E+n+2,U=E+1;c.push(A,T,U),c.push(T,L,U)}}this.setIndex(c),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ef(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class nf extends de{constructor(t=new sr([new ht(0,.5),new ht(-.5,-.5),new ht(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new qt(i,3)),this.setAttribute("normal",new qt(o,3)),this.setAttribute("uv",new qt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;ss.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,y=x.length;S<y;S++){const E=x[S];ss.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=ss.triangulateShape(v,x);for(let S=0,y=x.length;S<y;S++){const E=x[S];v=v.concat(E)}for(let S=0,y=v.length;S<y;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,y=b.length;S<y;S++){const E=b[S],A=E[0]+m,T=E[1]+m,L=E[2]+m;n.push(A,T,L),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return Y1(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new nf(n,t.curveSegments)}}function Y1(a,t){if(t.shapes=[],Array.isArray(a))for(let e=0,n=a.length;e<n;e++){const i=a[e];t.shapes.push(i.uuid)}else t.shapes.push(a.uuid);return t}class tc extends de{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new B,g=new B,v=[],x=[],b=[],S=[];for(let y=0;y<=n;y++){const E=[],A=y/n;let T=0;y===0&&l===0?T=.5/e:y===n&&h===Math.PI&&(T=-.5/e);for(let L=0;L<=e;L++){const U=L/e;m.x=-t*Math.cos(i+U*o)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+U*o)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(U+T,1-A),E.push(f++)}p.push(E)}for(let y=0;y<n;y++)for(let E=0;E<e;E++){const A=p[y][E+1],T=p[y][E],L=p[y+1][E],U=p[y+1][E+1];(y!==0||l>0)&&v.push(A,T,U),(y!==n-1||h<Math.PI)&&v.push(T,L,U)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(b,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new tc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class sf extends da{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new sf(t.radius,t.detail)}}class af extends de{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new B,m=new B,g=new B;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,y=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,y,E)}this.setIndex(l),this.setAttribute("position",new qt(c,3)),this.setAttribute("normal",new qt(h,3)),this.setAttribute("uv",new qt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new af(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class rf extends de{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new B,g=new B,v=new B,x=new B,b=new B,S=new B,y=new B;for(let A=0;A<=n;++A){const T=A/n*o*Math.PI*2;E(T,o,l,t,v),E(T+.01,o,l,t,x),S.subVectors(x,v),y.addVectors(x,v),b.crossVectors(S,y),y.crossVectors(b,S),b.normalize(),y.normalize();for(let L=0;L<=i;++L){const U=L/i*Math.PI*2,I=-e*Math.cos(U),z=e*Math.sin(U);m.x=v.x+(I*y.x+z*b.x),m.y=v.y+(I*y.y+z*b.y),m.z=v.z+(I*y.z+z*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(L/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const L=(i+1)*(A-1)+(T-1),U=(i+1)*A+(T-1),I=(i+1)*A+T,z=(i+1)*(A-1)+T;c.push(L,U,z),c.push(U,I,z)}this.setIndex(c),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(p,2));function E(A,T,L,U,I){const z=Math.cos(A),w=Math.sin(A),C=L/T*A,F=Math.cos(C);I.x=U*(2+F)*.5*z,I.y=U*(2+F)*w*.5,I.z=U*Math.sin(C)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class of extends de{constructor(t=new Dm(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new B,h=new B,f=new ht;let p=new B;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function b(){for(let A=0;A<e;A++)S(A);S(o===!1?e:0),E(),y()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],L=l.binormals[A];for(let U=0;U<=i;U++){const I=U/i*Math.PI*2,z=Math.sin(I),w=-Math.cos(I);h.x=w*T.x+z*L.x,h.y=w*T.y+z*L.y,h.z=w*T.z+z*L.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function y(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const L=(i+1)*(A-1)+(T-1),U=(i+1)*A+(T-1),I=(i+1)*A+T,z=(i+1)*(A-1)+T;x.push(L,U,z),x.push(U,I,z)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new of(new bh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class xx extends de{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new B,o=new B;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const y=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,y),o.fromBufferAttribute(l,E),Zv(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),Zv(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new qt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function Zv(a,t,e){const n=`${a.x},${a.y},${a.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${a.x},${a.y},${a.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var Kv=Object.freeze({__proto__:null,BoxGeometry:hr,CapsuleGeometry:Zh,CircleGeometry:Kh,ConeGeometry:Jh,CylinderGeometry:To,DodecahedronGeometry:jh,EdgesGeometry:gx,ExtrudeGeometry:$h,IcosahedronGeometry:tf,LatheGeometry:Ql,OctahedronGeometry:$l,PlaneGeometry:Ao,PolyhedronGeometry:da,RingGeometry:ef,ShapeGeometry:nf,SphereGeometry:tc,TetrahedronGeometry:sf,TorusGeometry:af,TorusKnotGeometry:rf,TubeGeometry:of,WireframeGeometry:xx});class Sx extends On{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ot(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Mx extends Wi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Nm extends On{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ot(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _i,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class bx extends Nm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ht(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return oe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ot(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ot(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ot(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Ex extends On{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ot(16777215),this.specular=new Ot(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _i,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Tx extends On{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ot(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Ax extends On{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Cx extends On{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ot(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _i,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Lm extends On{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=zy,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Pm extends On{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class wx extends On{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ot(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Rx extends Yn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function $a(a,t,e){return!a||!e&&a.constructor===t?a:typeof t.BYTES_PER_ELEMENT=="number"?new t(a):Array.prototype.slice.call(a)}function Dx(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)}function Ux(a){function t(i,o){return a[i]-a[o]}const e=a.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function Yp(a,t,e){const n=a.length,i=new a.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=a[c+h]}return i}function Im(a,t,e,n){let i=1,o=a[0];for(;o!==void 0&&o[n]===void 0;)o=a[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push.apply(e,l)),o=a[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=a[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=a[i++];while(o!==void 0)}function Z1(a,t,e,n,i=30){const o=a.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=$a(m,f.times.constructor),f.values=$a(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function K1(a,t=0,e=a,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=a.tracks.find(function(y){return y.name===c.name&&y.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const y=p,E=m-p;b=c.values.slice(y,E)}else if(o>=c.times[x]){const y=x*m+p,E=y+m-p;b=c.values.slice(y,E)}else{const y=c.createInterpolant(),E=p,A=m-p;y.evaluate(o),b=y.resultBuffer.slice(E,A)}h==="quaternion"&&new ii().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let y=0;y<S;++y){const E=y*v+g;if(h==="quaternion")ii.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return a.blendMode=gm,a}const J1={convertArray:$a,isTypedArray:Dx,getKeyframeOrder:Ux,sortedArray:Yp,flattenJSON:Im,subclip:Z1,makeClipAdditive:K1};class ec{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Nx extends ec{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ja,endingEnd:Ja}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case ja:o=t,c=2*e-n;break;case Ll:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case ja:l=t,h=2*n-e;break;case Ll:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,y=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let L=0;L!==c;++L)o[L]=y*l[p+L]+E*l[f+L]+A*l[h+L]+T*l[m+L];return o}}class Om extends ec{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class Lx extends ec{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class qi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=$a(e,this.TimeBufferType),this.values=$a(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:$a(t.times,Array),values:$a(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Lx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Om(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Nx(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Nl:e=this.InterpolantFactoryMethodDiscrete;break;case xh:e=this.InterpolantFactoryMethodLinear;break;case Iu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Nl;case this.InterpolantFactoryMethodLinear:return xh;case this.InterpolantFactoryMethodSmooth:return Iu}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&Dx(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Iu,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}qi.prototype.TimeBufferType=Float32Array;qi.prototype.ValueBufferType=Float32Array;qi.prototype.DefaultInterpolation=xh;class fr extends qi{constructor(t,e,n){super(t,e,n)}}fr.prototype.ValueTypeName="bool";fr.prototype.ValueBufferType=Array;fr.prototype.DefaultInterpolation=Nl;fr.prototype.InterpolantFactoryMethodLinear=void 0;fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Bm extends qi{}Bm.prototype.ValueTypeName="color";class Gl extends qi{}Gl.prototype.ValueTypeName="number";class Px extends ec{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)ii.slerpFlat(o,0,l,f-c,l,f,h);return o}}class nc extends qi{InterpolantFactoryMethodLinear(t){return new Px(this.times,this.values,this.getValueSize(),t)}}nc.prototype.ValueTypeName="quaternion";nc.prototype.InterpolantFactoryMethodSmooth=void 0;class dr extends qi{constructor(t,e,n){super(t,e,n)}}dr.prototype.ValueTypeName="string";dr.prototype.ValueBufferType=Array;dr.prototype.DefaultInterpolation=Nl;dr.prototype.InterpolantFactoryMethodLinear=void 0;dr.prototype.InterpolantFactoryMethodSmooth=void 0;class kl extends qi{}kl.prototype.ValueTypeName="vector";class Wl{constructor(t="",e=-1,n=[],i=zh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=vi(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(Q1(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(qi.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=Ux(h);h=Yp(h,1,p),f=Yp(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new Gl(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],y=[];Im(v,S,y,x),S.length!==0&&b.push(new m(g,S,y))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],y=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),y.push(A.morphTarget===b?1:0)}i.push(new Gl(".morphTargetInfluence["+b+"]",S,y))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(kl,v+".position",g,"pos",i),n(nc,v+".quaternion",g,"rot",i),n(kl,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function j1(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Gl;case"vector":case"vector2":case"vector3":case"vector4":return kl;case"color":return Bm;case"quaternion":return nc;case"bool":case"boolean":return fr;case"string":return dr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}function Q1(a){if(a.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=j1(a.type);if(a.times===void 0){const e=[],n=[];Im(a.keys,e,n,"value"),a.times=e,a.values=n}return t.parse!==void 0?t.parse(a):new t(a.name,a.times,a.values,a.interpolation)}const ws={enabled:!1,files:{},add:function(a,t){this.enabled!==!1&&(this.files[a]=t)},get:function(a){if(this.enabled!==!1)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class zm{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const Ix=new zm;class si{constructor(t){this.manager=t!==void 0?t:Ix,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}si.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ts={};class $1 extends Error{constructor(t,e){super(t),this.response=e}}class Ps extends si{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=ws.get(t);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Ts[t]!==void 0){Ts[t].push({onLoad:e,onProgress:n,onError:i});return}Ts[t]=[],Ts[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Ts[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(y){E();function E(){m.read().then(({done:A,value:T})=>{if(A)y.close();else{b+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let U=0,I=p.length;U<I;U++){const z=p[U];z.onProgress&&z.onProgress(L)}y.enqueue(T),E()}},A=>{y.error(A)})}}});return new Response(S)}else throw new $1(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c===void 0)return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{ws.add(t,f);const p=Ts[t];delete Ts[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Ts[t];if(p===void 0)throw this.manager.itemError(t),f;delete Ts[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class tT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ps(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Wl.parse(t[n]);e.push(i)}return e}}class eT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new qh,h=new Ps(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=fn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=fn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}class Xl extends si{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ws.get(t);if(l!==void 0)return o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l;const c=Bl("img");function h(){p(),ws.add(t,this),e&&e(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),o.manager.itemStart(t),c.src=t,c}}class nT extends si{constructor(t){super(t)}load(t,e,n,i){const o=new Jl;o.colorSpace=Ln;const l=new Xl(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class iT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new is,c=new Ps(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Di,l.wrapT=f.wrapT!==void 0?f.wrapT:Di,l.magFilter=f.magFilter!==void 0?f.magFilter:fn,l.minFilter=f.minFilter!==void 0?f.minFilter:fn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=es),f.mipmapCount===1&&(l.minFilter=fn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class sT extends si{constructor(t){super(t)}load(t,e,n,i){const o=new sn,l=new Xl(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class pa extends De{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ot(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Ox extends pa{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ot(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const fp=new ee,Jv=new B,jv=new B;class Fm{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ht(512,512),this.map=null,this.mapPass=null,this.matrix=new ee,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new jl,this._frameExtents=new ht(1,1),this._viewportCount=1,this._viewports=[new Re(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Jv.setFromMatrixPosition(t.matrixWorld),e.position.copy(Jv),jv.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(jv),e.updateMatrixWorld(),fp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(fp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class aT extends Fm{constructor(){super(new yn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=vo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Bx extends pa{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new aT}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Qv=new ee,pl=new B,dp=new B;class rT extends Fm{constructor(){super(new yn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ht(4,2),this._viewportCount=6,this._viewports=[new Re(2,1,1,1),new Re(0,1,1,1),new Re(3,1,1,1),new Re(1,1,1,1),new Re(3,0,1,1),new Re(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),pl.setFromMatrixPosition(t.matrixWorld),n.position.copy(pl),dp.copy(n.position),dp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(dp),n.updateMatrixWorld(),i.makeTranslation(-pl.x,-pl.y,-pl.z),Qv.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Qv)}}class zx extends pa{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new rT}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ic extends Vh{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class oT extends Fm{constructor(){super(new ic(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Fx extends pa{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.shadow=new oT}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Hx extends pa{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Vx extends pa{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Gx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new B)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class kx extends pa{constructor(t=new Gx,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class lf extends si{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Ps(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Ot().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new Ot().setHex(l.value);break;case"v2":i.uniforms[o].value=new ht().fromArray(l.value);break;case"v3":i.uniforms[o].value=new B().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Re().fromArray(l.value);break;case"m3":i.uniforms[o].value=new ce().fromArray(l.value);break;case"m4":i.uniforms[o].value=new ee().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new ht().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ht().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return lf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Sx,SpriteMaterial:Mm,RawShaderMaterial:Mx,ShaderMaterial:Wi,PointsMaterial:Em,MeshPhysicalMaterial:bx,MeshStandardMaterial:Nm,MeshPhongMaterial:Ex,MeshToonMaterial:Tx,MeshNormalMaterial:Ax,MeshLambertMaterial:Cx,MeshDepthMaterial:Lm,MeshDistanceMaterial:Pm,MeshBasicMaterial:fa,MeshMatcapMaterial:wx,LineDashedMaterial:Rx,LineBasicMaterial:Yn,Material:On};return new e[t]}}class Zp{static decodeText(t){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Wx extends de{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Xx extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ps(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],y=o(v,S.buffer),E=uo(S.type,y),A=new Wh(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],y=new Uint32Array(S).buffer;return n[x]=y,y}const l=t.isInstancedBufferGeometry?new Wx:new de,c=t.data.index;if(c!==void 0){const v=uo(c.type,c.array);l.setIndex(new He(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new lr(S,x.itemSize,x.offset,x.normalized)}else{const S=uo(x.type,x.array),y=x.isInstancedBufferAttribute?xo:He;b=new y(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,y=x.length;S<y;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new lr(T,E.itemSize,E.offset,E.normalized)}else{const T=uo(E.type,E.array);A=new He(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;if(g!==void 0){const v=new B;g.center!==void 0&&v.fromArray(g.center),l.boundingSphere=new In(v,g.radius)}return t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class lT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?Zp.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Ps(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?Zp.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Ps(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new sr().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new Xh().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new Xx;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in Kv?c=Kv[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new lf;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=Wl.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:uo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new zm(e);o=new Xl(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],y=c(S);y!==null&&(y instanceof HTMLImageElement?v.push(y):v.push(new is(y.data,y.width,y.height)))}i[m.uuid]=new Qa(v)}else{const v=c(m.url);i[m.uuid]=new Qa(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:uo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new Xl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new is(x.data,x.width,x.height)))}n[h.uuid]=new Qa(p)}else{const p=await o(h.url);n[h.uuid]=new Qa(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new Jl,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new is:p=new sn,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,cT)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],$v),p.wrapT=n(c.wrap[1],$v)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,t_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,t_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Sm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Ot(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new kh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new Gh(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new yn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new ic(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new Hx(t.color,t.intensity);break;case"DirectionalLight":l=new Fx(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new zx(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new Vx(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new Bx(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new Ox(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new kx().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new ax(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new un(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new rx(p,m,g),l.instanceMatrix=new xo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new xo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new ox(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._visibility=t.visibility,l._active=t.active,l._bounds=t.bounds.map(b=>{const S=new qn;S.min.fromArray(b.boxMin),S.max.fromArray(b.boxMax);const y=new In;return y.radius=b.sphereRadius,y.center.fromArray(b.sphereCenter),{boxInitialized:b.boxInitialized,box:S,sphereInitialized:b.sphereInitialized,sphere:y}}),l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._geometryCount=t.geometryCount,l._matricesTexture=f(t.matricesTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid));break;case"LOD":l=new sx;break;case"Line":l=new ua(c(t.geometry),h(t.material));break;case"LineLoop":l=new lx(c(t.geometry),h(t.material));break;case"LineSegments":l=new os(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new cx(c(t.geometry),h(t.material));break;case"Sprite":l=new ix(h(t.material));break;case"Group":l=new ho;break;case"Bone":l=new bm;break;default:l=new De}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new De}})}}const cT={UVMapping:Uh,CubeReflectionMapping:Ns,CubeRefractionMapping:la,EquirectangularReflectionMapping:wl,EquirectangularRefractionMapping:Rl,CubeUVReflectionMapping:Mo},$v={RepeatWrapping:Dl,ClampToEdgeWrapping:Di,MirroredRepeatWrapping:Ul},t_={NearestFilter:En,NearestMipmapNearestFilter:rm,NearestMipmapLinearFilter:co,LinearFilter:fn,LinearMipmapNearestFilter:_l,LinearMipmapLinearFilter:es};class uT extends si{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ws.get(t);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{e&&e(f),o.manager.itemEnd(t)}).catch(f=>{i&&i(f)});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return ws.add(t,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),ws.remove(t),o.manager.itemError(t),o.manager.itemEnd(t)});ws.add(t,h),o.manager.itemStart(t)}}let Mu;class Hm{static getContext(){return Mu===void 0&&(Mu=new(window.AudioContext||window.webkitAudioContext)),Mu}static setContext(t){Mu=t}}class hT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ps(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);Hm.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const e_=new ee,n_=new ee,Ha=new ee;class fT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new yn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new yn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Ha.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(ir*e.fov*.5)/e.zoom;let c,h;n_.elements[12]=-i,e_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,Ha.elements[0]=2*e.near/(h-c),Ha.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(Ha),c=-l*e.aspect-o,h=l*e.aspect-o,Ha.elements[0]=2*e.near/(h-c),Ha.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(Ha)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(n_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(e_)}}class qx extends yn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t,this.index=0}}class Vm{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=i_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=i_();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function i_(){return performance.now()}const Va=new B,s_=new ii,dT=new B,Ga=new B;class pT extends De{constructor(){super(),this.type="AudioListener",this.context=Hm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Vm}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Va,s_,dT),Ga.set(0,0,-1).applyQuaternion(s_),e.positionX){const i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Va.x,i),e.positionY.linearRampToValueAtTime(Va.y,i),e.positionZ.linearRampToValueAtTime(Va.z,i),e.forwardX.linearRampToValueAtTime(Ga.x,i),e.forwardY.linearRampToValueAtTime(Ga.y,i),e.forwardZ.linearRampToValueAtTime(Ga.z,i),e.upX.linearRampToValueAtTime(n.x,i),e.upY.linearRampToValueAtTime(n.y,i),e.upZ.linearRampToValueAtTime(n.z,i)}else e.setPosition(Va.x,Va.y,Va.z),e.setOrientation(Ga.x,Ga.y,Ga.z,n.x,n.y,n.z)}}class Yx extends De{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const ka=new B,a_=new ii,mT=new B,Wa=new B;class gT extends Yx{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ka,a_,mT),Wa.set(0,0,1).applyQuaternion(a_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(ka.x,n),e.positionY.linearRampToValueAtTime(ka.y,n),e.positionZ.linearRampToValueAtTime(ka.z,n),e.orientationX.linearRampToValueAtTime(Wa.x,n),e.orientationY.linearRampToValueAtTime(Wa.y,n),e.orientationZ.linearRampToValueAtTime(Wa.z,n)}else e.setPosition(ka.x,ka.y,ka.z),e.setOrientation(Wa.x,Wa.y,Wa.z)}}class vT{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Zx{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){ii.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;ii.multiplyQuaternionsFlat(t,l,t,e,t,n),ii.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const Gm="\\[\\]\\.:\\/",_T=new RegExp("["+Gm+"]","g"),km="[^"+Gm+"]",yT="[^"+Gm.replace("\\.","")+"]",xT=/((?:WC+[\/:])*)/.source.replace("WC",km),ST=/(WCOD+)?/.source.replace("WCOD",yT),MT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",km),bT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",km),ET=new RegExp("^"+xT+ST+MT+bT+"$"),TT=["material","materials","bones","map"];class AT{constructor(t,e,n){const i=n||we.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class we{constructor(t,e,n){this.path=e,this.parsedPath=n||we.parseTrackName(e),this.node=we.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new we.Composite(t,e,n):new we(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(_T,"")}static parseTrackName(t){const e=ET.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);TT.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=we.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}we.Composite=AT;we.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};we.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};we.prototype.GetterByBindingType=[we.prototype._getValue_direct,we.prototype._getValue_array,we.prototype._getValue_arrayElement,we.prototype._getValue_toArray];we.prototype.SetterByBindingTypeAndVersioning=[[we.prototype._setValue_direct,we.prototype._setValue_direct_setNeedsUpdate,we.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[we.prototype._setValue_array,we.prototype._setValue_array_setNeedsUpdate,we.prototype._setValue_array_setMatrixWorldNeedsUpdate],[we.prototype._setValue_arrayElement,we.prototype._setValue_arrayElement_setNeedsUpdate,we.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[we.prototype._setValue_fromArray,we.prototype._setValue_fromArray_setNeedsUpdate,we.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class CT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=vi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new we(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let y=0,E=l;y!==E;++y){const A=o[y],T=A[b];let L=A[x];A[x]=T,L===void 0&&(L=new we(g,n[y],i[y])),A[b]=L}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],y=b[p];b[p]=S,b[m]=y}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,y=i;S!==y;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new we(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class Kx{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:Ja,endingEnd:Ja};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Oy,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case gm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case zh:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===By;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===Iy){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=ja,i.endingEnd=ja):(t?i.endingStart=this.zeroSlopeAtStart?ja:Ja:i.endingStart=Ll,e?i.endingEnd=this.zeroSlopeAtEnd?ja:Ja:i.endingEnd=Ll)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const wT=new Float32Array(1);class RT extends rs{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new Zx(we.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Om(new Float32Array(2),new Float32Array(2),1,wT),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?Wl.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=zh),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new Kx(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?Wl.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class DT extends Fh{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Hh(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class UT extends Fh{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Kl(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Wm{constructor(t){this.value=t}clone(){return new Wm(this.value.clone===void 0?this.value:this.value.clone())}}let NT=0;class LT extends rs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:NT++}),this.name="",this.usage=Il,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class PT extends Wh{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class IT{constructor(t,e,n,i,o){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const r_=new ee;class Xm{constructor(t,e,n=0,i=1/0){this.ray=new Eo(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new _o,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return r_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(r_),this}intersectObject(t,e=!0,n=[]){return Kp(t,this,n,e),n.sort(o_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)Kp(t[i],this,n,e);return n.sort(o_),n}}function o_(a,t){return a.distance-t.distance}function Kp(a,t,e,n){let i=!0;if(a.layers.test(t.layers)&&a.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=a.children;for(let l=0,c=o.length;l<c;l++)Kp(o[l],t,e,!0)}}class OT{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=oe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(oe(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class BT{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class qm{constructor(t,e,n,i){qm.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const l_=new ht;class zT{constructor(t=new ht(1/0,1/0),e=new ht(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=l_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,l_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const c_=new B,bu=new B;class FT{constructor(t=new B,e=new B){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){c_.subVectors(t,this.start),bu.subVectors(this.end,this.start);const n=bu.dot(bu);let o=bu.dot(c_)/n;return e&&(o=oe(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const u_=new B;class HT extends De{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new de,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new qt(i,3));const o=new Yn({fog:!1,toneMapped:!1});this.cone=new os(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),u_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(u_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ia=new B,Eu=new ee,pp=new ee;class VT extends os{constructor(t){const e=Jx(t),n=new de,i=[],o=[],l=new Ot(0,0,1),c=new Ot(0,1,0);for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(l.r,l.g,l.b),o.push(c.r,c.g,c.b))}n.setAttribute("position",new qt(i,3)),n.setAttribute("color",new qt(o,3));const h=new Yn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");pp.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Eu.multiplyMatrices(pp,c.matrixWorld),ia.setFromMatrixPosition(Eu),i.setXYZ(l,ia.x,ia.y,ia.z),Eu.multiplyMatrices(pp,c.parent.matrixWorld),ia.setFromMatrixPosition(Eu),i.setXYZ(l+1,ia.x,ia.y,ia.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jx(a){const t=[];a.isBone===!0&&t.push(a);for(let e=0;e<a.children.length;e++)t.push.apply(t,Jx(a.children[e]));return t}class GT extends un{constructor(t,e,n){const i=new tc(e,4,2),o=new fa({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const kT=new B,h_=new Ot,f_=new Ot;class WT extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new $l(e);i.rotateY(Math.PI*.5),this.material=new fa({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new He(l,3)),this.add(new un(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");h_.copy(this.light.color),f_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?h_:f_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(kT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class XT extends os{constructor(t=10,e=10,n=4473924,i=8947848){n=new Ot(n),i=new Ot(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new de;p.setAttribute("position",new qt(h,3)),p.setAttribute("color",new qt(f,3));const m=new Yn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class qT extends os{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new Ot(o),l=new Ot(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,y=Math.cos(b)*v;c.push(S,0,y),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,y=Math.cos(b)*v,c.push(S,0,y),h.push(g.r,g.g,g.b)}}const f=new de;f.setAttribute("position",new qt(c,3)),f.setAttribute("color",new qt(h,3));const p=new Yn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const d_=new B,Tu=new B,p_=new B;class YT extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new de;i.setAttribute("position",new qt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Yn({fog:!1,toneMapped:!1});this.lightPlane=new ua(i,o),this.add(this.lightPlane),i=new de,i.setAttribute("position",new qt([0,0,0,0,0,1],3)),this.targetLine=new ua(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),d_.setFromMatrixPosition(this.light.matrixWorld),Tu.setFromMatrixPosition(this.light.target.matrixWorld),p_.subVectors(Tu,d_),this.lightPlane.lookAt(Tu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Tu),this.targetLine.scale.z=p_.length()}}const Au=new B,nn=new Vh;class ZT extends os{constructor(t){const e=new de,n=new Yn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new qt(i,3)),e.setAttribute("color",new qt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Ot(16755200),p=new Ot(16711680),m=new Ot(43775),g=new Ot(16777215),v=new Ot(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;nn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const o=this.camera.coordinateSystem===Gi?-1:0;an("c",e,t,nn,0,0,o),an("t",e,t,nn,0,0,1),an("n1",e,t,nn,-n,-i,o),an("n2",e,t,nn,n,-i,o),an("n3",e,t,nn,-n,i,o),an("n4",e,t,nn,n,i,o),an("f1",e,t,nn,-n,-i,1),an("f2",e,t,nn,n,-i,1),an("f3",e,t,nn,-n,i,1),an("f4",e,t,nn,n,i,1),an("u1",e,t,nn,n*.7,i*1.1,o),an("u2",e,t,nn,-n*.7,i*1.1,o),an("u3",e,t,nn,0,i*2,o),an("cf1",e,t,nn,-n,0,1),an("cf2",e,t,nn,n,0,1),an("cf3",e,t,nn,0,-i,1),an("cf4",e,t,nn,0,i,1),an("cn1",e,t,nn,-n,0,o),an("cn2",e,t,nn,n,0,o),an("cn3",e,t,nn,0,-i,o),an("cn4",e,t,nn,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function an(a,t,e,n,i,o,l){Au.set(i,o,l).unproject(n);const c=t[a];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Au.x,Au.y,Au.z)}}const Cu=new qn;class KT extends os{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),o=new de;o.setIndex(new He(n,1)),o.setAttribute("position",new He(i,3)),super(o,new Yn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(t!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Cu.setFromObject(this.object),Cu.isEmpty())return;const e=Cu.min,n=Cu.max,i=this.geometry.attributes.position,o=i.array;o[0]=n.x,o[1]=n.y,o[2]=n.z,o[3]=e.x,o[4]=n.y,o[5]=n.z,o[6]=e.x,o[7]=e.y,o[8]=n.z,o[9]=n.x,o[10]=e.y,o[11]=n.z,o[12]=n.x,o[13]=n.y,o[14]=e.z,o[15]=e.x,o[16]=n.y,o[17]=e.z,o[18]=e.x,o[19]=e.y,o[20]=e.z,o[21]=n.x,o[22]=e.y,o[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class JT extends os{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new de;o.setIndex(new He(n,1)),o.setAttribute("position",new qt(i,3)),super(o,new Yn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class jT extends ua{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new de;l.setAttribute("position",new qt(o,3)),l.computeBoundingSphere(),super(l,new Yn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new de;h.setAttribute("position",new qt(c,3)),h.computeBoundingSphere(),this.add(new un(h,new fa({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const m_=new B;let wu,mp;class QT extends De{constructor(t=new B(0,0,1),e=new B(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",wu===void 0&&(wu=new de,wu.setAttribute("position",new qt([0,0,0,0,1,0],3)),mp=new To(0,.5,1,5,1),mp.translate(0,-.5,0)),this.position.copy(e),this.line=new ua(wu,new Yn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new un(mp,new fa({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{m_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(m_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class $T extends os{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new de;i.setAttribute("position",new qt(e,3)),i.setAttribute("color",new qt(n,3));const o=new Yn({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new Ot,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class tA{constructor(){this.type="ShapePath",this.color=new Ot,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new zl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(y){const E=[];for(let A=0,T=y.length;A<T;A++){const L=y[A],U=new sr;U.curves=L.curves,E.push(U)}return E}function n(y,E){const A=E.length;let T=!1;for(let L=A-1,U=0;U<A;L=U++){let I=E[L],z=E[U],w=z.x-I.x,C=z.y-I.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(I=E[U],w=-w,z=E[L],C=-C),y.y<I.y||y.y>z.y)continue;if(y.y===I.y){if(y.x===I.x)return!0}else{const F=C*(y.x-I.x)-w*(y.y-I.y);if(F===0)return!0;if(F<0)continue;T=!T}}else{if(y.y!==I.y)continue;if(z.x<=y.x&&y.x<=I.x||I.x<=y.x&&y.x<=z.x)return!0}}return T}const i=ss.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new sr,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let y=0,E=o.length;y<E;y++)c=o[y],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new sr,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let y=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const L=v[A];for(let U=0;U<L.length;U++){const I=L[U];let z=!0;for(let w=0;w<g.length;w++)n(I.p,g[w].p)&&(A!==w&&E++,z?(z=!1,m[w].push(I)):y=!0);z&&m[A].push(I)}}E>0&&y===!1&&(v=m)}let S;for(let y=0,E=g.length;y<E;y++){h=g[y].s,f.push(h),S=v[y];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class eA extends rs{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function nA(a,t){const e=a.image&&a.image.width?a.image.width/a.image.height:1;return e>t?(a.repeat.x=1,a.repeat.y=e/t,a.offset.x=0,a.offset.y=(1-a.repeat.y)/2):(a.repeat.x=t/e,a.repeat.y=1,a.offset.x=(1-a.repeat.x)/2,a.offset.y=0),a}function iA(a,t){const e=a.image&&a.image.width?a.image.width/a.image.height:1;return e>t?(a.repeat.x=t/e,a.repeat.y=1,a.offset.x=(1-a.repeat.x)/2,a.offset.y=0):(a.repeat.x=1,a.repeat.y=e/t,a.offset.x=0,a.offset.y=(1-a.repeat.y)/2),a}function sA(a){return a.repeat.x=1,a.repeat.y=1,a.offset.x=0,a.offset.y=0,a}function Jp(a,t,e,n){const i=aA(n);switch(e){case um:return a*t;case fm:return a*t;case dm:return a*t*2;case Ih:return a*t/i.components*i.byteLength;case Zl:return a*t/i.components*i.byteLength;case pm:return a*t*2/i.components*i.byteLength;case Oh:return a*t*2/i.components*i.byteLength;case hm:return a*t*3/i.components*i.byteLength;case Pn:return a*t*4/i.components*i.byteLength;case Bh:return a*t*4/i.components*i.byteLength;case yl:case xl:return Math.floor((a+3)/4)*Math.floor((t+3)/4)*8;case Sl:case Ml:return Math.floor((a+3)/4)*Math.floor((t+3)/4)*16;case Ku:case ju:return Math.max(a,16)*Math.max(t,8)/4;case Zu:case Ju:return Math.max(a,8)*Math.max(t,8)/2;case Qu:case $u:return Math.floor((a+3)/4)*Math.floor((t+3)/4)*8;case th:return Math.floor((a+3)/4)*Math.floor((t+3)/4)*16;case eh:return Math.floor((a+3)/4)*Math.floor((t+3)/4)*16;case nh:return Math.floor((a+4)/5)*Math.floor((t+3)/4)*16;case ih:return Math.floor((a+4)/5)*Math.floor((t+4)/5)*16;case sh:return Math.floor((a+5)/6)*Math.floor((t+4)/5)*16;case ah:return Math.floor((a+5)/6)*Math.floor((t+5)/6)*16;case rh:return Math.floor((a+7)/8)*Math.floor((t+4)/5)*16;case oh:return Math.floor((a+7)/8)*Math.floor((t+5)/6)*16;case lh:return Math.floor((a+7)/8)*Math.floor((t+7)/8)*16;case ch:return Math.floor((a+9)/10)*Math.floor((t+4)/5)*16;case uh:return Math.floor((a+9)/10)*Math.floor((t+5)/6)*16;case hh:return Math.floor((a+9)/10)*Math.floor((t+7)/8)*16;case fh:return Math.floor((a+9)/10)*Math.floor((t+9)/10)*16;case dh:return Math.floor((a+11)/12)*Math.floor((t+9)/10)*16;case ph:return Math.floor((a+11)/12)*Math.floor((t+11)/12)*16;case bl:case mh:case gh:return Math.ceil(a/4)*Math.ceil(t/4)*16;case mm:case vh:return Math.ceil(a/4)*Math.ceil(t/4)*8;case _h:case yh:return Math.ceil(a/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function aA(a){switch(a){case ki:case om:return{byteLength:1,components:1};case go:case lm:case bo:return{byteLength:2,components:1};case Lh:case Ph:return{byteLength:2,components:4};case Ls:case Nh:case ni:return{byteLength:4,components:1};case cm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${a}.`)}const rA={contain:nA,cover:iA,fill:sA,getByteLength:Jp};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Rh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Rh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function jx(){let a=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=a.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=a.requestAnimationFrame(i),t=!0)},stop:function(){a.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){a=o}}}function oA(a){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=a.createBuffer();a.bindBuffer(h,g),a.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=a.FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=a.HALF_FLOAT:v=a.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=a.SHORT;else if(f instanceof Uint32Array)v=a.UNSIGNED_INT;else if(f instanceof Int32Array)v=a.INT;else if(f instanceof Int8Array)v=a.BYTE;else if(f instanceof Uint8Array)v=a.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=a.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(a.bindBuffer(f,c),m.length===0)a.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];a.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(a.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var lA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,cA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,uA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,hA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,dA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,pA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,mA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,vA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,_A=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,yA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,xA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,SA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,MA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,bA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,EA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,TA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,AA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,CA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,wA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,RA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,DA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,UA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,NA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,LA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,PA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,IA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,OA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,BA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,zA="gl_FragColor = linearToOutputTexel( gl_FragColor );",FA=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,HA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,VA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,GA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,kA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,WA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,XA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,qA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,YA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ZA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,KA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,JA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,jA=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,QA=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,$A=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,tC=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,eC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,nC=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,iC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,sC=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,aC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,rC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,oC=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,cC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,uC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,hC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,dC=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,pC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,mC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,gC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,vC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_C=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,yC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,xC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,SC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,MC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,bC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,EC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,TC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,AC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,CC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,wC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,RC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,DC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,UC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,NC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,LC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,PC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,IC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,OC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,BC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,zC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,FC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,HC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,VC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,GC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,kC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,WC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,XC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,qC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,YC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ZC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,KC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,JC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,jC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,QC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$C=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ew=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,nw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,iw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,sw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,aw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,rw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const ow=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,lw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,pw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,mw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,gw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,vw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,_w=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,yw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Sw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Mw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ew=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Aw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,ww=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Rw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Nw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Ow=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Fw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Hw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,fe={alphahash_fragment:lA,alphahash_pars_fragment:cA,alphamap_fragment:uA,alphamap_pars_fragment:hA,alphatest_fragment:fA,alphatest_pars_fragment:dA,aomap_fragment:pA,aomap_pars_fragment:mA,batching_pars_vertex:gA,batching_vertex:vA,begin_vertex:_A,beginnormal_vertex:yA,bsdfs:xA,iridescence_fragment:SA,bumpmap_pars_fragment:MA,clipping_planes_fragment:bA,clipping_planes_pars_fragment:EA,clipping_planes_pars_vertex:TA,clipping_planes_vertex:AA,color_fragment:CA,color_pars_fragment:wA,color_pars_vertex:RA,color_vertex:DA,common:UA,cube_uv_reflection_fragment:NA,defaultnormal_vertex:LA,displacementmap_pars_vertex:PA,displacementmap_vertex:IA,emissivemap_fragment:OA,emissivemap_pars_fragment:BA,colorspace_fragment:zA,colorspace_pars_fragment:FA,envmap_fragment:HA,envmap_common_pars_fragment:VA,envmap_pars_fragment:GA,envmap_pars_vertex:kA,envmap_physical_pars_fragment:tC,envmap_vertex:WA,fog_vertex:XA,fog_pars_vertex:qA,fog_fragment:YA,fog_pars_fragment:ZA,gradientmap_pars_fragment:KA,lightmap_pars_fragment:JA,lights_lambert_fragment:jA,lights_lambert_pars_fragment:QA,lights_pars_begin:$A,lights_toon_fragment:eC,lights_toon_pars_fragment:nC,lights_phong_fragment:iC,lights_phong_pars_fragment:sC,lights_physical_fragment:aC,lights_physical_pars_fragment:rC,lights_fragment_begin:oC,lights_fragment_maps:lC,lights_fragment_end:cC,logdepthbuf_fragment:uC,logdepthbuf_pars_fragment:hC,logdepthbuf_pars_vertex:fC,logdepthbuf_vertex:dC,map_fragment:pC,map_pars_fragment:mC,map_particle_fragment:gC,map_particle_pars_fragment:vC,metalnessmap_fragment:_C,metalnessmap_pars_fragment:yC,morphinstance_vertex:xC,morphcolor_vertex:SC,morphnormal_vertex:MC,morphtarget_pars_vertex:bC,morphtarget_vertex:EC,normal_fragment_begin:TC,normal_fragment_maps:AC,normal_pars_fragment:CC,normal_pars_vertex:wC,normal_vertex:RC,normalmap_pars_fragment:DC,clearcoat_normal_fragment_begin:UC,clearcoat_normal_fragment_maps:NC,clearcoat_pars_fragment:LC,iridescence_pars_fragment:PC,opaque_fragment:IC,packing:OC,premultiplied_alpha_fragment:BC,project_vertex:zC,dithering_fragment:FC,dithering_pars_fragment:HC,roughnessmap_fragment:VC,roughnessmap_pars_fragment:GC,shadowmap_pars_fragment:kC,shadowmap_pars_vertex:WC,shadowmap_vertex:XC,shadowmask_pars_fragment:qC,skinbase_vertex:YC,skinning_pars_vertex:ZC,skinning_vertex:KC,skinnormal_vertex:JC,specularmap_fragment:jC,specularmap_pars_fragment:QC,tonemapping_fragment:$C,tonemapping_pars_fragment:tw,transmission_fragment:ew,transmission_pars_fragment:nw,uv_pars_fragment:iw,uv_pars_vertex:sw,uv_vertex:aw,worldpos_vertex:rw,background_vert:ow,background_frag:lw,backgroundCube_vert:cw,backgroundCube_frag:uw,cube_vert:hw,cube_frag:fw,depth_vert:dw,depth_frag:pw,distanceRGBA_vert:mw,distanceRGBA_frag:gw,equirect_vert:vw,equirect_frag:_w,linedashed_vert:yw,linedashed_frag:xw,meshbasic_vert:Sw,meshbasic_frag:Mw,meshlambert_vert:bw,meshlambert_frag:Ew,meshmatcap_vert:Tw,meshmatcap_frag:Aw,meshnormal_vert:Cw,meshnormal_frag:ww,meshphong_vert:Rw,meshphong_frag:Dw,meshphysical_vert:Uw,meshphysical_frag:Nw,meshtoon_vert:Lw,meshtoon_frag:Pw,points_vert:Iw,points_frag:Ow,shadow_vert:Bw,shadow_frag:zw,sprite_vert:Fw,sprite_frag:Hw},Ct={common:{diffuse:{value:new Ot(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ce},alphaMap:{value:null},alphaMapTransform:{value:new ce},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ce}},envmap:{envMap:{value:null},envMapRotation:{value:new ce},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ce}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ce}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ce},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ce},normalScale:{value:new ht(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ce},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ce}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ce}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ce}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ot(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ot(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ce},alphaTest:{value:0},uvTransform:{value:new ce}},sprite:{diffuse:{value:new Ot(16777215)},opacity:{value:1},center:{value:new ht(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ce},alphaMap:{value:null},alphaMapTransform:{value:new ce},alphaTest:{value:0}}},Vi={basic:{uniforms:Gn([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.fog]),vertexShader:fe.meshbasic_vert,fragmentShader:fe.meshbasic_frag},lambert:{uniforms:Gn([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,Ct.lights,{emissive:{value:new Ot(0)}}]),vertexShader:fe.meshlambert_vert,fragmentShader:fe.meshlambert_frag},phong:{uniforms:Gn([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,Ct.lights,{emissive:{value:new Ot(0)},specular:{value:new Ot(1118481)},shininess:{value:30}}]),vertexShader:fe.meshphong_vert,fragmentShader:fe.meshphong_frag},standard:{uniforms:Gn([Ct.common,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.roughnessmap,Ct.metalnessmap,Ct.fog,Ct.lights,{emissive:{value:new Ot(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:fe.meshphysical_vert,fragmentShader:fe.meshphysical_frag},toon:{uniforms:Gn([Ct.common,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.gradientmap,Ct.fog,Ct.lights,{emissive:{value:new Ot(0)}}]),vertexShader:fe.meshtoon_vert,fragmentShader:fe.meshtoon_frag},matcap:{uniforms:Gn([Ct.common,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,{matcap:{value:null}}]),vertexShader:fe.meshmatcap_vert,fragmentShader:fe.meshmatcap_frag},points:{uniforms:Gn([Ct.points,Ct.fog]),vertexShader:fe.points_vert,fragmentShader:fe.points_frag},dashed:{uniforms:Gn([Ct.common,Ct.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:fe.linedashed_vert,fragmentShader:fe.linedashed_frag},depth:{uniforms:Gn([Ct.common,Ct.displacementmap]),vertexShader:fe.depth_vert,fragmentShader:fe.depth_frag},normal:{uniforms:Gn([Ct.common,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,{opacity:{value:1}}]),vertexShader:fe.meshnormal_vert,fragmentShader:fe.meshnormal_frag},sprite:{uniforms:Gn([Ct.sprite,Ct.fog]),vertexShader:fe.sprite_vert,fragmentShader:fe.sprite_frag},background:{uniforms:{uvTransform:{value:new ce},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:fe.background_vert,fragmentShader:fe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ce}},vertexShader:fe.backgroundCube_vert,fragmentShader:fe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:fe.cube_vert,fragmentShader:fe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:fe.equirect_vert,fragmentShader:fe.equirect_frag},distanceRGBA:{uniforms:Gn([Ct.common,Ct.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:fe.distanceRGBA_vert,fragmentShader:fe.distanceRGBA_frag},shadow:{uniforms:Gn([Ct.lights,Ct.fog,{color:{value:new Ot(0)},opacity:{value:1}}]),vertexShader:fe.shadow_vert,fragmentShader:fe.shadow_frag}};Vi.physical={uniforms:Gn([Vi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ce},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ce},clearcoatNormalScale:{value:new ht(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ce},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ce},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ce},sheen:{value:0},sheenColor:{value:new Ot(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ce},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ce},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ce},transmissionSamplerSize:{value:new ht},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ce},attenuationDistance:{value:0},attenuationColor:{value:new Ot(0)},specularColor:{value:new Ot(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ce},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ce},anisotropyVector:{value:new ht},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ce}}]),vertexShader:fe.meshphysical_vert,fragmentShader:fe.meshphysical_frag};const Ru={r:0,b:0,g:0},Xa=new _i,Vw=new ee;function Gw(a,t,e,n,i,o,l){const c=new Ot(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const L=x(A);L===null?y(c,h):L&&L.isColor&&(y(L,1),T=!0);const U=a.xr.getEnvironmentBlendMode();U==="additive"?n.buffers.color.setClear(0,0,0,1,l):U==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(a.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil))}function S(A,T){const L=x(T);L&&(L.isCubeTexture||L.mapping===Mo)?(p===void 0&&(p=new un(new hr(1,1,1),new Wi({name:"BackgroundCubeMaterial",uniforms:yo(Vi.backgroundCube.uniforms),vertexShader:Vi.backgroundCube.vertexShader,fragmentShader:Vi.backgroundCube.fragmentShader,side:Xn,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(U,I,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),Xa.copy(T.backgroundRotation),Xa.x*=-1,Xa.y*=-1,Xa.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(Xa.y*=-1,Xa.z*=-1),p.material.uniforms.envMap.value=L,p.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(Vw.makeRotationFromEuler(Xa)),p.material.toneMapped=be.getTransfer(L.colorSpace)!==Oe,(m!==L||g!==L.version||v!==a.toneMapping)&&(p.material.needsUpdate=!0,m=L,g=L.version,v=a.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):L&&L.isTexture&&(f===void 0&&(f=new un(new Ao(2,2),new Wi({name:"BackgroundMaterial",uniforms:yo(Vi.background.uniforms),vertexShader:Vi.background.vertexShader,fragmentShader:Vi.background.fragmentShader,side:Us,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=L,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=be.getTransfer(L.colorSpace)!==Oe,L.matrixAutoUpdate===!0&&L.updateMatrix(),f.material.uniforms.uvTransform.value.copy(L.matrix),(m!==L||g!==L.version||v!==a.toneMapping)&&(f.material.needsUpdate=!0,m=L,g=L.version,v=a.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function y(A,T){A.getRGB(Ru,Qy(a)),n.buffers.color.setClear(Ru.r,Ru.g,Ru.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,y(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,y(c,h)},render:b,addToRenderList:S,dispose:E}}function kw(a,t){const e=a.getParameter(a.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(C,F,$,W,K){let at=!1;const V=m(W,$,F);o!==V&&(o=V,f(o.object)),at=v(C,W,$,K),at&&x(C,W,$,K),K!==null&&t.update(K,a.ELEMENT_ARRAY_BUFFER),(at||l)&&(l=!1,T(C,F,$,W),K!==null&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,t.get(K).buffer))}function h(){return a.createVertexArray()}function f(C){return a.bindVertexArray(C)}function p(C){return a.deleteVertexArray(C)}function m(C,F,$){const W=$.wireframe===!0;let K=n[C.id];K===void 0&&(K={},n[C.id]=K);let at=K[F.id];at===void 0&&(at={},K[F.id]=at);let V=at[W];return V===void 0&&(V=g(h()),at[W]=V),V}function g(C){const F=[],$=[],W=[];for(let K=0;K<e;K++)F[K]=0,$[K]=0,W[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:$,attributeDivisors:W,object:C,attributes:{},index:null}}function v(C,F,$,W){const K=o.attributes,at=F.attributes;let V=0;const it=$.getAttributes();for(const Y in it)if(it[Y].location>=0){const gt=K[Y];let St=at[Y];if(St===void 0&&(Y==="instanceMatrix"&&C.instanceMatrix&&(St=C.instanceMatrix),Y==="instanceColor"&&C.instanceColor&&(St=C.instanceColor)),gt===void 0||gt.attribute!==St||St&&gt.data!==St.data)return!0;V++}return o.attributesNum!==V||o.index!==W}function x(C,F,$,W){const K={},at=F.attributes;let V=0;const it=$.getAttributes();for(const Y in it)if(it[Y].location>=0){let gt=at[Y];gt===void 0&&(Y==="instanceMatrix"&&C.instanceMatrix&&(gt=C.instanceMatrix),Y==="instanceColor"&&C.instanceColor&&(gt=C.instanceColor));const St={};St.attribute=gt,gt&&gt.data&&(St.data=gt.data),K[Y]=St,V++}o.attributes=K,o.attributesNum=V,o.index=W}function b(){const C=o.newAttributes;for(let F=0,$=C.length;F<$;F++)C[F]=0}function S(C){y(C,0)}function y(C,F){const $=o.newAttributes,W=o.enabledAttributes,K=o.attributeDivisors;$[C]=1,W[C]===0&&(a.enableVertexAttribArray(C),W[C]=1),K[C]!==F&&(a.vertexAttribDivisor(C,F),K[C]=F)}function E(){const C=o.newAttributes,F=o.enabledAttributes;for(let $=0,W=F.length;$<W;$++)F[$]!==C[$]&&(a.disableVertexAttribArray($),F[$]=0)}function A(C,F,$,W,K,at,V){V===!0?a.vertexAttribIPointer(C,F,$,K,at):a.vertexAttribPointer(C,F,$,W,K,at)}function T(C,F,$,W){b();const K=W.attributes,at=$.getAttributes(),V=F.defaultAttributeValues;for(const it in at){const Y=at[it];if(Y.location>=0){let ct=K[it];if(ct===void 0&&(it==="instanceMatrix"&&C.instanceMatrix&&(ct=C.instanceMatrix),it==="instanceColor"&&C.instanceColor&&(ct=C.instanceColor)),ct!==void 0){const gt=ct.normalized,St=ct.itemSize,Pt=t.get(ct);if(Pt===void 0)continue;const le=Pt.buffer,nt=Pt.type,_t=Pt.bytesPerElement,Bt=nt===a.INT||nt===a.UNSIGNED_INT||ct.gpuType===Nh;if(ct.isInterleavedBufferAttribute){const bt=ct.data,Xt=bt.stride,xe=ct.offset;if(bt.isInstancedInterleavedBuffer){for(let Yt=0;Yt<Y.locationSize;Yt++)y(Y.location+Yt,bt.meshPerAttribute);C.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=bt.meshPerAttribute*bt.count)}else for(let Yt=0;Yt<Y.locationSize;Yt++)S(Y.location+Yt);a.bindBuffer(a.ARRAY_BUFFER,le);for(let Yt=0;Yt<Y.locationSize;Yt++)A(Y.location+Yt,St/Y.locationSize,nt,gt,Xt*_t,(xe+St/Y.locationSize*Yt)*_t,Bt)}else{if(ct.isInstancedBufferAttribute){for(let bt=0;bt<Y.locationSize;bt++)y(Y.location+bt,ct.meshPerAttribute);C.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=ct.meshPerAttribute*ct.count)}else for(let bt=0;bt<Y.locationSize;bt++)S(Y.location+bt);a.bindBuffer(a.ARRAY_BUFFER,le);for(let bt=0;bt<Y.locationSize;bt++)A(Y.location+bt,St/Y.locationSize,nt,gt,St*_t,St/Y.locationSize*bt*_t,Bt)}}else if(V!==void 0){const gt=V[it];if(gt!==void 0)switch(gt.length){case 2:a.vertexAttrib2fv(Y.location,gt);break;case 3:a.vertexAttrib3fv(Y.location,gt);break;case 4:a.vertexAttrib4fv(Y.location,gt);break;default:a.vertexAttrib1fv(Y.location,gt)}}}}E()}function L(){z();for(const C in n){const F=n[C];for(const $ in F){const W=F[$];for(const K in W)p(W[K].object),delete W[K];delete F[$]}delete n[C]}}function U(C){if(n[C.id]===void 0)return;const F=n[C.id];for(const $ in F){const W=F[$];for(const K in W)p(W[K].object),delete W[K];delete F[$]}delete n[C.id]}function I(C){for(const F in n){const $=n[F];if($[C.id]===void 0)continue;const W=$[C.id];for(const K in W)p(W[K].object),delete W[K];delete $[C.id]}}function z(){w(),l=!0,o!==i&&(o=i,f(o.object))}function w(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:w,dispose:L,releaseStatesOfGeometry:U,releaseStatesOfProgram:I,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function Ww(a,t,e){let n;function i(f){n=f}function o(f,p){a.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(a.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function Xw(a,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const I=t.get("EXT_texture_filter_anisotropic");i=a.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(I){return!(I!==Pn&&n.convert(I)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(I){const z=I===bo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(I!==ki&&n.convert(I)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_TYPE)&&I!==ni&&!z)}function h(I){if(I==="highp"){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),x=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=a.getParameter(a.MAX_TEXTURE_SIZE),S=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),y=a.getParameter(a.MAX_VERTEX_ATTRIBS),E=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),A=a.getParameter(a.MAX_VARYING_VECTORS),T=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),L=x>0,U=a.getParameter(a.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:y,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:L,maxSamples:U}}function qw(a){const t=this;let e=null,n=0,i=!1,o=!1;const l=new sa,c=new ce,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,y=a.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,A=E*4;let T=y.clippingState||null;h.value=T,T=p(x,g,A,v);for(let L=0;L!==A;++L)T[L]=e[L];y.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const y=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<y)&&(S=new Float32Array(y));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function Yw(a){let t=new WeakMap;function e(l,c){return c===wl?l.mapping=Ns:c===Rl&&(l.mapping=la),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===wl||c===Rl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new ex(h.height);return f.fromEquirectangularTexture(a,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const po=4,g_=[.125,.215,.35,.446,.526,.582],Ka=20,gp=new ic,v_=new Ot;let vp=null,_p=0,yp=0,xp=!1;const Za=(1+Math.sqrt(5))/2,so=1/Za,__=[new B(-Za,so,0),new B(Za,so,0),new B(-so,0,Za),new B(so,0,Za),new B(0,Za,-so),new B(0,Za,so),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)];class jp{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){vp=this._renderer.getRenderTarget(),_p=this._renderer.getActiveCubeFace(),yp=this._renderer.getActiveMipmapLevel(),xp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,n,i,o),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=S_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=x_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(vp,_p,yp),this._renderer.xr.enabled=xp,t.scissorTest=!1,Du(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ns||t.mapping===la?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),vp=this._renderer.getRenderTarget(),_p=this._renderer.getActiveCubeFace(),yp=this._renderer.getActiveMipmapLevel(),xp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:fn,minFilter:fn,generateMipmaps:!1,type:bo,format:Pn,colorSpace:ca,depthBuffer:!1},i=y_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=y_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Zw(o)),this._blurMaterial=Kw(o,t,e)}return i}_compileMaterial(t){const e=new un(this._lodPlanes[0],t);this._renderer.compile(e,gp)}_sceneToCubeUV(t,e,n,i){const c=new yn(90,1,e,n),h=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,g=p.toneMapping;p.getClearColor(v_),p.toneMapping=ns,p.autoClear=!1;const v=new fa({name:"PMREM.Background",side:Xn,depthWrite:!1,depthTest:!1}),x=new un(new hr,v);let b=!1;const S=t.background;S?S.isColor&&(v.color.copy(S),t.background=null,b=!0):(v.color.copy(v_),b=!0);for(let y=0;y<6;y++){const E=y%3;E===0?(c.up.set(0,h[y],0),c.lookAt(f[y],0,0)):E===1?(c.up.set(0,0,h[y]),c.lookAt(0,f[y],0)):(c.up.set(0,h[y],0),c.lookAt(0,0,f[y]));const A=this._cubeSize;Du(i,E*A,y>2?A:0,A,A),p.setRenderTarget(i),b&&p.render(x,c),p.render(t,c)}x.geometry.dispose(),x.material.dispose(),p.toneMapping=g,p.autoClear=m,t.background=S}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Ns||t.mapping===la;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=S_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=x_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new un(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Du(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,gp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=__[(i-o-1)%__.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new un(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*Ka-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):Ka;S>Ka&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${Ka}`);const y=[];let E=0;for(let I=0;I<Ka;++I){const z=I/b,w=Math.exp(-z*z/2);y.push(w),I===0?E+=w:I<S&&(E+=2*w)}for(let I=0;I<y.length;I++)y[I]=y[I]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=y,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],L=3*T*(i>A-po?i-A+po:0),U=4*(this._cubeSize-T);Du(e,L,U,3*T,2*T),h.setRenderTarget(e),h.render(m,gp)}}function Zw(a){const t=[],e=[],n=[];let i=a;const o=a-po+1+g_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>a-po?h=g_[l-a+po-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,y=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(y*x*v);for(let U=0;U<v;U++){const I=U%3*2/3-1,z=U>2?0:-1,w=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];E.set(w,b*x*U),A.set(g,S*x*U);const C=[U,U,U,U,U,U];T.set(C,y*x*U)}const L=new de;L.setAttribute("position",new He(E,b)),L.setAttribute("uv",new He(A,S)),L.setAttribute("faceIndex",new He(T,y)),t.push(L),i>po&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function y_(a,t,e){const n=new as(a,t,e);return n.texture.mapping=Mo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Du(a,t,e,n,i){a.viewport.set(t,e,n,i),a.scissor.set(t,e,n,i)}function Kw(a,t,e){const n=new Float32Array(Ka),i=new B(0,1,0);return new Wi({name:"SphericalGaussianBlur",defines:{n:Ka,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Ym(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Rs,depthTest:!1,depthWrite:!1})}function x_(){return new Wi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ym(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Rs,depthTest:!1,depthWrite:!1})}function S_(){return new Wi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ym(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Rs,depthTest:!1,depthWrite:!1})}function Ym(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Jw(a){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===wl||h===Rl,p=h===Ns||h===la;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new jp(a)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new jp(a)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function jw(a){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=a.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&lo("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Qw(a,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],a.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const L=E[A+0],U=E[A+1],I=E[A+2];g.push(L,U,U,I,I,L)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const L=A+0,U=A+1,I=A+2;g.push(L,U,U,I,I,L)}}else return;const S=new(Zy(g)?xm:ym)(g,1);S.version=b;const y=o.get(m);y&&t.remove(y),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function $w(a,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){a.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(a.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let y=0;y<x;y++)S+=v[y];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let y=0;y<g.length;y++)f(g[y]/l,v[y],b[y]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let y=0;for(let E=0;E<x;E++)y+=v[E]*b[E];e.update(y,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function tR(a){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case a.TRIANGLES:e.triangles+=c*(o/3);break;case a.LINES:e.lines+=c*(o/2);break;case a.LINE_STRIP:e.lines+=c*(o-1);break;case a.LINE_LOOP:e.lines+=c*o;break;case a.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function eR(a,t,e){const n=new WeakMap,i=new Re;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let w=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",w)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],y=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,L=1;T>t.maxTextureSize&&(L=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const U=new Float32Array(T*L*4*m),I=new Kl(U,T,L,m);I.type=ni,I.needsUpdate=!0;const z=A*4;for(let C=0;C<m;C++){const F=S[C],$=y[C],W=E[C],K=T*L*4*C;for(let at=0;at<F.count;at++){const V=at*z;v===!0&&(i.fromBufferAttribute(F,at),U[K+V+0]=i.x,U[K+V+1]=i.y,U[K+V+2]=i.z,U[K+V+3]=0),x===!0&&(i.fromBufferAttribute($,at),U[K+V+4]=i.x,U[K+V+5]=i.y,U[K+V+6]=i.z,U[K+V+7]=0),b===!0&&(i.fromBufferAttribute(W,at),U[K+V+8]=i.x,U[K+V+9]=i.y,U[K+V+10]=i.z,U[K+V+11]=W.itemSize===4?i.w:1)}}g={count:m,texture:I,size:new ht(T,L)},n.set(c,g),c.addEventListener("dispose",w)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(a,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(a,"morphTargetBaseInfluence",x),h.getUniforms().setValue(a,"morphTargetInfluences",f)}h.getUniforms().setValue(a,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(a,"morphTargetsTextureSize",g.size)}return{update:o}}function nR(a,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,a.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,a.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const Qx=new sn,M_=new Tm(1,1),$x=new Kl,tS=new Hh,eS=new Jl,b_=[],E_=[],T_=new Float32Array(16),A_=new Float32Array(9),C_=new Float32Array(4);function Co(a,t,e){const n=a[0];if(n<=0||n>0)return a;const i=t*e;let o=b_[i];if(o===void 0&&(o=new Float32Array(i),b_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,a[l].toArray(o,c)}return o}function dn(a,t){if(a.length!==t.length)return!1;for(let e=0,n=a.length;e<n;e++)if(a[e]!==t[e])return!1;return!0}function pn(a,t){for(let e=0,n=t.length;e<n;e++)a[e]=t[e]}function cf(a,t){let e=E_[t];e===void 0&&(e=new Int32Array(t),E_[t]=e);for(let n=0;n!==t;++n)e[n]=a.allocateTextureUnit();return e}function iR(a,t){const e=this.cache;e[0]!==t&&(a.uniform1f(this.addr,t),e[0]=t)}function sR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(a.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;a.uniform2fv(this.addr,t),pn(e,t)}}function aR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(a.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(a.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(dn(e,t))return;a.uniform3fv(this.addr,t),pn(e,t)}}function rR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(a.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;a.uniform4fv(this.addr,t),pn(e,t)}}function oR(a,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;a.uniformMatrix2fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;C_.set(n),a.uniformMatrix2fv(this.addr,!1,C_),pn(e,n)}}function lR(a,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;a.uniformMatrix3fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;A_.set(n),a.uniformMatrix3fv(this.addr,!1,A_),pn(e,n)}}function cR(a,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;a.uniformMatrix4fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;T_.set(n),a.uniformMatrix4fv(this.addr,!1,T_),pn(e,n)}}function uR(a,t){const e=this.cache;e[0]!==t&&(a.uniform1i(this.addr,t),e[0]=t)}function hR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(a.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;a.uniform2iv(this.addr,t),pn(e,t)}}function fR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(a.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(dn(e,t))return;a.uniform3iv(this.addr,t),pn(e,t)}}function dR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(a.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;a.uniform4iv(this.addr,t),pn(e,t)}}function pR(a,t){const e=this.cache;e[0]!==t&&(a.uniform1ui(this.addr,t),e[0]=t)}function mR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(a.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;a.uniform2uiv(this.addr,t),pn(e,t)}}function gR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(a.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(dn(e,t))return;a.uniform3uiv(this.addr,t),pn(e,t)}}function vR(a,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(a.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;a.uniform4uiv(this.addr,t),pn(e,t)}}function _R(a,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i);let o;this.type===a.SAMPLER_2D_SHADOW?(M_.compareFunction=vm,o=M_):o=Qx,e.setTexture2D(t||o,i)}function yR(a,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||tS,i)}function xR(a,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||eS,i)}function SR(a,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||$x,i)}function MR(a){switch(a){case 5126:return iR;case 35664:return sR;case 35665:return aR;case 35666:return rR;case 35674:return oR;case 35675:return lR;case 35676:return cR;case 5124:case 35670:return uR;case 35667:case 35671:return hR;case 35668:case 35672:return fR;case 35669:case 35673:return dR;case 5125:return pR;case 36294:return mR;case 36295:return gR;case 36296:return vR;case 35678:case 36198:case 36298:case 36306:case 35682:return _R;case 35679:case 36299:case 36307:return yR;case 35680:case 36300:case 36308:case 36293:return xR;case 36289:case 36303:case 36311:case 36292:return SR}}function bR(a,t){a.uniform1fv(this.addr,t)}function ER(a,t){const e=Co(t,this.size,2);a.uniform2fv(this.addr,e)}function TR(a,t){const e=Co(t,this.size,3);a.uniform3fv(this.addr,e)}function AR(a,t){const e=Co(t,this.size,4);a.uniform4fv(this.addr,e)}function CR(a,t){const e=Co(t,this.size,4);a.uniformMatrix2fv(this.addr,!1,e)}function wR(a,t){const e=Co(t,this.size,9);a.uniformMatrix3fv(this.addr,!1,e)}function RR(a,t){const e=Co(t,this.size,16);a.uniformMatrix4fv(this.addr,!1,e)}function DR(a,t){a.uniform1iv(this.addr,t)}function UR(a,t){a.uniform2iv(this.addr,t)}function NR(a,t){a.uniform3iv(this.addr,t)}function LR(a,t){a.uniform4iv(this.addr,t)}function PR(a,t){a.uniform1uiv(this.addr,t)}function IR(a,t){a.uniform2uiv(this.addr,t)}function OR(a,t){a.uniform3uiv(this.addr,t)}function BR(a,t){a.uniform4uiv(this.addr,t)}function zR(a,t,e){const n=this.cache,i=t.length,o=cf(e,i);dn(n,o)||(a.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||Qx,o[l])}function FR(a,t,e){const n=this.cache,i=t.length,o=cf(e,i);dn(n,o)||(a.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||tS,o[l])}function HR(a,t,e){const n=this.cache,i=t.length,o=cf(e,i);dn(n,o)||(a.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||eS,o[l])}function VR(a,t,e){const n=this.cache,i=t.length,o=cf(e,i);dn(n,o)||(a.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||$x,o[l])}function GR(a){switch(a){case 5126:return bR;case 35664:return ER;case 35665:return TR;case 35666:return AR;case 35674:return CR;case 35675:return wR;case 35676:return RR;case 5124:case 35670:return DR;case 35667:case 35671:return UR;case 35668:case 35672:return NR;case 35669:case 35673:return LR;case 5125:return PR;case 36294:return IR;case 36295:return OR;case 36296:return BR;case 35678:case 36198:case 36298:case 36306:case 35682:return zR;case 35679:case 36299:case 36307:return FR;case 35680:case 36300:case 36308:case 36293:return HR;case 36289:case 36303:case 36311:case 36292:return VR}}class kR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=MR(e.type)}}class WR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=GR(e.type)}}class XR{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const Sp=/(\w+)(\])?(\[|\.)?/g;function w_(a,t){a.seq.push(t),a.map[t.id]=t}function qR(a,t,e){const n=a.name,i=n.length;for(Sp.lastIndex=0;;){const o=Sp.exec(n),l=Sp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){w_(e,f===void 0?new kR(c,a,t):new WR(c,a,t));break}else{let m=e.map[c];m===void 0&&(m=new XR(c),w_(e,m)),e=m}}}class Bu{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);qR(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function R_(a,t,e){const n=a.createShader(t);return a.shaderSource(n,e),a.compileShader(n),n}const YR=37297;let ZR=0;function KR(a,t){const e=a.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const D_=new ce;function JR(a){be._getMatrix(D_,be.workingColorSpace,a);const t=`mat3( ${D_.elements.map(e=>e.toFixed(4))} )`;switch(be.getTransfer(a)){case Pl:return[t,"LinearTransferOETF"];case Oe:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",a),[t,"LinearTransferOETF"]}}function U_(a,t,e){const n=a.getShaderParameter(t,a.COMPILE_STATUS),i=a.getShaderInfoLog(t).trim();if(n&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const l=parseInt(o[1]);return e.toUpperCase()+`

`+i+`

`+KR(a.getShaderSource(t),l)}else return i}function jR(a,t){const e=JR(t);return[`vec4 ${a}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function QR(a,t){let e;switch(t){case wy:e="Linear";break;case Ry:e="Reinhard";break;case Dy:e="Cineon";break;case am:e="ACESFilmic";break;case Ny:e="AgX";break;case Ly:e="Neutral";break;case Uy:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+a+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Uu=new B;function $R(){be.getLuminanceCoefficients(Uu);const a=Uu.x.toFixed(4),t=Uu.y.toFixed(4),e=Uu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${a}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function t2(a){return[a.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",a.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(gl).join(`
`)}function e2(a){const t=[];for(const e in a){const n=a[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function n2(a,t){const e={},n=a.getProgramParameter(t,a.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=a.getActiveAttrib(t,i),l=o.name;let c=1;o.type===a.FLOAT_MAT2&&(c=2),o.type===a.FLOAT_MAT3&&(c=3),o.type===a.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:a.getAttribLocation(t,l),locationSize:c}}return e}function gl(a){return a!==""}function N_(a,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function L_(a,t){return a.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const i2=/^[ \t]*#include +<([\w\d./]+)>/gm;function Qp(a){return a.replace(i2,a2)}const s2=new Map;function a2(a,t){let e=fe[t];if(e===void 0){const n=s2.get(t);if(n!==void 0)e=fe[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return Qp(e)}const r2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function P_(a){return a.replace(r2,o2)}function o2(a,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function I_(a){let t=`precision ${a.precision} float;
	precision ${a.precision} int;
	precision ${a.precision} sampler2D;
	precision ${a.precision} samplerCube;
	precision ${a.precision} sampler3D;
	precision ${a.precision} sampler2DArray;
	precision ${a.precision} sampler2DShadow;
	precision ${a.precision} samplerCubeShadow;
	precision ${a.precision} sampler2DArrayShadow;
	precision ${a.precision} isampler2D;
	precision ${a.precision} isampler3D;
	precision ${a.precision} isamplerCube;
	precision ${a.precision} isampler2DArray;
	precision ${a.precision} usampler2D;
	precision ${a.precision} usampler3D;
	precision ${a.precision} usamplerCube;
	precision ${a.precision} usampler2DArray;
	`;return a.precision==="highp"?t+=`
#define HIGH_PRECISION`:a.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:a.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function l2(a){let t="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===Dh?t="SHADOWMAP_TYPE_PCF":a.shadowMapType===vl?t="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===Hi&&(t="SHADOWMAP_TYPE_VSM"),t}function c2(a){let t="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case Ns:case la:t="ENVMAP_TYPE_CUBE";break;case Mo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function u2(a){let t="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case la:t="ENVMAP_MODE_REFRACTION";break}return t}function h2(a){let t="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case Yl:t="ENVMAP_BLENDING_MULTIPLY";break;case Ay:t="ENVMAP_BLENDING_MIX";break;case Cy:t="ENVMAP_BLENDING_ADD";break}return t}function f2(a){const t=a.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function d2(a,t,e,n){const i=a.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=l2(e),f=c2(e),p=u2(e),m=h2(e),g=f2(e),v=t2(e),x=e2(o),b=i.createProgram();let S,y,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(gl).join(`
`),S.length>0&&(S+=`
`),y=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(gl).join(`
`),y.length>0&&(y+=`
`)):(S=[I_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(gl).join(`
`),y=[I_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==ns?"#define TONE_MAPPING":"",e.toneMapping!==ns?fe.tonemapping_pars_fragment:"",e.toneMapping!==ns?QR("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",fe.colorspace_pars_fragment,jR("linearToOutputTexel",e.outputColorSpace),$R(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(gl).join(`
`)),l=Qp(l),l=N_(l,e),l=L_(l,e),c=Qp(c),c=N_(c,e),c=L_(c,e),l=P_(l),c=P_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,y=["#define varying in",e.glslVersion===kp?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===kp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const A=E+S+l,T=E+y+c,L=R_(i,i.VERTEX_SHADER,A),U=R_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,L),i.attachShader(b,U),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function I(F){if(a.debug.checkShaderErrors){const $=i.getProgramInfoLog(b).trim(),W=i.getShaderInfoLog(L).trim(),K=i.getShaderInfoLog(U).trim();let at=!0,V=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(at=!1,typeof a.debug.onShaderError=="function")a.debug.onShaderError(i,b,L,U);else{const it=U_(i,L,"vertex"),Y=U_(i,U,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+$+`
`+it+`
`+Y)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(W===""||K==="")&&(V=!1);V&&(F.diagnostics={runnable:at,programLog:$,vertexShader:{log:W,prefix:S},fragmentShader:{log:K,prefix:y}})}i.deleteShader(L),i.deleteShader(U),z=new Bu(i,b),w=n2(i,b)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let w;this.getAttributes=function(){return w===void 0&&I(this),w};let C=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return C===!1&&(C=i.getProgramParameter(b,YR)),C},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=ZR++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=L,this.fragmentShader=U,this}let p2=0;class m2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new g2(t),e.set(t,n)),n}}class g2{constructor(t){this.id=p2++,this.code=t,this.usedTimes=0}}function v2(a,t,e,n,i,o,l){const c=new _o,h=new m2,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(w){return f.add(w),w===0?"uv":`uv${w}`}function S(w,C,F,$,W){const K=$.fog,at=W.geometry,V=w.isMeshStandardMaterial?$.environment:null,it=(w.isMeshStandardMaterial?e:t).get(w.envMap||V),Y=it&&it.mapping===Mo?it.image.height:null,ct=x[w.type];w.precision!==null&&(v=i.getMaxPrecision(w.precision),v!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",v,"instead."));const gt=at.morphAttributes.position||at.morphAttributes.normal||at.morphAttributes.color,St=gt!==void 0?gt.length:0;let Pt=0;at.morphAttributes.position!==void 0&&(Pt=1),at.morphAttributes.normal!==void 0&&(Pt=2),at.morphAttributes.color!==void 0&&(Pt=3);let le,nt,_t,Bt;if(ct){const Ee=Vi[ct];le=Ee.vertexShader,nt=Ee.fragmentShader}else le=w.vertexShader,nt=w.fragmentShader,h.update(w),_t=h.getVertexShaderID(w),Bt=h.getFragmentShaderID(w);const bt=a.getRenderTarget(),Xt=a.state.buffers.depth.getReversed(),xe=W.isInstancedMesh===!0,Yt=W.isBatchedMesh===!0,ve=!!w.map,mt=!!w.matcap,ft=!!it,O=!!w.aoMap,Wt=!!w.lightMap,vt=!!w.bumpMap,Dt=!!w.normalMap,Et=!!w.displacementMap,Qt=!!w.emissiveMap,Tt=!!w.metalnessMap,P=!!w.roughnessMap,R=w.anisotropy>0,J=w.clearcoat>0,rt=w.dispersion>0,dt=w.iridescence>0,lt=w.sheen>0,kt=w.transmission>0,wt=R&&!!w.anisotropyMap,zt=J&&!!w.clearcoatMap,me=J&&!!w.clearcoatNormalMap,yt=J&&!!w.clearcoatRoughnessMap,Vt=dt&&!!w.iridescenceMap,Zt=dt&&!!w.iridescenceThicknessMap,jt=lt&&!!w.sheenColorMap,Ft=lt&&!!w.sheenRoughnessMap,ge=!!w.specularMap,se=!!w.specularColorMap,Ue=!!w.specularIntensityMap,k=kt&&!!w.transmissionMap,Rt=kt&&!!w.thicknessMap,st=!!w.gradientMap,ut=!!w.alphaMap,Ut=w.alphaTest>0,Nt=!!w.alphaHash,re=!!w.extensions;let Ve=ns;w.toneMapped&&(bt===null||bt.isXRRenderTarget===!0)&&(Ve=a.toneMapping);const Qe={shaderID:ct,shaderType:w.type,shaderName:w.name,vertexShader:le,fragmentShader:nt,defines:w.defines,customVertexShaderID:_t,customFragmentShaderID:Bt,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:v,batching:Yt,batchingColor:Yt&&W._colorsTexture!==null,instancing:xe,instancingColor:xe&&W.instanceColor!==null,instancingMorph:xe&&W.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:bt===null?a.outputColorSpace:bt.isXRRenderTarget===!0?bt.texture.colorSpace:ca,alphaToCoverage:!!w.alphaToCoverage,map:ve,matcap:mt,envMap:ft,envMapMode:ft&&it.mapping,envMapCubeUVHeight:Y,aoMap:O,lightMap:Wt,bumpMap:vt,normalMap:Dt,displacementMap:g&&Et,emissiveMap:Qt,normalMapObjectSpace:Dt&&w.normalMapType===Hy,normalMapTangentSpace:Dt&&w.normalMapType===ha,metalnessMap:Tt,roughnessMap:P,anisotropy:R,anisotropyMap:wt,clearcoat:J,clearcoatMap:zt,clearcoatNormalMap:me,clearcoatRoughnessMap:yt,dispersion:rt,iridescence:dt,iridescenceMap:Vt,iridescenceThicknessMap:Zt,sheen:lt,sheenColorMap:jt,sheenRoughnessMap:Ft,specularMap:ge,specularColorMap:se,specularIntensityMap:Ue,transmission:kt,transmissionMap:k,thicknessMap:Rt,gradientMap:st,opaque:w.transparent===!1&&w.blending===er&&w.alphaToCoverage===!1,alphaMap:ut,alphaTest:Ut,alphaHash:Nt,combine:w.combine,mapUv:ve&&b(w.map.channel),aoMapUv:O&&b(w.aoMap.channel),lightMapUv:Wt&&b(w.lightMap.channel),bumpMapUv:vt&&b(w.bumpMap.channel),normalMapUv:Dt&&b(w.normalMap.channel),displacementMapUv:Et&&b(w.displacementMap.channel),emissiveMapUv:Qt&&b(w.emissiveMap.channel),metalnessMapUv:Tt&&b(w.metalnessMap.channel),roughnessMapUv:P&&b(w.roughnessMap.channel),anisotropyMapUv:wt&&b(w.anisotropyMap.channel),clearcoatMapUv:zt&&b(w.clearcoatMap.channel),clearcoatNormalMapUv:me&&b(w.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:yt&&b(w.clearcoatRoughnessMap.channel),iridescenceMapUv:Vt&&b(w.iridescenceMap.channel),iridescenceThicknessMapUv:Zt&&b(w.iridescenceThicknessMap.channel),sheenColorMapUv:jt&&b(w.sheenColorMap.channel),sheenRoughnessMapUv:Ft&&b(w.sheenRoughnessMap.channel),specularMapUv:ge&&b(w.specularMap.channel),specularColorMapUv:se&&b(w.specularColorMap.channel),specularIntensityMapUv:Ue&&b(w.specularIntensityMap.channel),transmissionMapUv:k&&b(w.transmissionMap.channel),thicknessMapUv:Rt&&b(w.thicknessMap.channel),alphaMapUv:ut&&b(w.alphaMap.channel),vertexTangents:!!at.attributes.tangent&&(Dt||R),vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!at.attributes.color&&at.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!at.attributes.uv&&(ve||ut),fog:!!K,useFog:w.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:w.flatShading===!0,sizeAttenuation:w.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Xt,skinning:W.isSkinnedMesh===!0,morphTargets:at.morphAttributes.position!==void 0,morphNormals:at.morphAttributes.normal!==void 0,morphColors:at.morphAttributes.color!==void 0,morphTargetsCount:St,morphTextureStride:Pt,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numLightProbes:C.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:w.dithering,shadowMapEnabled:a.shadowMap.enabled&&F.length>0,shadowMapType:a.shadowMap.type,toneMapping:Ve,decodeVideoTexture:ve&&w.map.isVideoTexture===!0&&be.getTransfer(w.map.colorSpace)===Oe,decodeVideoTextureEmissive:Qt&&w.emissiveMap.isVideoTexture===!0&&be.getTransfer(w.emissiveMap.colorSpace)===Oe,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===ts,flipSided:w.side===Xn,useDepthPacking:w.depthPacking>=0,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionClipCullDistance:re&&w.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(re&&w.extensions.multiDraw===!0||Yt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:w.customProgramCacheKey()};return Qe.vertexUv1s=f.has(1),Qe.vertexUv2s=f.has(2),Qe.vertexUv3s=f.has(3),f.clear(),Qe}function y(w){const C=[];if(w.shaderID?C.push(w.shaderID):(C.push(w.customVertexShaderID),C.push(w.customFragmentShaderID)),w.defines!==void 0)for(const F in w.defines)C.push(F),C.push(w.defines[F]);return w.isRawShaderMaterial===!1&&(E(C,w),A(C,w),C.push(a.outputColorSpace)),C.push(w.customProgramCacheKey),C.join()}function E(w,C){w.push(C.precision),w.push(C.outputColorSpace),w.push(C.envMapMode),w.push(C.envMapCubeUVHeight),w.push(C.mapUv),w.push(C.alphaMapUv),w.push(C.lightMapUv),w.push(C.aoMapUv),w.push(C.bumpMapUv),w.push(C.normalMapUv),w.push(C.displacementMapUv),w.push(C.emissiveMapUv),w.push(C.metalnessMapUv),w.push(C.roughnessMapUv),w.push(C.anisotropyMapUv),w.push(C.clearcoatMapUv),w.push(C.clearcoatNormalMapUv),w.push(C.clearcoatRoughnessMapUv),w.push(C.iridescenceMapUv),w.push(C.iridescenceThicknessMapUv),w.push(C.sheenColorMapUv),w.push(C.sheenRoughnessMapUv),w.push(C.specularMapUv),w.push(C.specularColorMapUv),w.push(C.specularIntensityMapUv),w.push(C.transmissionMapUv),w.push(C.thicknessMapUv),w.push(C.combine),w.push(C.fogExp2),w.push(C.sizeAttenuation),w.push(C.morphTargetsCount),w.push(C.morphAttributeCount),w.push(C.numDirLights),w.push(C.numPointLights),w.push(C.numSpotLights),w.push(C.numSpotLightMaps),w.push(C.numHemiLights),w.push(C.numRectAreaLights),w.push(C.numDirLightShadows),w.push(C.numPointLightShadows),w.push(C.numSpotLightShadows),w.push(C.numSpotLightShadowsWithMaps),w.push(C.numLightProbes),w.push(C.shadowMapType),w.push(C.toneMapping),w.push(C.numClippingPlanes),w.push(C.numClipIntersection),w.push(C.depthPacking)}function A(w,C){c.disableAll(),C.supportsVertexTextures&&c.enable(0),C.instancing&&c.enable(1),C.instancingColor&&c.enable(2),C.instancingMorph&&c.enable(3),C.matcap&&c.enable(4),C.envMap&&c.enable(5),C.normalMapObjectSpace&&c.enable(6),C.normalMapTangentSpace&&c.enable(7),C.clearcoat&&c.enable(8),C.iridescence&&c.enable(9),C.alphaTest&&c.enable(10),C.vertexColors&&c.enable(11),C.vertexAlphas&&c.enable(12),C.vertexUv1s&&c.enable(13),C.vertexUv2s&&c.enable(14),C.vertexUv3s&&c.enable(15),C.vertexTangents&&c.enable(16),C.anisotropy&&c.enable(17),C.alphaHash&&c.enable(18),C.batching&&c.enable(19),C.dispersion&&c.enable(20),C.batchingColor&&c.enable(21),w.push(c.mask),c.disableAll(),C.fog&&c.enable(0),C.useFog&&c.enable(1),C.flatShading&&c.enable(2),C.logarithmicDepthBuffer&&c.enable(3),C.reverseDepthBuffer&&c.enable(4),C.skinning&&c.enable(5),C.morphTargets&&c.enable(6),C.morphNormals&&c.enable(7),C.morphColors&&c.enable(8),C.premultipliedAlpha&&c.enable(9),C.shadowMapEnabled&&c.enable(10),C.doubleSided&&c.enable(11),C.flipSided&&c.enable(12),C.useDepthPacking&&c.enable(13),C.dithering&&c.enable(14),C.transmission&&c.enable(15),C.sheen&&c.enable(16),C.opaque&&c.enable(17),C.pointsUvs&&c.enable(18),C.decodeVideoTexture&&c.enable(19),C.decodeVideoTextureEmissive&&c.enable(20),C.alphaToCoverage&&c.enable(21),w.push(c.mask)}function T(w){const C=x[w.type];let F;if(C){const $=Vi[C];F=$y.clone($.uniforms)}else F=w.uniforms;return F}function L(w,C){let F;for(let $=0,W=p.length;$<W;$++){const K=p[$];if(K.cacheKey===C){F=K,++F.usedTimes;break}}return F===void 0&&(F=new d2(a,C,w,o),p.push(F)),F}function U(w){if(--w.usedTimes===0){const C=p.indexOf(w);p[C]=p[p.length-1],p.pop(),w.destroy()}}function I(w){h.remove(w)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:y,getUniforms:T,acquireProgram:L,releaseProgram:U,releaseShaderCache:I,programs:p,dispose:z}}function _2(){let a=new WeakMap;function t(l){return a.has(l)}function e(l){let c=a.get(l);return c===void 0&&(c={},a.set(l,c)),c}function n(l){a.delete(l)}function i(l,c,h){a.get(l)[c]=h}function o(){a=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function y2(a,t){return a.groupOrder!==t.groupOrder?a.groupOrder-t.groupOrder:a.renderOrder!==t.renderOrder?a.renderOrder-t.renderOrder:a.material.id!==t.material.id?a.material.id-t.material.id:a.z!==t.z?a.z-t.z:a.id-t.id}function O_(a,t){return a.groupOrder!==t.groupOrder?a.groupOrder-t.groupOrder:a.renderOrder!==t.renderOrder?a.renderOrder-t.renderOrder:a.z!==t.z?t.z-a.z:a.id-t.id}function B_(){const a=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let y=a[t];return y===void 0?(y={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},a[t]=y):(y.id=m.id,y.object=m,y.geometry=g,y.material=v,y.groupOrder=x,y.renderOrder=m.renderOrder,y.z=b,y.group=S),t++,y}function c(m,g,v,x,b,S){const y=l(m,g,v,x,b,S);v.transmission>0?n.push(y):v.transparent===!0?i.push(y):e.push(y)}function h(m,g,v,x,b,S){const y=l(m,g,v,x,b,S);v.transmission>0?n.unshift(y):v.transparent===!0?i.unshift(y):e.unshift(y)}function f(m,g){e.length>1&&e.sort(m||y2),n.length>1&&n.sort(g||O_),i.length>1&&i.sort(g||O_)}function p(){for(let m=t,g=a.length;m<g;m++){const v=a[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function x2(){let a=new WeakMap;function t(n,i){const o=a.get(n);let l;return o===void 0?(l=new B_,a.set(n,[l])):i>=o.length?(l=new B_,o.push(l)):l=o[i],l}function e(){a=new WeakMap}return{get:t,dispose:e}}function S2(){const a={};return{get:function(t){if(a[t.id]!==void 0)return a[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new B,color:new Ot};break;case"SpotLight":e={position:new B,direction:new B,color:new Ot,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new B,color:new Ot,distance:0,decay:0};break;case"HemisphereLight":e={direction:new B,skyColor:new Ot,groundColor:new Ot};break;case"RectAreaLight":e={color:new Ot,position:new B,halfWidth:new B,halfHeight:new B};break}return a[t.id]=e,e}}}function M2(){const a={};return{get:function(t){if(a[t.id]!==void 0)return a[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ht};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ht};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ht,shadowCameraNear:1,shadowCameraFar:1e3};break}return a[t.id]=e,e}}}let b2=0;function E2(a,t){return(t.castShadow?2:0)-(a.castShadow?2:0)+(t.map?1:0)-(a.map?1:0)}function T2(a){const t=new S2,e=M2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new B);const i=new B,o=new ee,l=new ee;function c(f){let p=0,m=0,g=0;for(let w=0;w<9;w++)n.probe[w].set(0,0,0);let v=0,x=0,b=0,S=0,y=0,E=0,A=0,T=0,L=0,U=0,I=0;f.sort(E2);for(let w=0,C=f.length;w<C;w++){const F=f[w],$=F.color,W=F.intensity,K=F.distance,at=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)p+=$.r*W,m+=$.g*W,g+=$.b*W;else if(F.isLightProbe){for(let V=0;V<9;V++)n.probe[V].addScaledVector(F.sh.coefficients[V],W);I++}else if(F.isDirectionalLight){const V=t.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const it=F.shadow,Y=e.get(F);Y.shadowIntensity=it.intensity,Y.shadowBias=it.bias,Y.shadowNormalBias=it.normalBias,Y.shadowRadius=it.radius,Y.shadowMapSize=it.mapSize,n.directionalShadow[v]=Y,n.directionalShadowMap[v]=at,n.directionalShadowMatrix[v]=F.shadow.matrix,E++}n.directional[v]=V,v++}else if(F.isSpotLight){const V=t.get(F);V.position.setFromMatrixPosition(F.matrixWorld),V.color.copy($).multiplyScalar(W),V.distance=K,V.coneCos=Math.cos(F.angle),V.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),V.decay=F.decay,n.spot[b]=V;const it=F.shadow;if(F.map&&(n.spotLightMap[L]=F.map,L++,it.updateMatrices(F),F.castShadow&&U++),n.spotLightMatrix[b]=it.matrix,F.castShadow){const Y=e.get(F);Y.shadowIntensity=it.intensity,Y.shadowBias=it.bias,Y.shadowNormalBias=it.normalBias,Y.shadowRadius=it.radius,Y.shadowMapSize=it.mapSize,n.spotShadow[b]=Y,n.spotShadowMap[b]=at,T++}b++}else if(F.isRectAreaLight){const V=t.get(F);V.color.copy($).multiplyScalar(W),V.halfWidth.set(F.width*.5,0,0),V.halfHeight.set(0,F.height*.5,0),n.rectArea[S]=V,S++}else if(F.isPointLight){const V=t.get(F);if(V.color.copy(F.color).multiplyScalar(F.intensity),V.distance=F.distance,V.decay=F.decay,F.castShadow){const it=F.shadow,Y=e.get(F);Y.shadowIntensity=it.intensity,Y.shadowBias=it.bias,Y.shadowNormalBias=it.normalBias,Y.shadowRadius=it.radius,Y.shadowMapSize=it.mapSize,Y.shadowCameraNear=it.camera.near,Y.shadowCameraFar=it.camera.far,n.pointShadow[x]=Y,n.pointShadowMap[x]=at,n.pointShadowMatrix[x]=F.shadow.matrix,A++}n.point[x]=V,x++}else if(F.isHemisphereLight){const V=t.get(F);V.skyColor.copy(F.color).multiplyScalar(W),V.groundColor.copy(F.groundColor).multiplyScalar(W),n.hemi[y]=V,y++}}S>0&&(a.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ct.LTC_FLOAT_1,n.rectAreaLTC2=Ct.LTC_FLOAT_2):(n.rectAreaLTC1=Ct.LTC_HALF_1,n.rectAreaLTC2=Ct.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==b||z.rectAreaLength!==S||z.hemiLength!==y||z.numDirectionalShadows!==E||z.numPointShadows!==A||z.numSpotShadows!==T||z.numSpotMaps!==L||z.numLightProbes!==I)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=y,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+L-U,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=U,n.numLightProbes=I,z.directionalLength=v,z.pointLength=x,z.spotLength=b,z.rectAreaLength=S,z.hemiLength=y,z.numDirectionalShadows=E,z.numPointShadows=A,z.numSpotShadows=T,z.numSpotMaps=L,z.numLightProbes=I,n.version=b2++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let y=0,E=f.length;y<E;y++){const A=f[y];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),o.copy(A.matrixWorld),o.premultiply(S),l.extractRotation(o),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function z_(a){const t=new T2(a),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function A2(a){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new z_(a),t.set(i,[c])):o>=l.length?(c=new z_(a),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const C2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,w2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function R2(a,t,e){let n=new jl;const i=new ht,o=new ht,l=new Re,c=new Lm({depthPacking:Fy}),h=new Pm,f={},p=e.maxTextureSize,m={[Us]:Xn,[Xn]:Us,[ts]:ts},g=new Wi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ht},radius:{value:4}},vertexShader:C2,fragmentShader:w2}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new de;x.setAttribute("position",new He(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new un(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Dh;let y=this.type;this.render=function(U,I,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||U.length===0)return;const w=a.getRenderTarget(),C=a.getActiveCubeFace(),F=a.getActiveMipmapLevel(),$=a.state;$.setBlending(Rs),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const W=y!==Hi&&this.type===Hi,K=y===Hi&&this.type!==Hi;for(let at=0,V=U.length;at<V;at++){const it=U[at],Y=it.shadow;if(Y===void 0){console.warn("THREE.WebGLShadowMap:",it,"has no shadow.");continue}if(Y.autoUpdate===!1&&Y.needsUpdate===!1)continue;i.copy(Y.mapSize);const ct=Y.getFrameExtents();if(i.multiply(ct),o.copy(Y.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/ct.x),i.x=o.x*ct.x,Y.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/ct.y),i.y=o.y*ct.y,Y.mapSize.y=o.y)),Y.map===null||W===!0||K===!0){const St=this.type!==Hi?{minFilter:En,magFilter:En}:{};Y.map!==null&&Y.map.dispose(),Y.map=new as(i.x,i.y,St),Y.map.texture.name=it.name+".shadowMap",Y.camera.updateProjectionMatrix()}a.setRenderTarget(Y.map),a.clear();const gt=Y.getViewportCount();for(let St=0;St<gt;St++){const Pt=Y.getViewport(St);l.set(o.x*Pt.x,o.y*Pt.y,o.x*Pt.z,o.y*Pt.w),$.viewport(l),Y.updateMatrices(it,St),n=Y.getFrustum(),T(I,z,Y.camera,it,this.type)}Y.isPointLightShadow!==!0&&this.type===Hi&&E(Y,z),Y.needsUpdate=!1}y=this.type,S.needsUpdate=!1,a.setRenderTarget(w,C,F)};function E(U,I){const z=t.update(b);g.defines.VSM_SAMPLES!==U.blurSamples&&(g.defines.VSM_SAMPLES=U.blurSamples,v.defines.VSM_SAMPLES=U.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),U.mapPass===null&&(U.mapPass=new as(i.x,i.y)),g.uniforms.shadow_pass.value=U.map.texture,g.uniforms.resolution.value=U.mapSize,g.uniforms.radius.value=U.radius,a.setRenderTarget(U.mapPass),a.clear(),a.renderBufferDirect(I,null,z,g,b,null),v.uniforms.shadow_pass.value=U.mapPass.texture,v.uniforms.resolution.value=U.mapSize,v.uniforms.radius.value=U.radius,a.setRenderTarget(U.map),a.clear(),a.renderBufferDirect(I,null,z,v,b,null)}function A(U,I,z,w){let C=null;const F=z.isPointLight===!0?U.customDistanceMaterial:U.customDepthMaterial;if(F!==void 0)C=F;else if(C=z.isPointLight===!0?h:c,a.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0){const $=C.uuid,W=I.uuid;let K=f[$];K===void 0&&(K={},f[$]=K);let at=K[W];at===void 0&&(at=C.clone(),K[W]=at,I.addEventListener("dispose",L)),C=at}if(C.visible=I.visible,C.wireframe=I.wireframe,w===Hi?C.side=I.shadowSide!==null?I.shadowSide:I.side:C.side=I.shadowSide!==null?I.shadowSide:m[I.side],C.alphaMap=I.alphaMap,C.alphaTest=I.alphaTest,C.map=I.map,C.clipShadows=I.clipShadows,C.clippingPlanes=I.clippingPlanes,C.clipIntersection=I.clipIntersection,C.displacementMap=I.displacementMap,C.displacementScale=I.displacementScale,C.displacementBias=I.displacementBias,C.wireframeLinewidth=I.wireframeLinewidth,C.linewidth=I.linewidth,z.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const $=a.properties.get(C);$.light=z}return C}function T(U,I,z,w,C){if(U.visible===!1)return;if(U.layers.test(I.layers)&&(U.isMesh||U.isLine||U.isPoints)&&(U.castShadow||U.receiveShadow&&C===Hi)&&(!U.frustumCulled||n.intersectsObject(U))){U.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,U.matrixWorld);const W=t.update(U),K=U.material;if(Array.isArray(K)){const at=W.groups;for(let V=0,it=at.length;V<it;V++){const Y=at[V],ct=K[Y.materialIndex];if(ct&&ct.visible){const gt=A(U,ct,w,C);U.onBeforeShadow(a,U,I,z,W,gt,Y),a.renderBufferDirect(z,null,W,gt,U,Y),U.onAfterShadow(a,U,I,z,W,gt,Y)}}}else if(K.visible){const at=A(U,K,w,C);U.onBeforeShadow(a,U,I,z,W,at,null),a.renderBufferDirect(z,null,W,at,U,null),U.onAfterShadow(a,U,I,z,W,at,null)}}const $=U.children;for(let W=0,K=$.length;W<K;W++)T($[W],I,z,w,C)}function L(U){U.target.removeEventListener("dispose",L);for(const z in f){const w=f[z],C=U.target.uuid;C in w&&(w[C].dispose(),delete w[C])}}}const D2={[Vu]:Gu,[ku]:qu,[Wu]:Yu,[ar]:Xu,[Gu]:Vu,[qu]:ku,[Yu]:Wu,[Xu]:ar};function U2(a,t){function e(){let k=!1;const Rt=new Re;let st=null;const ut=new Re(0,0,0,0);return{setMask:function(Ut){st!==Ut&&!k&&(a.colorMask(Ut,Ut,Ut,Ut),st=Ut)},setLocked:function(Ut){k=Ut},setClear:function(Ut,Nt,re,Ve,Qe){Qe===!0&&(Ut*=Ve,Nt*=Ve,re*=Ve),Rt.set(Ut,Nt,re,Ve),ut.equals(Rt)===!1&&(a.clearColor(Ut,Nt,re,Ve),ut.copy(Rt))},reset:function(){k=!1,st=null,ut.set(-1,0,0,0)}}}function n(){let k=!1,Rt=!1,st=null,ut=null,Ut=null;return{setReversed:function(Nt){if(Rt!==Nt){const re=t.get("EXT_clip_control");Rt?re.clipControlEXT(re.LOWER_LEFT_EXT,re.ZERO_TO_ONE_EXT):re.clipControlEXT(re.LOWER_LEFT_EXT,re.NEGATIVE_ONE_TO_ONE_EXT);const Ve=Ut;Ut=null,this.setClear(Ve)}Rt=Nt},getReversed:function(){return Rt},setTest:function(Nt){Nt?bt(a.DEPTH_TEST):Xt(a.DEPTH_TEST)},setMask:function(Nt){st!==Nt&&!k&&(a.depthMask(Nt),st=Nt)},setFunc:function(Nt){if(Rt&&(Nt=D2[Nt]),ut!==Nt){switch(Nt){case Vu:a.depthFunc(a.NEVER);break;case Gu:a.depthFunc(a.ALWAYS);break;case ku:a.depthFunc(a.LESS);break;case ar:a.depthFunc(a.LEQUAL);break;case Wu:a.depthFunc(a.EQUAL);break;case Xu:a.depthFunc(a.GEQUAL);break;case qu:a.depthFunc(a.GREATER);break;case Yu:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}ut=Nt}},setLocked:function(Nt){k=Nt},setClear:function(Nt){Ut!==Nt&&(Rt&&(Nt=1-Nt),a.clearDepth(Nt),Ut=Nt)},reset:function(){k=!1,st=null,ut=null,Ut=null,Rt=!1}}}function i(){let k=!1,Rt=null,st=null,ut=null,Ut=null,Nt=null,re=null,Ve=null,Qe=null;return{setTest:function(Ee){k||(Ee?bt(a.STENCIL_TEST):Xt(a.STENCIL_TEST))},setMask:function(Ee){Rt!==Ee&&!k&&(a.stencilMask(Ee),Rt=Ee)},setFunc:function(Ee,Zn,yi){(st!==Ee||ut!==Zn||Ut!==yi)&&(a.stencilFunc(Ee,Zn,yi),st=Ee,ut=Zn,Ut=yi)},setOp:function(Ee,Zn,yi){(Nt!==Ee||re!==Zn||Ve!==yi)&&(a.stencilOp(Ee,Zn,yi),Nt=Ee,re=Zn,Ve=yi)},setLocked:function(Ee){k=Ee},setClear:function(Ee){Qe!==Ee&&(a.clearStencil(Ee),Qe=Ee)},reset:function(){k=!1,Rt=null,st=null,ut=null,Ut=null,Nt=null,re=null,Ve=null,Qe=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,y=null,E=null,A=null,T=null,L=null,U=null,I=new Ot(0,0,0),z=0,w=!1,C=null,F=null,$=null,W=null,K=null;const at=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let V=!1,it=0;const Y=a.getParameter(a.VERSION);Y.indexOf("WebGL")!==-1?(it=parseFloat(/^WebGL (\d)/.exec(Y)[1]),V=it>=1):Y.indexOf("OpenGL ES")!==-1&&(it=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),V=it>=2);let ct=null,gt={};const St=a.getParameter(a.SCISSOR_BOX),Pt=a.getParameter(a.VIEWPORT),le=new Re().fromArray(St),nt=new Re().fromArray(Pt);function _t(k,Rt,st,ut){const Ut=new Uint8Array(4),Nt=a.createTexture();a.bindTexture(k,Nt),a.texParameteri(k,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(k,a.TEXTURE_MAG_FILTER,a.NEAREST);for(let re=0;re<st;re++)k===a.TEXTURE_3D||k===a.TEXTURE_2D_ARRAY?a.texImage3D(Rt,0,a.RGBA,1,1,ut,0,a.RGBA,a.UNSIGNED_BYTE,Ut):a.texImage2D(Rt+re,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,Ut);return Nt}const Bt={};Bt[a.TEXTURE_2D]=_t(a.TEXTURE_2D,a.TEXTURE_2D,1),Bt[a.TEXTURE_CUBE_MAP]=_t(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6),Bt[a.TEXTURE_2D_ARRAY]=_t(a.TEXTURE_2D_ARRAY,a.TEXTURE_2D_ARRAY,1,1),Bt[a.TEXTURE_3D]=_t(a.TEXTURE_3D,a.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),bt(a.DEPTH_TEST),l.setFunc(ar),vt(!1),Dt(Bp),bt(a.CULL_FACE),O(Rs);function bt(k){p[k]!==!0&&(a.enable(k),p[k]=!0)}function Xt(k){p[k]!==!1&&(a.disable(k),p[k]=!1)}function xe(k,Rt){return m[k]!==Rt?(a.bindFramebuffer(k,Rt),m[k]=Rt,k===a.DRAW_FRAMEBUFFER&&(m[a.FRAMEBUFFER]=Rt),k===a.FRAMEBUFFER&&(m[a.DRAW_FRAMEBUFFER]=Rt),!0):!1}function Yt(k,Rt){let st=v,ut=!1;if(k){st=g.get(Rt),st===void 0&&(st=[],g.set(Rt,st));const Ut=k.textures;if(st.length!==Ut.length||st[0]!==a.COLOR_ATTACHMENT0){for(let Nt=0,re=Ut.length;Nt<re;Nt++)st[Nt]=a.COLOR_ATTACHMENT0+Nt;st.length=Ut.length,ut=!0}}else st[0]!==a.BACK&&(st[0]=a.BACK,ut=!0);ut&&a.drawBuffers(st)}function ve(k){return x!==k?(a.useProgram(k),x=k,!0):!1}const mt={[aa]:a.FUNC_ADD,[cy]:a.FUNC_SUBTRACT,[uy]:a.FUNC_REVERSE_SUBTRACT};mt[hy]=a.MIN,mt[fy]=a.MAX;const ft={[dy]:a.ZERO,[py]:a.ONE,[my]:a.SRC_COLOR,[Fu]:a.SRC_ALPHA,[Sy]:a.SRC_ALPHA_SATURATE,[yy]:a.DST_COLOR,[vy]:a.DST_ALPHA,[gy]:a.ONE_MINUS_SRC_COLOR,[Hu]:a.ONE_MINUS_SRC_ALPHA,[xy]:a.ONE_MINUS_DST_COLOR,[_y]:a.ONE_MINUS_DST_ALPHA,[My]:a.CONSTANT_COLOR,[by]:a.ONE_MINUS_CONSTANT_COLOR,[Ey]:a.CONSTANT_ALPHA,[Ty]:a.ONE_MINUS_CONSTANT_ALPHA};function O(k,Rt,st,ut,Ut,Nt,re,Ve,Qe,Ee){if(k===Rs){b===!0&&(Xt(a.BLEND),b=!1);return}if(b===!1&&(bt(a.BLEND),b=!0),k!==ly){if(k!==S||Ee!==w){if((y!==aa||T!==aa)&&(a.blendEquation(a.FUNC_ADD),y=aa,T=aa),Ee)switch(k){case er:a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case zp:a.blendFunc(a.ONE,a.ONE);break;case Fp:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Hp:a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case er:a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case zp:a.blendFunc(a.SRC_ALPHA,a.ONE);break;case Fp:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Hp:a.blendFunc(a.ZERO,a.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}E=null,A=null,L=null,U=null,I.set(0,0,0),z=0,S=k,w=Ee}return}Ut=Ut||Rt,Nt=Nt||st,re=re||ut,(Rt!==y||Ut!==T)&&(a.blendEquationSeparate(mt[Rt],mt[Ut]),y=Rt,T=Ut),(st!==E||ut!==A||Nt!==L||re!==U)&&(a.blendFuncSeparate(ft[st],ft[ut],ft[Nt],ft[re]),E=st,A=ut,L=Nt,U=re),(Ve.equals(I)===!1||Qe!==z)&&(a.blendColor(Ve.r,Ve.g,Ve.b,Qe),I.copy(Ve),z=Qe),S=k,w=!1}function Wt(k,Rt){k.side===ts?Xt(a.CULL_FACE):bt(a.CULL_FACE);let st=k.side===Xn;Rt&&(st=!st),vt(st),k.blending===er&&k.transparent===!1?O(Rs):O(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.blendColor,k.blendAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),o.setMask(k.colorWrite);const ut=k.stencilWrite;c.setTest(ut),ut&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),Qt(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?bt(a.SAMPLE_ALPHA_TO_COVERAGE):Xt(a.SAMPLE_ALPHA_TO_COVERAGE)}function vt(k){C!==k&&(k?a.frontFace(a.CW):a.frontFace(a.CCW),C=k)}function Dt(k){k!==ay?(bt(a.CULL_FACE),k!==F&&(k===Bp?a.cullFace(a.BACK):k===ry?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):Xt(a.CULL_FACE),F=k}function Et(k){k!==$&&(V&&a.lineWidth(k),$=k)}function Qt(k,Rt,st){k?(bt(a.POLYGON_OFFSET_FILL),(W!==Rt||K!==st)&&(a.polygonOffset(Rt,st),W=Rt,K=st)):Xt(a.POLYGON_OFFSET_FILL)}function Tt(k){k?bt(a.SCISSOR_TEST):Xt(a.SCISSOR_TEST)}function P(k){k===void 0&&(k=a.TEXTURE0+at-1),ct!==k&&(a.activeTexture(k),ct=k)}function R(k,Rt,st){st===void 0&&(ct===null?st=a.TEXTURE0+at-1:st=ct);let ut=gt[st];ut===void 0&&(ut={type:void 0,texture:void 0},gt[st]=ut),(ut.type!==k||ut.texture!==Rt)&&(ct!==st&&(a.activeTexture(st),ct=st),a.bindTexture(k,Rt||Bt[k]),ut.type=k,ut.texture=Rt)}function J(){const k=gt[ct];k!==void 0&&k.type!==void 0&&(a.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function rt(){try{a.compressedTexImage2D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function dt(){try{a.compressedTexImage3D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function lt(){try{a.texSubImage2D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function kt(){try{a.texSubImage3D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function wt(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function zt(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function me(){try{a.texStorage2D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function yt(){try{a.texStorage3D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Vt(){try{a.texImage2D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Zt(){try{a.texImage3D.apply(a,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function jt(k){le.equals(k)===!1&&(a.scissor(k.x,k.y,k.z,k.w),le.copy(k))}function Ft(k){nt.equals(k)===!1&&(a.viewport(k.x,k.y,k.z,k.w),nt.copy(k))}function ge(k,Rt){let st=f.get(Rt);st===void 0&&(st=new WeakMap,f.set(Rt,st));let ut=st.get(k);ut===void 0&&(ut=a.getUniformBlockIndex(Rt,k.name),st.set(k,ut))}function se(k,Rt){const ut=f.get(Rt).get(k);h.get(Rt)!==ut&&(a.uniformBlockBinding(Rt,ut,k.__bindingPointIndex),h.set(Rt,ut))}function Ue(){a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SCISSOR_TEST),a.disable(a.STENCIL_TEST),a.disable(a.SAMPLE_ALPHA_TO_COVERAGE),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.blendFuncSeparate(a.ONE,a.ZERO,a.ONE,a.ZERO),a.blendColor(0,0,0,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(a.LESS),l.setReversed(!1),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(a.ALWAYS,0,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.clearStencil(0),a.cullFace(a.BACK),a.frontFace(a.CCW),a.polygonOffset(0,0),a.activeTexture(a.TEXTURE0),a.bindFramebuffer(a.FRAMEBUFFER,null),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(a.READ_FRAMEBUFFER,null),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),p={},ct=null,gt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,y=null,E=null,A=null,T=null,L=null,U=null,I=new Ot(0,0,0),z=0,w=!1,C=null,F=null,$=null,W=null,K=null,le.set(0,0,a.canvas.width,a.canvas.height),nt.set(0,0,a.canvas.width,a.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:bt,disable:Xt,bindFramebuffer:xe,drawBuffers:Yt,useProgram:ve,setBlending:O,setMaterial:Wt,setFlipSided:vt,setCullFace:Dt,setLineWidth:Et,setPolygonOffset:Qt,setScissorTest:Tt,activeTexture:P,bindTexture:R,unbindTexture:J,compressedTexImage2D:rt,compressedTexImage3D:dt,texImage2D:Vt,texImage3D:Zt,updateUBOMapping:ge,uniformBlockBinding:se,texStorage2D:me,texStorage3D:yt,texSubImage2D:lt,texSubImage3D:kt,compressedTexSubImage2D:wt,compressedTexSubImage3D:zt,scissor:jt,viewport:Ft,reset:Ue}}function N2(a,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new ht,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(P,R){return v?new OffscreenCanvas(P,R):Bl("canvas")}function b(P,R,J){let rt=1;const dt=Tt(P);if((dt.width>J||dt.height>J)&&(rt=J/Math.max(dt.width,dt.height)),rt<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const lt=Math.floor(rt*dt.width),kt=Math.floor(rt*dt.height);m===void 0&&(m=x(lt,kt));const wt=R?x(lt,kt):m;return wt.width=lt,wt.height=kt,wt.getContext("2d").drawImage(P,0,0,lt,kt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+dt.width+"x"+dt.height+") to ("+lt+"x"+kt+")."),wt}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+dt.width+"x"+dt.height+")."),P;return P}function S(P){return P.generateMipmaps}function y(P){a.generateMipmap(P)}function E(P){return P.isWebGLCubeRenderTarget?a.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?a.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?a.TEXTURE_2D_ARRAY:a.TEXTURE_2D}function A(P,R,J,rt,dt=!1){if(P!==null){if(a[P]!==void 0)return a[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let lt=R;if(R===a.RED&&(J===a.FLOAT&&(lt=a.R32F),J===a.HALF_FLOAT&&(lt=a.R16F),J===a.UNSIGNED_BYTE&&(lt=a.R8)),R===a.RED_INTEGER&&(J===a.UNSIGNED_BYTE&&(lt=a.R8UI),J===a.UNSIGNED_SHORT&&(lt=a.R16UI),J===a.UNSIGNED_INT&&(lt=a.R32UI),J===a.BYTE&&(lt=a.R8I),J===a.SHORT&&(lt=a.R16I),J===a.INT&&(lt=a.R32I)),R===a.RG&&(J===a.FLOAT&&(lt=a.RG32F),J===a.HALF_FLOAT&&(lt=a.RG16F),J===a.UNSIGNED_BYTE&&(lt=a.RG8)),R===a.RG_INTEGER&&(J===a.UNSIGNED_BYTE&&(lt=a.RG8UI),J===a.UNSIGNED_SHORT&&(lt=a.RG16UI),J===a.UNSIGNED_INT&&(lt=a.RG32UI),J===a.BYTE&&(lt=a.RG8I),J===a.SHORT&&(lt=a.RG16I),J===a.INT&&(lt=a.RG32I)),R===a.RGB_INTEGER&&(J===a.UNSIGNED_BYTE&&(lt=a.RGB8UI),J===a.UNSIGNED_SHORT&&(lt=a.RGB16UI),J===a.UNSIGNED_INT&&(lt=a.RGB32UI),J===a.BYTE&&(lt=a.RGB8I),J===a.SHORT&&(lt=a.RGB16I),J===a.INT&&(lt=a.RGB32I)),R===a.RGBA_INTEGER&&(J===a.UNSIGNED_BYTE&&(lt=a.RGBA8UI),J===a.UNSIGNED_SHORT&&(lt=a.RGBA16UI),J===a.UNSIGNED_INT&&(lt=a.RGBA32UI),J===a.BYTE&&(lt=a.RGBA8I),J===a.SHORT&&(lt=a.RGBA16I),J===a.INT&&(lt=a.RGBA32I)),R===a.RGB&&J===a.UNSIGNED_INT_5_9_9_9_REV&&(lt=a.RGB9_E5),R===a.RGBA){const kt=dt?Pl:be.getTransfer(rt);J===a.FLOAT&&(lt=a.RGBA32F),J===a.HALF_FLOAT&&(lt=a.RGBA16F),J===a.UNSIGNED_BYTE&&(lt=kt===Oe?a.SRGB8_ALPHA8:a.RGBA8),J===a.UNSIGNED_SHORT_4_4_4_4&&(lt=a.RGBA4),J===a.UNSIGNED_SHORT_5_5_5_1&&(lt=a.RGB5_A1)}return(lt===a.R16F||lt===a.R32F||lt===a.RG16F||lt===a.RG32F||lt===a.RGBA16F||lt===a.RGBA32F)&&t.get("EXT_color_buffer_float"),lt}function T(P,R){let J;return P?R===null||R===Ls||R===rr?J=a.DEPTH24_STENCIL8:R===ni?J=a.DEPTH32F_STENCIL8:R===go&&(J=a.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Ls||R===rr?J=a.DEPTH_COMPONENT24:R===ni?J=a.DEPTH_COMPONENT32F:R===go&&(J=a.DEPTH_COMPONENT16),J}function L(P,R){return S(P)===!0||P.isFramebufferTexture&&P.minFilter!==En&&P.minFilter!==fn?Math.log2(Math.max(R.width,R.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?R.mipmaps.length:1}function U(P){const R=P.target;R.removeEventListener("dispose",U),z(R),R.isVideoTexture&&p.delete(R)}function I(P){const R=P.target;R.removeEventListener("dispose",I),C(R)}function z(P){const R=n.get(P);if(R.__webglInit===void 0)return;const J=P.source,rt=g.get(J);if(rt){const dt=rt[R.__cacheKey];dt.usedTimes--,dt.usedTimes===0&&w(P),Object.keys(rt).length===0&&g.delete(J)}n.remove(P)}function w(P){const R=n.get(P);a.deleteTexture(R.__webglTexture);const J=P.source,rt=g.get(J);delete rt[R.__cacheKey],l.memory.textures--}function C(P){const R=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(R.__webglFramebuffer[rt]))for(let dt=0;dt<R.__webglFramebuffer[rt].length;dt++)a.deleteFramebuffer(R.__webglFramebuffer[rt][dt]);else a.deleteFramebuffer(R.__webglFramebuffer[rt]);R.__webglDepthbuffer&&a.deleteRenderbuffer(R.__webglDepthbuffer[rt])}else{if(Array.isArray(R.__webglFramebuffer))for(let rt=0;rt<R.__webglFramebuffer.length;rt++)a.deleteFramebuffer(R.__webglFramebuffer[rt]);else a.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&a.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&a.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let rt=0;rt<R.__webglColorRenderbuffer.length;rt++)R.__webglColorRenderbuffer[rt]&&a.deleteRenderbuffer(R.__webglColorRenderbuffer[rt]);R.__webglDepthRenderbuffer&&a.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const J=P.textures;for(let rt=0,dt=J.length;rt<dt;rt++){const lt=n.get(J[rt]);lt.__webglTexture&&(a.deleteTexture(lt.__webglTexture),l.memory.textures--),n.remove(J[rt])}n.remove(P)}let F=0;function $(){F=0}function W(){const P=F;return P>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+i.maxTextures),F+=1,P}function K(P){const R=[];return R.push(P.wrapS),R.push(P.wrapT),R.push(P.wrapR||0),R.push(P.magFilter),R.push(P.minFilter),R.push(P.anisotropy),R.push(P.internalFormat),R.push(P.format),R.push(P.type),R.push(P.generateMipmaps),R.push(P.premultiplyAlpha),R.push(P.flipY),R.push(P.unpackAlignment),R.push(P.colorSpace),R.join()}function at(P,R){const J=n.get(P);if(P.isVideoTexture&&Et(P),P.isRenderTargetTexture===!1&&P.version>0&&J.__version!==P.version){const rt=P.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{nt(J,P,R);return}}e.bindTexture(a.TEXTURE_2D,J.__webglTexture,a.TEXTURE0+R)}function V(P,R){const J=n.get(P);if(P.version>0&&J.__version!==P.version){nt(J,P,R);return}e.bindTexture(a.TEXTURE_2D_ARRAY,J.__webglTexture,a.TEXTURE0+R)}function it(P,R){const J=n.get(P);if(P.version>0&&J.__version!==P.version){nt(J,P,R);return}e.bindTexture(a.TEXTURE_3D,J.__webglTexture,a.TEXTURE0+R)}function Y(P,R){const J=n.get(P);if(P.version>0&&J.__version!==P.version){_t(J,P,R);return}e.bindTexture(a.TEXTURE_CUBE_MAP,J.__webglTexture,a.TEXTURE0+R)}const ct={[Dl]:a.REPEAT,[Di]:a.CLAMP_TO_EDGE,[Ul]:a.MIRRORED_REPEAT},gt={[En]:a.NEAREST,[rm]:a.NEAREST_MIPMAP_NEAREST,[co]:a.NEAREST_MIPMAP_LINEAR,[fn]:a.LINEAR,[_l]:a.LINEAR_MIPMAP_NEAREST,[es]:a.LINEAR_MIPMAP_LINEAR},St={[Vy]:a.NEVER,[Yy]:a.ALWAYS,[Gy]:a.LESS,[vm]:a.LEQUAL,[ky]:a.EQUAL,[qy]:a.GEQUAL,[Wy]:a.GREATER,[Xy]:a.NOTEQUAL};function Pt(P,R){if(R.type===ni&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===fn||R.magFilter===_l||R.magFilter===co||R.magFilter===es||R.minFilter===fn||R.minFilter===_l||R.minFilter===co||R.minFilter===es)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),a.texParameteri(P,a.TEXTURE_WRAP_S,ct[R.wrapS]),a.texParameteri(P,a.TEXTURE_WRAP_T,ct[R.wrapT]),(P===a.TEXTURE_3D||P===a.TEXTURE_2D_ARRAY)&&a.texParameteri(P,a.TEXTURE_WRAP_R,ct[R.wrapR]),a.texParameteri(P,a.TEXTURE_MAG_FILTER,gt[R.magFilter]),a.texParameteri(P,a.TEXTURE_MIN_FILTER,gt[R.minFilter]),R.compareFunction&&(a.texParameteri(P,a.TEXTURE_COMPARE_MODE,a.COMPARE_REF_TO_TEXTURE),a.texParameteri(P,a.TEXTURE_COMPARE_FUNC,St[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===En||R.minFilter!==co&&R.minFilter!==es||R.type===ni&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const J=t.get("EXT_texture_filter_anisotropic");a.texParameterf(P,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function le(P,R){let J=!1;P.__webglInit===void 0&&(P.__webglInit=!0,R.addEventListener("dispose",U));const rt=R.source;let dt=g.get(rt);dt===void 0&&(dt={},g.set(rt,dt));const lt=K(R);if(lt!==P.__cacheKey){dt[lt]===void 0&&(dt[lt]={texture:a.createTexture(),usedTimes:0},l.memory.textures++,J=!0),dt[lt].usedTimes++;const kt=dt[P.__cacheKey];kt!==void 0&&(dt[P.__cacheKey].usedTimes--,kt.usedTimes===0&&w(R)),P.__cacheKey=lt,P.__webglTexture=dt[lt].texture}return J}function nt(P,R,J){let rt=a.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(rt=a.TEXTURE_2D_ARRAY),R.isData3DTexture&&(rt=a.TEXTURE_3D);const dt=le(P,R),lt=R.source;e.bindTexture(rt,P.__webglTexture,a.TEXTURE0+J);const kt=n.get(lt);if(lt.version!==kt.__version||dt===!0){e.activeTexture(a.TEXTURE0+J);const wt=be.getPrimaries(be.workingColorSpace),zt=R.colorSpace===As?null:be.getPrimaries(R.colorSpace),me=R.colorSpace===As||wt===zt?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,R.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,R.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,me);let yt=b(R.image,!1,i.maxTextureSize);yt=Qt(R,yt);const Vt=o.convert(R.format,R.colorSpace),Zt=o.convert(R.type);let jt=A(R.internalFormat,Vt,Zt,R.colorSpace,R.isVideoTexture);Pt(rt,R);let Ft;const ge=R.mipmaps,se=R.isVideoTexture!==!0,Ue=kt.__version===void 0||dt===!0,k=lt.dataReady,Rt=L(R,yt);if(R.isDepthTexture)jt=T(R.format===or,R.type),Ue&&(se?e.texStorage2D(a.TEXTURE_2D,1,jt,yt.width,yt.height):e.texImage2D(a.TEXTURE_2D,0,jt,yt.width,yt.height,0,Vt,Zt,null));else if(R.isDataTexture)if(ge.length>0){se&&Ue&&e.texStorage2D(a.TEXTURE_2D,Rt,jt,ge[0].width,ge[0].height);for(let st=0,ut=ge.length;st<ut;st++)Ft=ge[st],se?k&&e.texSubImage2D(a.TEXTURE_2D,st,0,0,Ft.width,Ft.height,Vt,Zt,Ft.data):e.texImage2D(a.TEXTURE_2D,st,jt,Ft.width,Ft.height,0,Vt,Zt,Ft.data);R.generateMipmaps=!1}else se?(Ue&&e.texStorage2D(a.TEXTURE_2D,Rt,jt,yt.width,yt.height),k&&e.texSubImage2D(a.TEXTURE_2D,0,0,0,yt.width,yt.height,Vt,Zt,yt.data)):e.texImage2D(a.TEXTURE_2D,0,jt,yt.width,yt.height,0,Vt,Zt,yt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){se&&Ue&&e.texStorage3D(a.TEXTURE_2D_ARRAY,Rt,jt,ge[0].width,ge[0].height,yt.depth);for(let st=0,ut=ge.length;st<ut;st++)if(Ft=ge[st],R.format!==Pn)if(Vt!==null)if(se){if(k)if(R.layerUpdates.size>0){const Ut=Jp(Ft.width,Ft.height,R.format,R.type);for(const Nt of R.layerUpdates){const re=Ft.data.subarray(Nt*Ut/Ft.data.BYTES_PER_ELEMENT,(Nt+1)*Ut/Ft.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,st,0,0,Nt,Ft.width,Ft.height,1,Vt,re)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,st,0,0,0,Ft.width,Ft.height,yt.depth,Vt,Ft.data)}else e.compressedTexImage3D(a.TEXTURE_2D_ARRAY,st,jt,Ft.width,Ft.height,yt.depth,0,Ft.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else se?k&&e.texSubImage3D(a.TEXTURE_2D_ARRAY,st,0,0,0,Ft.width,Ft.height,yt.depth,Vt,Zt,Ft.data):e.texImage3D(a.TEXTURE_2D_ARRAY,st,jt,Ft.width,Ft.height,yt.depth,0,Vt,Zt,Ft.data)}else{se&&Ue&&e.texStorage2D(a.TEXTURE_2D,Rt,jt,ge[0].width,ge[0].height);for(let st=0,ut=ge.length;st<ut;st++)Ft=ge[st],R.format!==Pn?Vt!==null?se?k&&e.compressedTexSubImage2D(a.TEXTURE_2D,st,0,0,Ft.width,Ft.height,Vt,Ft.data):e.compressedTexImage2D(a.TEXTURE_2D,st,jt,Ft.width,Ft.height,0,Ft.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):se?k&&e.texSubImage2D(a.TEXTURE_2D,st,0,0,Ft.width,Ft.height,Vt,Zt,Ft.data):e.texImage2D(a.TEXTURE_2D,st,jt,Ft.width,Ft.height,0,Vt,Zt,Ft.data)}else if(R.isDataArrayTexture)if(se){if(Ue&&e.texStorage3D(a.TEXTURE_2D_ARRAY,Rt,jt,yt.width,yt.height,yt.depth),k)if(R.layerUpdates.size>0){const st=Jp(yt.width,yt.height,R.format,R.type);for(const ut of R.layerUpdates){const Ut=yt.data.subarray(ut*st/yt.data.BYTES_PER_ELEMENT,(ut+1)*st/yt.data.BYTES_PER_ELEMENT);e.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,ut,yt.width,yt.height,1,Vt,Zt,Ut)}R.clearLayerUpdates()}else e.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,0,yt.width,yt.height,yt.depth,Vt,Zt,yt.data)}else e.texImage3D(a.TEXTURE_2D_ARRAY,0,jt,yt.width,yt.height,yt.depth,0,Vt,Zt,yt.data);else if(R.isData3DTexture)se?(Ue&&e.texStorage3D(a.TEXTURE_3D,Rt,jt,yt.width,yt.height,yt.depth),k&&e.texSubImage3D(a.TEXTURE_3D,0,0,0,0,yt.width,yt.height,yt.depth,Vt,Zt,yt.data)):e.texImage3D(a.TEXTURE_3D,0,jt,yt.width,yt.height,yt.depth,0,Vt,Zt,yt.data);else if(R.isFramebufferTexture){if(Ue)if(se)e.texStorage2D(a.TEXTURE_2D,Rt,jt,yt.width,yt.height);else{let st=yt.width,ut=yt.height;for(let Ut=0;Ut<Rt;Ut++)e.texImage2D(a.TEXTURE_2D,Ut,jt,st,ut,0,Vt,Zt,null),st>>=1,ut>>=1}}else if(ge.length>0){if(se&&Ue){const st=Tt(ge[0]);e.texStorage2D(a.TEXTURE_2D,Rt,jt,st.width,st.height)}for(let st=0,ut=ge.length;st<ut;st++)Ft=ge[st],se?k&&e.texSubImage2D(a.TEXTURE_2D,st,0,0,Vt,Zt,Ft):e.texImage2D(a.TEXTURE_2D,st,jt,Vt,Zt,Ft);R.generateMipmaps=!1}else if(se){if(Ue){const st=Tt(yt);e.texStorage2D(a.TEXTURE_2D,Rt,jt,st.width,st.height)}k&&e.texSubImage2D(a.TEXTURE_2D,0,0,0,Vt,Zt,yt)}else e.texImage2D(a.TEXTURE_2D,0,jt,Vt,Zt,yt);S(R)&&y(rt),kt.__version=lt.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function _t(P,R,J){if(R.image.length!==6)return;const rt=le(P,R),dt=R.source;e.bindTexture(a.TEXTURE_CUBE_MAP,P.__webglTexture,a.TEXTURE0+J);const lt=n.get(dt);if(dt.version!==lt.__version||rt===!0){e.activeTexture(a.TEXTURE0+J);const kt=be.getPrimaries(be.workingColorSpace),wt=R.colorSpace===As?null:be.getPrimaries(R.colorSpace),zt=R.colorSpace===As||kt===wt?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,R.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,R.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,zt);const me=R.isCompressedTexture||R.image[0].isCompressedTexture,yt=R.image[0]&&R.image[0].isDataTexture,Vt=[];for(let ut=0;ut<6;ut++)!me&&!yt?Vt[ut]=b(R.image[ut],!0,i.maxCubemapSize):Vt[ut]=yt?R.image[ut].image:R.image[ut],Vt[ut]=Qt(R,Vt[ut]);const Zt=Vt[0],jt=o.convert(R.format,R.colorSpace),Ft=o.convert(R.type),ge=A(R.internalFormat,jt,Ft,R.colorSpace),se=R.isVideoTexture!==!0,Ue=lt.__version===void 0||rt===!0,k=dt.dataReady;let Rt=L(R,Zt);Pt(a.TEXTURE_CUBE_MAP,R);let st;if(me){se&&Ue&&e.texStorage2D(a.TEXTURE_CUBE_MAP,Rt,ge,Zt.width,Zt.height);for(let ut=0;ut<6;ut++){st=Vt[ut].mipmaps;for(let Ut=0;Ut<st.length;Ut++){const Nt=st[Ut];R.format!==Pn?jt!==null?se?k&&e.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut,0,0,Nt.width,Nt.height,jt,Nt.data):e.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut,ge,Nt.width,Nt.height,0,Nt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):se?k&&e.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut,0,0,Nt.width,Nt.height,jt,Ft,Nt.data):e.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut,ge,Nt.width,Nt.height,0,jt,Ft,Nt.data)}}}else{if(st=R.mipmaps,se&&Ue){st.length>0&&Rt++;const ut=Tt(Vt[0]);e.texStorage2D(a.TEXTURE_CUBE_MAP,Rt,ge,ut.width,ut.height)}for(let ut=0;ut<6;ut++)if(yt){se?k&&e.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,0,0,0,Vt[ut].width,Vt[ut].height,jt,Ft,Vt[ut].data):e.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,0,ge,Vt[ut].width,Vt[ut].height,0,jt,Ft,Vt[ut].data);for(let Ut=0;Ut<st.length;Ut++){const re=st[Ut].image[ut].image;se?k&&e.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut+1,0,0,re.width,re.height,jt,Ft,re.data):e.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut+1,ge,re.width,re.height,0,jt,Ft,re.data)}}else{se?k&&e.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,0,0,0,jt,Ft,Vt[ut]):e.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,0,ge,jt,Ft,Vt[ut]);for(let Ut=0;Ut<st.length;Ut++){const Nt=st[Ut];se?k&&e.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut+1,0,0,jt,Ft,Nt.image[ut]):e.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+ut,Ut+1,ge,jt,Ft,Nt.image[ut])}}}S(R)&&y(a.TEXTURE_CUBE_MAP),lt.__version=dt.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function Bt(P,R,J,rt,dt,lt){const kt=o.convert(J.format,J.colorSpace),wt=o.convert(J.type),zt=A(J.internalFormat,kt,wt,J.colorSpace),me=n.get(R),yt=n.get(J);if(yt.__renderTarget=R,!me.__hasExternalTextures){const Vt=Math.max(1,R.width>>lt),Zt=Math.max(1,R.height>>lt);dt===a.TEXTURE_3D||dt===a.TEXTURE_2D_ARRAY?e.texImage3D(dt,lt,zt,Vt,Zt,R.depth,0,kt,wt,null):e.texImage2D(dt,lt,zt,Vt,Zt,0,kt,wt,null)}e.bindFramebuffer(a.FRAMEBUFFER,P),Dt(R)?c.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,rt,dt,yt.__webglTexture,0,vt(R)):(dt===a.TEXTURE_2D||dt>=a.TEXTURE_CUBE_MAP_POSITIVE_X&&dt<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&a.framebufferTexture2D(a.FRAMEBUFFER,rt,dt,yt.__webglTexture,lt),e.bindFramebuffer(a.FRAMEBUFFER,null)}function bt(P,R,J){if(a.bindRenderbuffer(a.RENDERBUFFER,P),R.depthBuffer){const rt=R.depthTexture,dt=rt&&rt.isDepthTexture?rt.type:null,lt=T(R.stencilBuffer,dt),kt=R.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,wt=vt(R);Dt(R)?c.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,wt,lt,R.width,R.height):J?a.renderbufferStorageMultisample(a.RENDERBUFFER,wt,lt,R.width,R.height):a.renderbufferStorage(a.RENDERBUFFER,lt,R.width,R.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,kt,a.RENDERBUFFER,P)}else{const rt=R.textures;for(let dt=0;dt<rt.length;dt++){const lt=rt[dt],kt=o.convert(lt.format,lt.colorSpace),wt=o.convert(lt.type),zt=A(lt.internalFormat,kt,wt,lt.colorSpace),me=vt(R);J&&Dt(R)===!1?a.renderbufferStorageMultisample(a.RENDERBUFFER,me,zt,R.width,R.height):Dt(R)?c.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,me,zt,R.width,R.height):a.renderbufferStorage(a.RENDERBUFFER,zt,R.width,R.height)}}a.bindRenderbuffer(a.RENDERBUFFER,null)}function Xt(P,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(a.FRAMEBUFFER,P),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(R.depthTexture);rt.__renderTarget=R,(!rt.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),at(R.depthTexture,0);const dt=rt.__webglTexture,lt=vt(R);if(R.depthTexture.format===nr)Dt(R)?c.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,dt,0,lt):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,dt,0);else if(R.depthTexture.format===or)Dt(R)?c.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,dt,0,lt):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,dt,0);else throw new Error("Unknown depthTexture format")}function xe(P){const R=n.get(P),J=P.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==P.depthTexture){const rt=P.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),rt){const dt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,rt.removeEventListener("dispose",dt)};rt.addEventListener("dispose",dt),R.__depthDisposeCallback=dt}R.__boundDepthTexture=rt}if(P.depthTexture&&!R.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");Xt(R.__webglFramebuffer,P)}else if(J){R.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(a.FRAMEBUFFER,R.__webglFramebuffer[rt]),R.__webglDepthbuffer[rt]===void 0)R.__webglDepthbuffer[rt]=a.createRenderbuffer(),bt(R.__webglDepthbuffer[rt],P,!1);else{const dt=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer[rt];a.bindRenderbuffer(a.RENDERBUFFER,lt),a.framebufferRenderbuffer(a.FRAMEBUFFER,dt,a.RENDERBUFFER,lt)}}else if(e.bindFramebuffer(a.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=a.createRenderbuffer(),bt(R.__webglDepthbuffer,P,!1);else{const rt=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,dt=R.__webglDepthbuffer;a.bindRenderbuffer(a.RENDERBUFFER,dt),a.framebufferRenderbuffer(a.FRAMEBUFFER,rt,a.RENDERBUFFER,dt)}e.bindFramebuffer(a.FRAMEBUFFER,null)}function Yt(P,R,J){const rt=n.get(P);R!==void 0&&Bt(rt.__webglFramebuffer,P,P.texture,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,0),J!==void 0&&xe(P)}function ve(P){const R=P.texture,J=n.get(P),rt=n.get(R);P.addEventListener("dispose",I);const dt=P.textures,lt=P.isWebGLCubeRenderTarget===!0,kt=dt.length>1;if(kt||(rt.__webglTexture===void 0&&(rt.__webglTexture=a.createTexture()),rt.__version=R.version,l.memory.textures++),lt){J.__webglFramebuffer=[];for(let wt=0;wt<6;wt++)if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer[wt]=[];for(let zt=0;zt<R.mipmaps.length;zt++)J.__webglFramebuffer[wt][zt]=a.createFramebuffer()}else J.__webglFramebuffer[wt]=a.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer=[];for(let wt=0;wt<R.mipmaps.length;wt++)J.__webglFramebuffer[wt]=a.createFramebuffer()}else J.__webglFramebuffer=a.createFramebuffer();if(kt)for(let wt=0,zt=dt.length;wt<zt;wt++){const me=n.get(dt[wt]);me.__webglTexture===void 0&&(me.__webglTexture=a.createTexture(),l.memory.textures++)}if(P.samples>0&&Dt(P)===!1){J.__webglMultisampledFramebuffer=a.createFramebuffer(),J.__webglColorRenderbuffer=[],e.bindFramebuffer(a.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let wt=0;wt<dt.length;wt++){const zt=dt[wt];J.__webglColorRenderbuffer[wt]=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,J.__webglColorRenderbuffer[wt]);const me=o.convert(zt.format,zt.colorSpace),yt=o.convert(zt.type),Vt=A(zt.internalFormat,me,yt,zt.colorSpace,P.isXRRenderTarget===!0),Zt=vt(P);a.renderbufferStorageMultisample(a.RENDERBUFFER,Zt,Vt,P.width,P.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+wt,a.RENDERBUFFER,J.__webglColorRenderbuffer[wt])}a.bindRenderbuffer(a.RENDERBUFFER,null),P.depthBuffer&&(J.__webglDepthRenderbuffer=a.createRenderbuffer(),bt(J.__webglDepthRenderbuffer,P,!0)),e.bindFramebuffer(a.FRAMEBUFFER,null)}}if(lt){e.bindTexture(a.TEXTURE_CUBE_MAP,rt.__webglTexture),Pt(a.TEXTURE_CUBE_MAP,R);for(let wt=0;wt<6;wt++)if(R.mipmaps&&R.mipmaps.length>0)for(let zt=0;zt<R.mipmaps.length;zt++)Bt(J.__webglFramebuffer[wt][zt],P,R,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+wt,zt);else Bt(J.__webglFramebuffer[wt],P,R,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+wt,0);S(R)&&y(a.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(kt){for(let wt=0,zt=dt.length;wt<zt;wt++){const me=dt[wt],yt=n.get(me);e.bindTexture(a.TEXTURE_2D,yt.__webglTexture),Pt(a.TEXTURE_2D,me),Bt(J.__webglFramebuffer,P,me,a.COLOR_ATTACHMENT0+wt,a.TEXTURE_2D,0),S(me)&&y(a.TEXTURE_2D)}e.unbindTexture()}else{let wt=a.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(wt=P.isWebGL3DRenderTarget?a.TEXTURE_3D:a.TEXTURE_2D_ARRAY),e.bindTexture(wt,rt.__webglTexture),Pt(wt,R),R.mipmaps&&R.mipmaps.length>0)for(let zt=0;zt<R.mipmaps.length;zt++)Bt(J.__webglFramebuffer[zt],P,R,a.COLOR_ATTACHMENT0,wt,zt);else Bt(J.__webglFramebuffer,P,R,a.COLOR_ATTACHMENT0,wt,0);S(R)&&y(wt),e.unbindTexture()}P.depthBuffer&&xe(P)}function mt(P){const R=P.textures;for(let J=0,rt=R.length;J<rt;J++){const dt=R[J];if(S(dt)){const lt=E(P),kt=n.get(dt).__webglTexture;e.bindTexture(lt,kt),y(lt),e.unbindTexture()}}}const ft=[],O=[];function Wt(P){if(P.samples>0){if(Dt(P)===!1){const R=P.textures,J=P.width,rt=P.height;let dt=a.COLOR_BUFFER_BIT;const lt=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,kt=n.get(P),wt=R.length>1;if(wt)for(let zt=0;zt<R.length;zt++)e.bindFramebuffer(a.FRAMEBUFFER,kt.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+zt,a.RENDERBUFFER,null),e.bindFramebuffer(a.FRAMEBUFFER,kt.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+zt,a.TEXTURE_2D,null,0);e.bindFramebuffer(a.READ_FRAMEBUFFER,kt.__webglMultisampledFramebuffer),e.bindFramebuffer(a.DRAW_FRAMEBUFFER,kt.__webglFramebuffer);for(let zt=0;zt<R.length;zt++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(dt|=a.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(dt|=a.STENCIL_BUFFER_BIT)),wt){a.framebufferRenderbuffer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,kt.__webglColorRenderbuffer[zt]);const me=n.get(R[zt]).__webglTexture;a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,me,0)}a.blitFramebuffer(0,0,J,rt,0,0,J,rt,dt,a.NEAREST),h===!0&&(ft.length=0,O.length=0,ft.push(a.COLOR_ATTACHMENT0+zt),P.depthBuffer&&P.resolveDepthBuffer===!1&&(ft.push(lt),O.push(lt),a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,O)),a.invalidateFramebuffer(a.READ_FRAMEBUFFER,ft))}if(e.bindFramebuffer(a.READ_FRAMEBUFFER,null),e.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),wt)for(let zt=0;zt<R.length;zt++){e.bindFramebuffer(a.FRAMEBUFFER,kt.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+zt,a.RENDERBUFFER,kt.__webglColorRenderbuffer[zt]);const me=n.get(R[zt]).__webglTexture;e.bindFramebuffer(a.FRAMEBUFFER,kt.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+zt,a.TEXTURE_2D,me,0)}e.bindFramebuffer(a.DRAW_FRAMEBUFFER,kt.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&h){const R=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT;a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,[R])}}}function vt(P){return Math.min(i.maxSamples,P.samples)}function Dt(P){const R=n.get(P);return P.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Et(P){const R=l.render.frame;p.get(P)!==R&&(p.set(P,R),P.update())}function Qt(P,R){const J=P.colorSpace,rt=P.format,dt=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||J!==ca&&J!==As&&(be.getTransfer(J)===Oe?(rt!==Pn||dt!==ki)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),R}function Tt(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(f.width=P.naturalWidth||P.width,f.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(f.width=P.displayWidth,f.height=P.displayHeight):(f.width=P.width,f.height=P.height),f}this.allocateTextureUnit=W,this.resetTextureUnits=$,this.setTexture2D=at,this.setTexture2DArray=V,this.setTexture3D=it,this.setTextureCube=Y,this.rebindTextures=Yt,this.setupRenderTarget=ve,this.updateRenderTargetMipmap=mt,this.updateMultisampleRenderTarget=Wt,this.setupDepthRenderbuffer=xe,this.setupFrameBufferTexture=Bt,this.useMultisampledRTT=Dt}function nS(a,t){function e(n,i=As){let o;const l=be.getTransfer(i);if(n===ki)return a.UNSIGNED_BYTE;if(n===Lh)return a.UNSIGNED_SHORT_4_4_4_4;if(n===Ph)return a.UNSIGNED_SHORT_5_5_5_1;if(n===cm)return a.UNSIGNED_INT_5_9_9_9_REV;if(n===om)return a.BYTE;if(n===lm)return a.SHORT;if(n===go)return a.UNSIGNED_SHORT;if(n===Nh)return a.INT;if(n===Ls)return a.UNSIGNED_INT;if(n===ni)return a.FLOAT;if(n===bo)return a.HALF_FLOAT;if(n===um)return a.ALPHA;if(n===hm)return a.RGB;if(n===Pn)return a.RGBA;if(n===fm)return a.LUMINANCE;if(n===dm)return a.LUMINANCE_ALPHA;if(n===nr)return a.DEPTH_COMPONENT;if(n===or)return a.DEPTH_STENCIL;if(n===Ih)return a.RED;if(n===Zl)return a.RED_INTEGER;if(n===pm)return a.RG;if(n===Oh)return a.RG_INTEGER;if(n===Bh)return a.RGBA_INTEGER;if(n===yl||n===xl||n===Sl||n===Ml)if(l===Oe)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===yl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===xl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Sl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ml)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===yl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===xl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Sl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ml)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Zu||n===Ku||n===Ju||n===ju)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===Zu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Ku)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ju)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ju)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Qu||n===$u||n===th)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===Qu||n===$u)return l===Oe?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===th)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===eh||n===nh||n===ih||n===sh||n===ah||n===rh||n===oh||n===lh||n===ch||n===uh||n===hh||n===fh||n===dh||n===ph)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===eh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===nh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ih)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===sh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ah)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===rh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===oh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===lh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===ch)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===uh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===hh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===fh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===dh)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ph)return l===Oe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===bl||n===mh||n===gh)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===bl)return l===Oe?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===mh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===gh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===mm||n===vh||n===_h||n===yh)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===bl)return o.COMPRESSED_RED_RGTC1_EXT;if(n===vh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===_h)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===yh)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===rr?a.UNSIGNED_INT_24_8:a[n]!==void 0?a[n]:null}return{convert:e}}const L2=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,P2=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class I2{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new sn,o=t.properties.get(i);o.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Wi({vertexShader:L2,fragmentShader:P2,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new un(new Ao(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class O2 extends rs{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=new I2,S=e.getContextAttributes();let y=null,E=null;const A=[],T=[],L=new ht;let U=null;const I=new yn;I.viewport=new Re;const z=new yn;z.viewport=new Re;const w=[I,z],C=new qx;let F=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(nt){let _t=A[nt];return _t===void 0&&(_t=new Ou,A[nt]=_t),_t.getTargetRaySpace()},this.getControllerGrip=function(nt){let _t=A[nt];return _t===void 0&&(_t=new Ou,A[nt]=_t),_t.getGripSpace()},this.getHand=function(nt){let _t=A[nt];return _t===void 0&&(_t=new Ou,A[nt]=_t),_t.getHandSpace()};function W(nt){const _t=T.indexOf(nt.inputSource);if(_t===-1)return;const Bt=A[_t];Bt!==void 0&&(Bt.update(nt.inputSource,nt.frame,f||l),Bt.dispatchEvent({type:nt.type,data:nt.inputSource}))}function K(){i.removeEventListener("select",W),i.removeEventListener("selectstart",W),i.removeEventListener("selectend",W),i.removeEventListener("squeeze",W),i.removeEventListener("squeezestart",W),i.removeEventListener("squeezeend",W),i.removeEventListener("end",K),i.removeEventListener("inputsourceschange",at);for(let nt=0;nt<A.length;nt++){const _t=T[nt];_t!==null&&(T[nt]=null,A[nt].disconnect(_t))}F=null,$=null,b.reset(),t.setRenderTarget(y),v=null,g=null,m=null,i=null,E=null,le.stop(),n.isPresenting=!1,t.setPixelRatio(U),t.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(nt){o=nt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(nt){c=nt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(nt){f=nt},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(nt){if(i=nt,i!==null){if(y=t.getRenderTarget(),i.addEventListener("select",W),i.addEventListener("selectstart",W),i.addEventListener("selectend",W),i.addEventListener("squeeze",W),i.addEventListener("squeezestart",W),i.addEventListener("squeezeend",W),i.addEventListener("end",K),i.addEventListener("inputsourceschange",at),S.xrCompatible!==!0&&await e.makeXRCompatible(),U=t.getPixelRatio(),t.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Bt=null,bt=null,Xt=null;S.depth&&(Xt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Bt=S.stencil?or:nr,bt=S.stencil?rr:Ls);const xe={colorFormat:e.RGBA8,depthFormat:Xt,scaleFactor:o};m=new XRWebGLBinding(i,e),g=m.createProjectionLayer(xe),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),E=new as(g.textureWidth,g.textureHeight,{format:Pn,type:ki,depthTexture:new Tm(g.textureWidth,g.textureHeight,bt,void 0,void 0,void 0,void 0,void 0,void 0,Bt),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1})}else{const Bt={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,Bt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new as(v.framebufferWidth,v.framebufferHeight,{format:Pn,type:ki,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil})}E.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),le.setContext(i),le.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function at(nt){for(let _t=0;_t<nt.removed.length;_t++){const Bt=nt.removed[_t],bt=T.indexOf(Bt);bt>=0&&(T[bt]=null,A[bt].disconnect(Bt))}for(let _t=0;_t<nt.added.length;_t++){const Bt=nt.added[_t];let bt=T.indexOf(Bt);if(bt===-1){for(let xe=0;xe<A.length;xe++)if(xe>=T.length){T.push(Bt),bt=xe;break}else if(T[xe]===null){T[xe]=Bt,bt=xe;break}if(bt===-1)break}const Xt=A[bt];Xt&&Xt.connect(Bt)}}const V=new B,it=new B;function Y(nt,_t,Bt){V.setFromMatrixPosition(_t.matrixWorld),it.setFromMatrixPosition(Bt.matrixWorld);const bt=V.distanceTo(it),Xt=_t.projectionMatrix.elements,xe=Bt.projectionMatrix.elements,Yt=Xt[14]/(Xt[10]-1),ve=Xt[14]/(Xt[10]+1),mt=(Xt[9]+1)/Xt[5],ft=(Xt[9]-1)/Xt[5],O=(Xt[8]-1)/Xt[0],Wt=(xe[8]+1)/xe[0],vt=Yt*O,Dt=Yt*Wt,Et=bt/(-O+Wt),Qt=Et*-O;if(_t.matrixWorld.decompose(nt.position,nt.quaternion,nt.scale),nt.translateX(Qt),nt.translateZ(Et),nt.matrixWorld.compose(nt.position,nt.quaternion,nt.scale),nt.matrixWorldInverse.copy(nt.matrixWorld).invert(),Xt[10]===-1)nt.projectionMatrix.copy(_t.projectionMatrix),nt.projectionMatrixInverse.copy(_t.projectionMatrixInverse);else{const Tt=Yt+Et,P=ve+Et,R=vt-Qt,J=Dt+(bt-Qt),rt=mt*ve/P*Tt,dt=ft*ve/P*Tt;nt.projectionMatrix.makePerspective(R,J,rt,dt,Tt,P),nt.projectionMatrixInverse.copy(nt.projectionMatrix).invert()}}function ct(nt,_t){_t===null?nt.matrixWorld.copy(nt.matrix):nt.matrixWorld.multiplyMatrices(_t.matrixWorld,nt.matrix),nt.matrixWorldInverse.copy(nt.matrixWorld).invert()}this.updateCamera=function(nt){if(i===null)return;let _t=nt.near,Bt=nt.far;b.texture!==null&&(b.depthNear>0&&(_t=b.depthNear),b.depthFar>0&&(Bt=b.depthFar)),C.near=z.near=I.near=_t,C.far=z.far=I.far=Bt,(F!==C.near||$!==C.far)&&(i.updateRenderState({depthNear:C.near,depthFar:C.far}),F=C.near,$=C.far),I.layers.mask=nt.layers.mask|2,z.layers.mask=nt.layers.mask|4,C.layers.mask=I.layers.mask|z.layers.mask;const bt=nt.parent,Xt=C.cameras;ct(C,bt);for(let xe=0;xe<Xt.length;xe++)ct(Xt[xe],bt);Xt.length===2?Y(C,I,z):C.projectionMatrix.copy(I.projectionMatrix),gt(nt,C,bt)};function gt(nt,_t,Bt){Bt===null?nt.matrix.copy(_t.matrixWorld):(nt.matrix.copy(Bt.matrixWorld),nt.matrix.invert(),nt.matrix.multiply(_t.matrixWorld)),nt.matrix.decompose(nt.position,nt.quaternion,nt.scale),nt.updateMatrixWorld(!0),nt.projectionMatrix.copy(_t.projectionMatrix),nt.projectionMatrixInverse.copy(_t.projectionMatrixInverse),nt.isPerspectiveCamera&&(nt.fov=vo*2*Math.atan(1/nt.projectionMatrix.elements[5]),nt.zoom=1)}this.getCamera=function(){return C},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(nt){h=nt,g!==null&&(g.fixedFoveation=nt),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=nt)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(C)};let St=null;function Pt(nt,_t){if(p=_t.getViewerPose(f||l),x=_t,p!==null){const Bt=p.views;v!==null&&(t.setRenderTargetFramebuffer(E,v.framebuffer),t.setRenderTarget(E));let bt=!1;Bt.length!==C.cameras.length&&(C.cameras.length=0,bt=!0);for(let Yt=0;Yt<Bt.length;Yt++){const ve=Bt[Yt];let mt=null;if(v!==null)mt=v.getViewport(ve);else{const O=m.getViewSubImage(g,ve);mt=O.viewport,Yt===0&&(t.setRenderTargetTextures(E,O.colorTexture,g.ignoreDepthValues?void 0:O.depthStencilTexture),t.setRenderTarget(E))}let ft=w[Yt];ft===void 0&&(ft=new yn,ft.layers.enable(Yt),ft.viewport=new Re,w[Yt]=ft),ft.matrix.fromArray(ve.transform.matrix),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),ft.projectionMatrix.fromArray(ve.projectionMatrix),ft.projectionMatrixInverse.copy(ft.projectionMatrix).invert(),ft.viewport.set(mt.x,mt.y,mt.width,mt.height),Yt===0&&(C.matrix.copy(ft.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale)),bt===!0&&C.cameras.push(ft)}const Xt=i.enabledFeatures;if(Xt&&Xt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const Yt=m.getDepthInformation(Bt[0]);Yt&&Yt.isValid&&Yt.texture&&b.init(t,Yt,i.renderState)}}for(let Bt=0;Bt<A.length;Bt++){const bt=T[Bt],Xt=A[Bt];bt!==null&&Xt!==void 0&&Xt.update(bt,_t,f||l)}St&&St(nt,_t),_t.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:_t}),x=null}const le=new jx;le.setAnimationLoop(Pt),this.setAnimationLoop=function(nt){St=nt},this.dispose=function(){}}}const qa=new _i,B2=new ee;function z2(a,t){function e(S,y){S.matrixAutoUpdate===!0&&S.updateMatrix(),y.value.copy(S.matrix)}function n(S,y){y.color.getRGB(S.fogColor.value,Qy(a)),y.isFog?(S.fogNear.value=y.near,S.fogFar.value=y.far):y.isFogExp2&&(S.fogDensity.value=y.density)}function i(S,y,E,A,T){y.isMeshBasicMaterial||y.isMeshLambertMaterial?o(S,y):y.isMeshToonMaterial?(o(S,y),m(S,y)):y.isMeshPhongMaterial?(o(S,y),p(S,y)):y.isMeshStandardMaterial?(o(S,y),g(S,y),y.isMeshPhysicalMaterial&&v(S,y,T)):y.isMeshMatcapMaterial?(o(S,y),x(S,y)):y.isMeshDepthMaterial?o(S,y):y.isMeshDistanceMaterial?(o(S,y),b(S,y)):y.isMeshNormalMaterial?o(S,y):y.isLineBasicMaterial?(l(S,y),y.isLineDashedMaterial&&c(S,y)):y.isPointsMaterial?h(S,y,E,A):y.isSpriteMaterial?f(S,y):y.isShadowMaterial?(S.color.value.copy(y.color),S.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function o(S,y){S.opacity.value=y.opacity,y.color&&S.diffuse.value.copy(y.color),y.emissive&&S.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.bumpMap&&(S.bumpMap.value=y.bumpMap,e(y.bumpMap,S.bumpMapTransform),S.bumpScale.value=y.bumpScale,y.side===Xn&&(S.bumpScale.value*=-1)),y.normalMap&&(S.normalMap.value=y.normalMap,e(y.normalMap,S.normalMapTransform),S.normalScale.value.copy(y.normalScale),y.side===Xn&&S.normalScale.value.negate()),y.displacementMap&&(S.displacementMap.value=y.displacementMap,e(y.displacementMap,S.displacementMapTransform),S.displacementScale.value=y.displacementScale,S.displacementBias.value=y.displacementBias),y.emissiveMap&&(S.emissiveMap.value=y.emissiveMap,e(y.emissiveMap,S.emissiveMapTransform)),y.specularMap&&(S.specularMap.value=y.specularMap,e(y.specularMap,S.specularMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest);const E=t.get(y),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,qa.copy(T),qa.x*=-1,qa.y*=-1,qa.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(qa.y*=-1,qa.z*=-1),S.envMapRotation.value.setFromMatrix4(B2.makeRotationFromEuler(qa)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=y.reflectivity,S.ior.value=y.ior,S.refractionRatio.value=y.refractionRatio),y.lightMap&&(S.lightMap.value=y.lightMap,S.lightMapIntensity.value=y.lightMapIntensity,e(y.lightMap,S.lightMapTransform)),y.aoMap&&(S.aoMap.value=y.aoMap,S.aoMapIntensity.value=y.aoMapIntensity,e(y.aoMap,S.aoMapTransform))}function l(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform))}function c(S,y){S.dashSize.value=y.dashSize,S.totalSize.value=y.dashSize+y.gapSize,S.scale.value=y.scale}function h(S,y,E,A){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.size.value=y.size*E,S.scale.value=A*.5,y.map&&(S.map.value=y.map,e(y.map,S.uvTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function f(S,y){S.diffuse.value.copy(y.color),S.opacity.value=y.opacity,S.rotation.value=y.rotation,y.map&&(S.map.value=y.map,e(y.map,S.mapTransform)),y.alphaMap&&(S.alphaMap.value=y.alphaMap,e(y.alphaMap,S.alphaMapTransform)),y.alphaTest>0&&(S.alphaTest.value=y.alphaTest)}function p(S,y){S.specular.value.copy(y.specular),S.shininess.value=Math.max(y.shininess,1e-4)}function m(S,y){y.gradientMap&&(S.gradientMap.value=y.gradientMap)}function g(S,y){S.metalness.value=y.metalness,y.metalnessMap&&(S.metalnessMap.value=y.metalnessMap,e(y.metalnessMap,S.metalnessMapTransform)),S.roughness.value=y.roughness,y.roughnessMap&&(S.roughnessMap.value=y.roughnessMap,e(y.roughnessMap,S.roughnessMapTransform)),y.envMap&&(S.envMapIntensity.value=y.envMapIntensity)}function v(S,y,E){S.ior.value=y.ior,y.sheen>0&&(S.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),S.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(S.sheenColorMap.value=y.sheenColorMap,e(y.sheenColorMap,S.sheenColorMapTransform)),y.sheenRoughnessMap&&(S.sheenRoughnessMap.value=y.sheenRoughnessMap,e(y.sheenRoughnessMap,S.sheenRoughnessMapTransform))),y.clearcoat>0&&(S.clearcoat.value=y.clearcoat,S.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(S.clearcoatMap.value=y.clearcoatMap,e(y.clearcoatMap,S.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,e(y.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(S.clearcoatNormalMap.value=y.clearcoatNormalMap,e(y.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===Xn&&S.clearcoatNormalScale.value.negate())),y.dispersion>0&&(S.dispersion.value=y.dispersion),y.iridescence>0&&(S.iridescence.value=y.iridescence,S.iridescenceIOR.value=y.iridescenceIOR,S.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(S.iridescenceMap.value=y.iridescenceMap,e(y.iridescenceMap,S.iridescenceMapTransform)),y.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=y.iridescenceThicknessMap,e(y.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),y.transmission>0&&(S.transmission.value=y.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),y.transmissionMap&&(S.transmissionMap.value=y.transmissionMap,e(y.transmissionMap,S.transmissionMapTransform)),S.thickness.value=y.thickness,y.thicknessMap&&(S.thicknessMap.value=y.thicknessMap,e(y.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=y.attenuationDistance,S.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(S.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(S.anisotropyMap.value=y.anisotropyMap,e(y.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=y.specularIntensity,S.specularColor.value.copy(y.specularColor),y.specularColorMap&&(S.specularColorMap.value=y.specularColorMap,e(y.specularColorMap,S.specularColorMapTransform)),y.specularIntensityMap&&(S.specularIntensityMap.value=y.specularIntensityMap,e(y.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,y){y.matcap&&(S.matcap.value=y.matcap)}function b(S,y){const E=t.get(y).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function F2(a,t,e,n){let i={},o={},l=[];const c=a.getParameter(a.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const L=A.program;n.updateUBOMapping(E,L);const U=t.render.frame;o[E.id]!==U&&(g(E),o[E.id]=U)}function p(E){const A=m();E.__bindingPointIndex=A;const T=a.createBuffer(),L=E.__size,U=E.usage;return a.bindBuffer(a.UNIFORM_BUFFER,T),a.bufferData(a.UNIFORM_BUFFER,L,U),a.bindBuffer(a.UNIFORM_BUFFER,null),a.bindBufferBase(a.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,L=E.__cache;a.bindBuffer(a.UNIFORM_BUFFER,A);for(let U=0,I=T.length;U<I;U++){const z=Array.isArray(T[U])?T[U]:[T[U]];for(let w=0,C=z.length;w<C;w++){const F=z[w];if(v(F,U,w,L)===!0){const $=F.__offset,W=Array.isArray(F.value)?F.value:[F.value];let K=0;for(let at=0;at<W.length;at++){const V=W[at],it=b(V);typeof V=="number"||typeof V=="boolean"?(F.__data[0]=V,a.bufferSubData(a.UNIFORM_BUFFER,$+K,F.__data)):V.isMatrix3?(F.__data[0]=V.elements[0],F.__data[1]=V.elements[1],F.__data[2]=V.elements[2],F.__data[3]=0,F.__data[4]=V.elements[3],F.__data[5]=V.elements[4],F.__data[6]=V.elements[5],F.__data[7]=0,F.__data[8]=V.elements[6],F.__data[9]=V.elements[7],F.__data[10]=V.elements[8],F.__data[11]=0):(V.toArray(F.__data,K),K+=it.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(a.UNIFORM_BUFFER,$,F.__data)}}}a.bindBuffer(a.UNIFORM_BUFFER,null)}function v(E,A,T,L){const U=E.value,I=A+"_"+T;if(L[I]===void 0)return typeof U=="number"||typeof U=="boolean"?L[I]=U:L[I]=U.clone(),!0;{const z=L[I];if(typeof U=="number"||typeof U=="boolean"){if(z!==U)return L[I]=U,!0}else if(z.equals(U)===!1)return z.copy(U),!0}return!1}function x(E){const A=E.uniforms;let T=0;const L=16;for(let I=0,z=A.length;I<z;I++){const w=Array.isArray(A[I])?A[I]:[A[I]];for(let C=0,F=w.length;C<F;C++){const $=w[C],W=Array.isArray($.value)?$.value:[$.value];for(let K=0,at=W.length;K<at;K++){const V=W[K],it=b(V),Y=T%L,ct=Y%it.boundary,gt=Y+ct;T+=ct,gt!==0&&L-gt<it.storage&&(T+=L-gt),$.__data=new Float32Array(it.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=T,T+=it.storage}}}const U=T%L;return U>0&&(T+=L-U),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),a.deleteBuffer(i[A.id]),delete i[A.id],delete o[A.id]}function y(){for(const E in i)a.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:y}}class iS{constructor(t={}){const{canvas:e=Ky(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,y=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Ln,this.toneMapping=ns,this.toneMappingExposure=1;const T=this;let L=!1,U=0,I=0,z=null,w=-1,C=null;const F=new Re,$=new Re;let W=null;const K=new Ot(0);let at=0,V=e.width,it=e.height,Y=1,ct=null,gt=null;const St=new Re(0,0,V,it),Pt=new Re(0,0,V,it);let le=!1;const nt=new jl;let _t=!1,Bt=!1;this.transmissionResolutionScale=1;const bt=new ee,Xt=new ee,xe=new B,Yt=new Re,ve={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let mt=!1;function ft(){return z===null?Y:1}let O=n;function Wt(D,G){return e.getContext(D,G)}try{const D={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Rh}`),e.addEventListener("webglcontextlost",ut,!1),e.addEventListener("webglcontextrestored",Ut,!1),e.addEventListener("webglcontextcreationerror",Nt,!1),O===null){const G="webgl2";if(O=Wt(G,D),O===null)throw Wt(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let vt,Dt,Et,Qt,Tt,P,R,J,rt,dt,lt,kt,wt,zt,me,yt,Vt,Zt,jt,Ft,ge,se,Ue,k;function Rt(){vt=new jw(O),vt.init(),se=new nS(O,vt),Dt=new Xw(O,vt,t,se),Et=new U2(O,vt),Dt.reverseDepthBuffer&&g&&Et.buffers.depth.setReversed(!0),Qt=new tR(O),Tt=new _2,P=new N2(O,vt,Et,Tt,Dt,se,Qt),R=new Yw(T),J=new Jw(T),rt=new oA(O),Ue=new kw(O,rt),dt=new Qw(O,rt,Qt,Ue),lt=new nR(O,dt,rt,Qt),jt=new eR(O,Dt,P),yt=new qw(Tt),kt=new v2(T,R,J,vt,Dt,Ue,yt),wt=new z2(T,Tt),zt=new x2,me=new A2(vt),Zt=new Gw(T,R,J,Et,lt,v,h),Vt=new R2(T,lt,Dt),k=new F2(O,Qt,Dt,Et),Ft=new Ww(O,vt,Qt),ge=new $w(O,vt,Qt),Qt.programs=kt.programs,T.capabilities=Dt,T.extensions=vt,T.properties=Tt,T.renderLists=zt,T.shadowMap=Vt,T.state=Et,T.info=Qt}Rt();const st=new O2(T,O);this.xr=st,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const D=vt.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=vt.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(D){D!==void 0&&(Y=D,this.setSize(V,it,!1))},this.getSize=function(D){return D.set(V,it)},this.setSize=function(D,G,Q=!0){if(st.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=D,it=G,e.width=Math.floor(D*Y),e.height=Math.floor(G*Y),Q===!0&&(e.style.width=D+"px",e.style.height=G+"px"),this.setViewport(0,0,D,G)},this.getDrawingBufferSize=function(D){return D.set(V*Y,it*Y).floor()},this.setDrawingBufferSize=function(D,G,Q){V=D,it=G,Y=Q,e.width=Math.floor(D*Q),e.height=Math.floor(G*Q),this.setViewport(0,0,D,G)},this.getCurrentViewport=function(D){return D.copy(F)},this.getViewport=function(D){return D.copy(St)},this.setViewport=function(D,G,Q,tt){D.isVector4?St.set(D.x,D.y,D.z,D.w):St.set(D,G,Q,tt),Et.viewport(F.copy(St).multiplyScalar(Y).round())},this.getScissor=function(D){return D.copy(Pt)},this.setScissor=function(D,G,Q,tt){D.isVector4?Pt.set(D.x,D.y,D.z,D.w):Pt.set(D,G,Q,tt),Et.scissor($.copy(Pt).multiplyScalar(Y).round())},this.getScissorTest=function(){return le},this.setScissorTest=function(D){Et.setScissorTest(le=D)},this.setOpaqueSort=function(D){ct=D},this.setTransparentSort=function(D){gt=D},this.getClearColor=function(D){return D.copy(Zt.getClearColor())},this.setClearColor=function(){Zt.setClearColor.apply(Zt,arguments)},this.getClearAlpha=function(){return Zt.getClearAlpha()},this.setClearAlpha=function(){Zt.setClearAlpha.apply(Zt,arguments)},this.clear=function(D=!0,G=!0,Q=!0){let tt=0;if(D){let X=!1;if(z!==null){const pt=z.texture.format;X=pt===Bh||pt===Oh||pt===Zl}if(X){const pt=z.texture.type,At=pt===ki||pt===Ls||pt===go||pt===rr||pt===Lh||pt===Ph,Ht=Zt.getClearColor(),Gt=Zt.getClearAlpha(),te=Ht.r,ne=Ht.g,Kt=Ht.b;At?(x[0]=te,x[1]=ne,x[2]=Kt,x[3]=Gt,O.clearBufferuiv(O.COLOR,0,x)):(b[0]=te,b[1]=ne,b[2]=Kt,b[3]=Gt,O.clearBufferiv(O.COLOR,0,b))}else tt|=O.COLOR_BUFFER_BIT}G&&(tt|=O.DEPTH_BUFFER_BIT),Q&&(tt|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(tt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ut,!1),e.removeEventListener("webglcontextrestored",Ut,!1),e.removeEventListener("webglcontextcreationerror",Nt,!1),Zt.dispose(),zt.dispose(),me.dispose(),Tt.dispose(),R.dispose(),J.dispose(),lt.dispose(),Ue.dispose(),k.dispose(),kt.dispose(),st.dispose(),st.removeEventListener("sessionstart",Ro),st.removeEventListener("sessionend",pr),Ui.stop()};function ut(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function Ut(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const D=Qt.autoReset,G=Vt.enabled,Q=Vt.autoUpdate,tt=Vt.needsUpdate,X=Vt.type;Rt(),Qt.autoReset=D,Vt.enabled=G,Vt.autoUpdate=Q,Vt.needsUpdate=tt,Vt.type=X}function Nt(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function re(D){const G=D.target;G.removeEventListener("dispose",re),Ve(G)}function Ve(D){Qe(D),Tt.remove(D)}function Qe(D){const G=Tt.get(D).programs;G!==void 0&&(G.forEach(function(Q){kt.releaseProgram(Q)}),D.isShaderMaterial&&kt.releaseShaderCache(D))}this.renderBufferDirect=function(D,G,Q,tt,X,pt){G===null&&(G=ve);const At=X.isMesh&&X.matrixWorld.determinant()<0,Ht=sc(D,G,Q,tt,X);Et.setMaterial(tt,At);let Gt=Q.index,te=1;if(tt.wireframe===!0){if(Gt=dt.getWireframeAttribute(Q),Gt===void 0)return;te=2}const ne=Q.drawRange,Kt=Q.attributes.position;let Se=ne.start*te,Ae=(ne.start+ne.count)*te;pt!==null&&(Se=Math.max(Se,pt.start*te),Ae=Math.min(Ae,(pt.start+pt.count)*te)),Gt!==null?(Se=Math.max(Se,0),Ae=Math.min(Ae,Gt.count)):Kt!=null&&(Se=Math.max(Se,0),Ae=Math.min(Ae,Kt.count));const Ke=Ae-Se;if(Ke<0||Ke===1/0)return;Ue.setup(X,tt,Ht,Q,Gt);let We,Me=Ft;if(Gt!==null&&(We=rt.get(Gt),Me=ge,Me.setIndex(We)),X.isMesh)tt.wireframe===!0?(Et.setLineWidth(tt.wireframeLinewidth*ft()),Me.setMode(O.LINES)):Me.setMode(O.TRIANGLES);else if(X.isLine){let $t=tt.linewidth;$t===void 0&&($t=1),Et.setLineWidth($t*ft()),X.isLineSegments?Me.setMode(O.LINES):X.isLineLoop?Me.setMode(O.LINE_LOOP):Me.setMode(O.LINE_STRIP)}else X.isPoints?Me.setMode(O.POINTS):X.isSprite&&Me.setMode(O.TRIANGLES);if(X.isBatchedMesh)if(X._multiDrawInstances!==null)Me.renderMultiDrawInstances(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount,X._multiDrawInstances);else if(vt.get("WEBGL_multi_draw"))Me.renderMultiDraw(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount);else{const $t=X._multiDrawStarts,rn=X._multiDrawCounts,Ce=X._multiDrawCount,Jn=Gt?rt.get(Gt).bytesPerElement:1,Yi=Tt.get(tt).currentProgram.getUniforms();for(let Tn=0;Tn<Ce;Tn++)Yi.setValue(O,"_gl_DrawID",Tn),Me.render($t[Tn]/Jn,rn[Tn])}else if(X.isInstancedMesh)Me.renderInstances(Se,Ke,X.count);else if(Q.isInstancedBufferGeometry){const $t=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,rn=Math.min(Q.instanceCount,$t);Me.renderInstances(Se,Ke,rn)}else Me.render(Se,Ke)};function Ee(D,G,Q){D.transparent===!0&&D.side===ts&&D.forceSinglePass===!1?(D.side=Xn,D.needsUpdate=!0,ke(D,G,Q),D.side=Us,D.needsUpdate=!0,ke(D,G,Q),D.side=ts):ke(D,G,Q)}this.compile=function(D,G,Q=null){Q===null&&(Q=D),y=me.get(Q),y.init(G),A.push(y),Q.traverseVisible(function(X){X.isLight&&X.layers.test(G.layers)&&(y.pushLight(X),X.castShadow&&y.pushShadow(X))}),D!==Q&&D.traverseVisible(function(X){X.isLight&&X.layers.test(G.layers)&&(y.pushLight(X),X.castShadow&&y.pushShadow(X))}),y.setupLights();const tt=new Set;return D.traverse(function(X){if(!(X.isMesh||X.isPoints||X.isLine||X.isSprite))return;const pt=X.material;if(pt)if(Array.isArray(pt))for(let At=0;At<pt.length;At++){const Ht=pt[At];Ee(Ht,Q,X),tt.add(Ht)}else Ee(pt,Q,X),tt.add(pt)}),A.pop(),y=null,tt},this.compileAsync=function(D,G,Q=null){const tt=this.compile(D,G,Q);return new Promise(X=>{function pt(){if(tt.forEach(function(At){Tt.get(At).currentProgram.isReady()&&tt.delete(At)}),tt.size===0){X(D);return}setTimeout(pt,10)}vt.get("KHR_parallel_shader_compile")!==null?pt():setTimeout(pt,10)})};let Zn=null;function yi(D){Zn&&Zn(D)}function Ro(){Ui.stop()}function pr(){Ui.start()}const Ui=new jx;Ui.setAnimationLoop(yi),typeof self<"u"&&Ui.setContext(self),this.setAnimationLoop=function(D){Zn=D,st.setAnimationLoop(D),D===null?Ui.stop():Ui.start()},st.addEventListener("sessionstart",Ro),st.addEventListener("sessionend",pr),this.render=function(D,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),st.enabled===!0&&st.isPresenting===!0&&(st.cameraAutoUpdate===!0&&st.updateCamera(G),G=st.getCamera()),D.isScene===!0&&D.onBeforeRender(T,D,G,z),y=me.get(D,A.length),y.init(G),A.push(y),Xt.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),nt.setFromProjectionMatrix(Xt),Bt=this.localClippingEnabled,_t=yt.init(this.clippingPlanes,Bt),S=zt.get(D,E.length),S.init(),E.push(S),st.enabled===!0&&st.isPresenting===!0){const pt=T.xr.getDepthSensingMesh();pt!==null&&xi(pt,G,-1/0,T.sortObjects)}xi(D,G,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(ct,gt),mt=st.enabled===!1||st.isPresenting===!1||st.hasDepthSensing()===!1,mt&&Zt.addToRenderList(S,D),this.info.render.frame++,_t===!0&&yt.beginShadows();const Q=y.state.shadowsArray;Vt.render(Q,D,G),_t===!0&&yt.endShadows(),this.info.autoReset===!0&&this.info.reset();const tt=S.opaque,X=S.transmissive;if(y.setupLights(),G.isArrayCamera){const pt=G.cameras;if(X.length>0)for(let At=0,Ht=pt.length;At<Ht;At++){const Gt=pt[At];Ni(tt,X,D,Gt)}mt&&Zt.render(D);for(let At=0,Ht=pt.length;At<Ht;At++){const Gt=pt[At];Do(S,D,Gt,Gt.viewport)}}else X.length>0&&Ni(tt,X,D,G),mt&&Zt.render(D),Do(S,D,G);z!==null&&I===0&&(P.updateMultisampleRenderTarget(z),P.updateRenderTargetMipmap(z)),D.isScene===!0&&D.onAfterRender(T,D,G),Ue.resetDefaultState(),w=-1,C=null,A.pop(),A.length>0?(y=A[A.length-1],_t===!0&&yt.setGlobalState(T.clippingPlanes,y.state.camera)):y=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function xi(D,G,Q,tt){if(D.visible===!1)return;if(D.layers.test(G.layers)){if(D.isGroup)Q=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(G);else if(D.isLight)y.pushLight(D),D.castShadow&&y.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||nt.intersectsSprite(D)){tt&&Yt.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Xt);const At=lt.update(D),Ht=D.material;Ht.visible&&S.push(D,At,Ht,Q,Yt.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||nt.intersectsObject(D))){const At=lt.update(D),Ht=D.material;if(tt&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),Yt.copy(D.boundingSphere.center)):(At.boundingSphere===null&&At.computeBoundingSphere(),Yt.copy(At.boundingSphere.center)),Yt.applyMatrix4(D.matrixWorld).applyMatrix4(Xt)),Array.isArray(Ht)){const Gt=At.groups;for(let te=0,ne=Gt.length;te<ne;te++){const Kt=Gt[te],Se=Ht[Kt.materialIndex];Se&&Se.visible&&S.push(D,At,Se,Q,Yt.z,Kt)}}else Ht.visible&&S.push(D,At,Ht,Q,Yt.z,null)}}const pt=D.children;for(let At=0,Ht=pt.length;At<Ht;At++)xi(pt[At],G,Q,tt)}function Do(D,G,Q,tt){const X=D.opaque,pt=D.transmissive,At=D.transparent;y.setupLightsView(Q),_t===!0&&yt.setGlobalState(T.clippingPlanes,Q),tt&&Et.viewport(F.copy(tt)),X.length>0&&Kn(X,G,Q),pt.length>0&&Kn(pt,G,Q),At.length>0&&Kn(At,G,Q),Et.buffers.depth.setTest(!0),Et.buffers.depth.setMask(!0),Et.buffers.color.setMask(!0),Et.setPolygonOffset(!1)}function Ni(D,G,Q,tt){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;y.state.transmissionRenderTarget[tt.id]===void 0&&(y.state.transmissionRenderTarget[tt.id]=new as(1,1,{generateMipmaps:!0,type:vt.has("EXT_color_buffer_half_float")||vt.has("EXT_color_buffer_float")?bo:ki,minFilter:es,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:be.workingColorSpace}));const pt=y.state.transmissionRenderTarget[tt.id],At=tt.viewport||F;pt.setSize(At.z*T.transmissionResolutionScale,At.w*T.transmissionResolutionScale);const Ht=T.getRenderTarget();T.setRenderTarget(pt),T.getClearColor(K),at=T.getClearAlpha(),at<1&&T.setClearColor(16777215,.5),T.clear(),mt&&Zt.render(Q);const Gt=T.toneMapping;T.toneMapping=ns;const te=tt.viewport;if(tt.viewport!==void 0&&(tt.viewport=void 0),y.setupLightsView(tt),_t===!0&&yt.setGlobalState(T.clippingPlanes,tt),Kn(D,Q,tt),P.updateMultisampleRenderTarget(pt),P.updateRenderTargetMipmap(pt),vt.has("WEBGL_multisampled_render_to_texture")===!1){let ne=!1;for(let Kt=0,Se=G.length;Kt<Se;Kt++){const Ae=G[Kt],Ke=Ae.object,We=Ae.geometry,Me=Ae.material,$t=Ae.group;if(Me.side===ts&&Ke.layers.test(tt.layers)){const rn=Me.side;Me.side=Xn,Me.needsUpdate=!0,ma(Ke,Q,tt,We,Me,$t),Me.side=rn,Me.needsUpdate=!0,ne=!0}}ne===!0&&(P.updateMultisampleRenderTarget(pt),P.updateRenderTargetMipmap(pt))}T.setRenderTarget(Ht),T.setClearColor(K,at),te!==void 0&&(tt.viewport=te),T.toneMapping=Gt}function Kn(D,G,Q){const tt=G.isScene===!0?G.overrideMaterial:null;for(let X=0,pt=D.length;X<pt;X++){const At=D[X],Ht=At.object,Gt=At.geometry,te=tt===null?At.material:tt,ne=At.group;Ht.layers.test(Q.layers)&&ma(Ht,G,Q,Gt,te,ne)}}function ma(D,G,Q,tt,X,pt){D.onBeforeRender(T,G,Q,tt,X,pt),D.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),X.onBeforeRender(T,G,Q,tt,D,pt),X.transparent===!0&&X.side===ts&&X.forceSinglePass===!1?(X.side=Xn,X.needsUpdate=!0,T.renderBufferDirect(Q,G,tt,X,D,pt),X.side=Us,X.needsUpdate=!0,T.renderBufferDirect(Q,G,tt,X,D,pt),X.side=ts):T.renderBufferDirect(Q,G,tt,X,D,pt),D.onAfterRender(T,G,Q,tt,X,pt)}function ke(D,G,Q){G.isScene!==!0&&(G=ve);const tt=Tt.get(D),X=y.state.lights,pt=y.state.shadowsArray,At=X.state.version,Ht=kt.getParameters(D,X.state,pt,G,Q),Gt=kt.getProgramCacheKey(Ht);let te=tt.programs;tt.environment=D.isMeshStandardMaterial?G.environment:null,tt.fog=G.fog,tt.envMap=(D.isMeshStandardMaterial?J:R).get(D.envMap||tt.environment),tt.envMapRotation=tt.environment!==null&&D.envMap===null?G.environmentRotation:D.envMapRotation,te===void 0&&(D.addEventListener("dispose",re),te=new Map,tt.programs=te);let ne=te.get(Gt);if(ne!==void 0){if(tt.currentProgram===ne&&tt.lightsStateVersion===At)return gr(D,Ht),ne}else Ht.uniforms=kt.getUniforms(D),D.onBeforeCompile(Ht,T),ne=kt.acquireProgram(Ht,Gt),te.set(Gt,ne),tt.uniforms=Ht.uniforms;const Kt=tt.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(Kt.clippingPlanes=yt.uniform),gr(D,Ht),tt.needsLights=ff(D),tt.lightsStateVersion=At,tt.needsLights&&(Kt.ambientLightColor.value=X.state.ambient,Kt.lightProbe.value=X.state.probe,Kt.directionalLights.value=X.state.directional,Kt.directionalLightShadows.value=X.state.directionalShadow,Kt.spotLights.value=X.state.spot,Kt.spotLightShadows.value=X.state.spotShadow,Kt.rectAreaLights.value=X.state.rectArea,Kt.ltc_1.value=X.state.rectAreaLTC1,Kt.ltc_2.value=X.state.rectAreaLTC2,Kt.pointLights.value=X.state.point,Kt.pointLightShadows.value=X.state.pointShadow,Kt.hemisphereLights.value=X.state.hemi,Kt.directionalShadowMap.value=X.state.directionalShadowMap,Kt.directionalShadowMatrix.value=X.state.directionalShadowMatrix,Kt.spotShadowMap.value=X.state.spotShadowMap,Kt.spotLightMatrix.value=X.state.spotLightMatrix,Kt.spotLightMap.value=X.state.spotLightMap,Kt.pointShadowMap.value=X.state.pointShadowMap,Kt.pointShadowMatrix.value=X.state.pointShadowMatrix),tt.currentProgram=ne,tt.uniformsList=null,ne}function mr(D){if(D.uniformsList===null){const G=D.currentProgram.getUniforms();D.uniformsList=Bu.seqWithValue(G.seq,D.uniforms)}return D.uniformsList}function gr(D,G){const Q=Tt.get(D);Q.outputColorSpace=G.outputColorSpace,Q.batching=G.batching,Q.batchingColor=G.batchingColor,Q.instancing=G.instancing,Q.instancingColor=G.instancingColor,Q.instancingMorph=G.instancingMorph,Q.skinning=G.skinning,Q.morphTargets=G.morphTargets,Q.morphNormals=G.morphNormals,Q.morphColors=G.morphColors,Q.morphTargetsCount=G.morphTargetsCount,Q.numClippingPlanes=G.numClippingPlanes,Q.numIntersection=G.numClipIntersection,Q.vertexAlphas=G.vertexAlphas,Q.vertexTangents=G.vertexTangents,Q.toneMapping=G.toneMapping}function sc(D,G,Q,tt,X){G.isScene!==!0&&(G=ve),P.resetTextureUnits();const pt=G.fog,At=tt.isMeshStandardMaterial?G.environment:null,Ht=z===null?T.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:ca,Gt=(tt.isMeshStandardMaterial?J:R).get(tt.envMap||At),te=tt.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,ne=!!Q.attributes.tangent&&(!!tt.normalMap||tt.anisotropy>0),Kt=!!Q.morphAttributes.position,Se=!!Q.morphAttributes.normal,Ae=!!Q.morphAttributes.color;let Ke=ns;tt.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(Ke=T.toneMapping);const We=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,Me=We!==void 0?We.length:0,$t=Tt.get(tt),rn=y.state.lights;if(_t===!0&&(Bt===!0||D!==C)){const xn=D===C&&tt.id===w;yt.setState(tt,D,xn)}let Ce=!1;tt.version===$t.__version?($t.needsLights&&$t.lightsStateVersion!==rn.state.version||$t.outputColorSpace!==Ht||X.isBatchedMesh&&$t.batching===!1||!X.isBatchedMesh&&$t.batching===!0||X.isBatchedMesh&&$t.batchingColor===!0&&X.colorTexture===null||X.isBatchedMesh&&$t.batchingColor===!1&&X.colorTexture!==null||X.isInstancedMesh&&$t.instancing===!1||!X.isInstancedMesh&&$t.instancing===!0||X.isSkinnedMesh&&$t.skinning===!1||!X.isSkinnedMesh&&$t.skinning===!0||X.isInstancedMesh&&$t.instancingColor===!0&&X.instanceColor===null||X.isInstancedMesh&&$t.instancingColor===!1&&X.instanceColor!==null||X.isInstancedMesh&&$t.instancingMorph===!0&&X.morphTexture===null||X.isInstancedMesh&&$t.instancingMorph===!1&&X.morphTexture!==null||$t.envMap!==Gt||tt.fog===!0&&$t.fog!==pt||$t.numClippingPlanes!==void 0&&($t.numClippingPlanes!==yt.numPlanes||$t.numIntersection!==yt.numIntersection)||$t.vertexAlphas!==te||$t.vertexTangents!==ne||$t.morphTargets!==Kt||$t.morphNormals!==Se||$t.morphColors!==Ae||$t.toneMapping!==Ke||$t.morphTargetsCount!==Me)&&(Ce=!0):(Ce=!0,$t.__version=tt.version);let Jn=$t.currentProgram;Ce===!0&&(Jn=ke(tt,G,X));let Yi=!1,Tn=!1,Is=!1;const Ge=Jn.getUniforms(),Bn=$t.uniforms;if(Et.useProgram(Jn.program)&&(Yi=!0,Tn=!0,Is=!0),tt.id!==w&&(w=tt.id,Tn=!0),Yi||C!==D){Et.buffers.depth.getReversed()?(bt.copy(D.projectionMatrix),RE(bt),DE(bt),Ge.setValue(O,"projectionMatrix",bt)):Ge.setValue(O,"projectionMatrix",D.projectionMatrix),Ge.setValue(O,"viewMatrix",D.matrixWorldInverse);const Sn=Ge.map.cameraPosition;Sn!==void 0&&Sn.setValue(O,xe.setFromMatrixPosition(D.matrixWorld)),Dt.logarithmicDepthBuffer&&Ge.setValue(O,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(tt.isMeshPhongMaterial||tt.isMeshToonMaterial||tt.isMeshLambertMaterial||tt.isMeshBasicMaterial||tt.isMeshStandardMaterial||tt.isShaderMaterial)&&Ge.setValue(O,"isOrthographic",D.isOrthographicCamera===!0),C!==D&&(C=D,Tn=!0,Is=!0)}if(X.isSkinnedMesh){Ge.setOptional(O,X,"bindMatrix"),Ge.setOptional(O,X,"bindMatrixInverse");const xn=X.skeleton;xn&&(xn.boneTexture===null&&xn.computeBoneTexture(),Ge.setValue(O,"boneTexture",xn.boneTexture,P))}X.isBatchedMesh&&(Ge.setOptional(O,X,"batchingTexture"),Ge.setValue(O,"batchingTexture",X._matricesTexture,P),Ge.setOptional(O,X,"batchingIdTexture"),Ge.setValue(O,"batchingIdTexture",X._indirectTexture,P),Ge.setOptional(O,X,"batchingColorTexture"),X._colorsTexture!==null&&Ge.setValue(O,"batchingColorTexture",X._colorsTexture,P));const zn=Q.morphAttributes;if((zn.position!==void 0||zn.normal!==void 0||zn.color!==void 0)&&jt.update(X,Q,Jn),(Tn||$t.receiveShadow!==X.receiveShadow)&&($t.receiveShadow=X.receiveShadow,Ge.setValue(O,"receiveShadow",X.receiveShadow)),tt.isMeshGouraudMaterial&&tt.envMap!==null&&(Bn.envMap.value=Gt,Bn.flipEnvMap.value=Gt.isCubeTexture&&Gt.isRenderTargetTexture===!1?-1:1),tt.isMeshStandardMaterial&&tt.envMap===null&&G.environment!==null&&(Bn.envMapIntensity.value=G.environmentIntensity),Tn&&(Ge.setValue(O,"toneMappingExposure",T.toneMappingExposure),$t.needsLights&&ac(Bn,Is),pt&&tt.fog===!0&&wt.refreshFogUniforms(Bn,pt),wt.refreshMaterialUniforms(Bn,tt,Y,it,y.state.transmissionRenderTarget[D.id]),Bu.upload(O,mr($t),Bn,P)),tt.isShaderMaterial&&tt.uniformsNeedUpdate===!0&&(Bu.upload(O,mr($t),Bn,P),tt.uniformsNeedUpdate=!1),tt.isSpriteMaterial&&Ge.setValue(O,"center",X.center),Ge.setValue(O,"modelViewMatrix",X.modelViewMatrix),Ge.setValue(O,"normalMatrix",X.normalMatrix),Ge.setValue(O,"modelMatrix",X.matrixWorld),tt.isShaderMaterial||tt.isRawShaderMaterial){const xn=tt.uniformsGroups;for(let Sn=0,Zi=xn.length;Sn<Zi;Sn++){const Ki=xn[Sn];k.update(Ki,Jn),k.bind(Ki,Jn)}}return Jn}function ac(D,G){D.ambientLightColor.needsUpdate=G,D.lightProbe.needsUpdate=G,D.directionalLights.needsUpdate=G,D.directionalLightShadows.needsUpdate=G,D.pointLights.needsUpdate=G,D.pointLightShadows.needsUpdate=G,D.spotLights.needsUpdate=G,D.spotLightShadows.needsUpdate=G,D.rectAreaLights.needsUpdate=G,D.hemisphereLights.needsUpdate=G}function ff(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return I},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(D,G,Q){Tt.get(D.texture).__webglTexture=G,Tt.get(D.depthTexture).__webglTexture=Q;const tt=Tt.get(D);tt.__hasExternalTextures=!0,tt.__autoAllocateDepthBuffer=Q===void 0,tt.__autoAllocateDepthBuffer||vt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),tt.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(D,G){const Q=Tt.get(D);Q.__webglFramebuffer=G,Q.__useDefaultFramebuffer=G===void 0};const Uo=O.createFramebuffer();this.setRenderTarget=function(D,G=0,Q=0){z=D,U=G,I=Q;let tt=!0,X=null,pt=!1,At=!1;if(D){const Gt=Tt.get(D);if(Gt.__useDefaultFramebuffer!==void 0)Et.bindFramebuffer(O.FRAMEBUFFER,null),tt=!1;else if(Gt.__webglFramebuffer===void 0)P.setupRenderTarget(D);else if(Gt.__hasExternalTextures)P.rebindTextures(D,Tt.get(D.texture).__webglTexture,Tt.get(D.depthTexture).__webglTexture);else if(D.depthBuffer){const Kt=D.depthTexture;if(Gt.__boundDepthTexture!==Kt){if(Kt!==null&&Tt.has(Kt)&&(D.width!==Kt.image.width||D.height!==Kt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(D)}}const te=D.texture;(te.isData3DTexture||te.isDataArrayTexture||te.isCompressedArrayTexture)&&(At=!0);const ne=Tt.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(ne[G])?X=ne[G][Q]:X=ne[G],pt=!0):D.samples>0&&P.useMultisampledRTT(D)===!1?X=Tt.get(D).__webglMultisampledFramebuffer:Array.isArray(ne)?X=ne[Q]:X=ne,F.copy(D.viewport),$.copy(D.scissor),W=D.scissorTest}else F.copy(St).multiplyScalar(Y).floor(),$.copy(Pt).multiplyScalar(Y).floor(),W=le;if(Q!==0&&(X=Uo),Et.bindFramebuffer(O.FRAMEBUFFER,X)&&tt&&Et.drawBuffers(D,X),Et.viewport(F),Et.scissor($),Et.setScissorTest(W),pt){const Gt=Tt.get(D.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+G,Gt.__webglTexture,Q)}else if(At){const Gt=Tt.get(D.texture),te=G;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Gt.__webglTexture,Q,te)}else if(D!==null&&Q!==0){const Gt=Tt.get(D.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Gt.__webglTexture,Q)}w=-1},this.readRenderTargetPixels=function(D,G,Q,tt,X,pt,At){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ht=Tt.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&At!==void 0&&(Ht=Ht[At]),Ht){Et.bindFramebuffer(O.FRAMEBUFFER,Ht);try{const Gt=D.texture,te=Gt.format,ne=Gt.type;if(!Dt.textureFormatReadable(te)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Dt.textureTypeReadable(ne)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=D.width-tt&&Q>=0&&Q<=D.height-X&&O.readPixels(G,Q,tt,X,se.convert(te),se.convert(ne),pt)}finally{const Gt=z!==null?Tt.get(z).__webglFramebuffer:null;Et.bindFramebuffer(O.FRAMEBUFFER,Gt)}}},this.readRenderTargetPixelsAsync=async function(D,G,Q,tt,X,pt,At){if(!(D&&D.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ht=Tt.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&At!==void 0&&(Ht=Ht[At]),Ht){const Gt=D.texture,te=Gt.format,ne=Gt.type;if(!Dt.textureFormatReadable(te))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Dt.textureTypeReadable(ne))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(G>=0&&G<=D.width-tt&&Q>=0&&Q<=D.height-X){Et.bindFramebuffer(O.FRAMEBUFFER,Ht);const Kt=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,Kt),O.bufferData(O.PIXEL_PACK_BUFFER,pt.byteLength,O.STREAM_READ),O.readPixels(G,Q,tt,X,se.convert(te),se.convert(ne),0);const Se=z!==null?Tt.get(z).__webglFramebuffer:null;Et.bindFramebuffer(O.FRAMEBUFFER,Se);const Ae=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await wE(O,Ae,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,Kt),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,pt),O.deleteBuffer(Kt),O.deleteSync(Ae),pt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(D,G=null,Q=0){D.isTexture!==!0&&(lo("WebGLRenderer: copyFramebufferToTexture function signature has changed."),G=arguments[0]||null,D=arguments[1]);const tt=Math.pow(2,-Q),X=Math.floor(D.image.width*tt),pt=Math.floor(D.image.height*tt),At=G!==null?G.x:0,Ht=G!==null?G.y:0;P.setTexture2D(D,0),O.copyTexSubImage2D(O.TEXTURE_2D,Q,0,0,At,Ht,X,pt),Et.unbindTexture()};const No=O.createFramebuffer(),Lo=O.createFramebuffer();this.copyTextureToTexture=function(D,G,Q=null,tt=null,X=0,pt=null){D.isTexture!==!0&&(lo("WebGLRenderer: copyTextureToTexture function signature has changed."),tt=arguments[0]||null,D=arguments[1],G=arguments[2],pt=arguments[3]||0,Q=null),pt===null&&(X!==0?(lo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),pt=X,X=0):pt=0);let At,Ht,Gt,te,ne,Kt,Se,Ae,Ke;const We=D.isCompressedTexture?D.mipmaps[pt]:D.image;if(Q!==null)At=Q.max.x-Q.min.x,Ht=Q.max.y-Q.min.y,Gt=Q.isBox3?Q.max.z-Q.min.z:1,te=Q.min.x,ne=Q.min.y,Kt=Q.isBox3?Q.min.z:0;else{const zn=Math.pow(2,-X);At=Math.floor(We.width*zn),Ht=Math.floor(We.height*zn),D.isDataArrayTexture?Gt=We.depth:D.isData3DTexture?Gt=Math.floor(We.depth*zn):Gt=1,te=0,ne=0,Kt=0}tt!==null?(Se=tt.x,Ae=tt.y,Ke=tt.z):(Se=0,Ae=0,Ke=0);const Me=se.convert(G.format),$t=se.convert(G.type);let rn;G.isData3DTexture?(P.setTexture3D(G,0),rn=O.TEXTURE_3D):G.isDataArrayTexture||G.isCompressedArrayTexture?(P.setTexture2DArray(G,0),rn=O.TEXTURE_2D_ARRAY):(P.setTexture2D(G,0),rn=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,G.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,G.unpackAlignment);const Ce=O.getParameter(O.UNPACK_ROW_LENGTH),Jn=O.getParameter(O.UNPACK_IMAGE_HEIGHT),Yi=O.getParameter(O.UNPACK_SKIP_PIXELS),Tn=O.getParameter(O.UNPACK_SKIP_ROWS),Is=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,We.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,We.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,te),O.pixelStorei(O.UNPACK_SKIP_ROWS,ne),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Kt);const Ge=D.isDataArrayTexture||D.isData3DTexture,Bn=G.isDataArrayTexture||G.isData3DTexture;if(D.isDepthTexture){const zn=Tt.get(D),xn=Tt.get(G),Sn=Tt.get(zn.__renderTarget),Zi=Tt.get(xn.__renderTarget);Et.bindFramebuffer(O.READ_FRAMEBUFFER,Sn.__webglFramebuffer),Et.bindFramebuffer(O.DRAW_FRAMEBUFFER,Zi.__webglFramebuffer);for(let Ki=0;Ki<Gt;Ki++)Ge&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Tt.get(D).__webglTexture,X,Kt+Ki),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Tt.get(G).__webglTexture,pt,Ke+Ki)),O.blitFramebuffer(te,ne,At,Ht,Se,Ae,At,Ht,O.DEPTH_BUFFER_BIT,O.NEAREST);Et.bindFramebuffer(O.READ_FRAMEBUFFER,null),Et.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(X!==0||D.isRenderTargetTexture||Tt.has(D)){const zn=Tt.get(D),xn=Tt.get(G);Et.bindFramebuffer(O.READ_FRAMEBUFFER,No),Et.bindFramebuffer(O.DRAW_FRAMEBUFFER,Lo);for(let Sn=0;Sn<Gt;Sn++)Ge?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,zn.__webglTexture,X,Kt+Sn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,zn.__webglTexture,X),Bn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,xn.__webglTexture,pt,Ke+Sn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,xn.__webglTexture,pt),X!==0?O.blitFramebuffer(te,ne,At,Ht,Se,Ae,At,Ht,O.COLOR_BUFFER_BIT,O.NEAREST):Bn?O.copyTexSubImage3D(rn,pt,Se,Ae,Ke+Sn,te,ne,At,Ht):O.copyTexSubImage2D(rn,pt,Se,Ae,te,ne,At,Ht);Et.bindFramebuffer(O.READ_FRAMEBUFFER,null),Et.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else Bn?D.isDataTexture||D.isData3DTexture?O.texSubImage3D(rn,pt,Se,Ae,Ke,At,Ht,Gt,Me,$t,We.data):G.isCompressedArrayTexture?O.compressedTexSubImage3D(rn,pt,Se,Ae,Ke,At,Ht,Gt,Me,We.data):O.texSubImage3D(rn,pt,Se,Ae,Ke,At,Ht,Gt,Me,$t,We):D.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,pt,Se,Ae,At,Ht,Me,$t,We.data):D.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,pt,Se,Ae,We.width,We.height,Me,We.data):O.texSubImage2D(O.TEXTURE_2D,pt,Se,Ae,At,Ht,Me,$t,We);O.pixelStorei(O.UNPACK_ROW_LENGTH,Ce),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Jn),O.pixelStorei(O.UNPACK_SKIP_PIXELS,Yi),O.pixelStorei(O.UNPACK_SKIP_ROWS,Tn),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Is),pt===0&&G.generateMipmaps&&O.generateMipmap(rn),Et.unbindTexture()},this.copyTextureToTexture3D=function(D,G,Q=null,tt=null,X=0){return D.isTexture!==!0&&(lo("WebGLRenderer: copyTextureToTexture3D function signature has changed."),Q=arguments[0]||null,tt=arguments[1]||null,D=arguments[2],G=arguments[3],X=arguments[4]||0),lo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(D,G,Q,tt,X)},this.initRenderTarget=function(D){Tt.get(D).__webglFramebuffer===void 0&&P.setupRenderTarget(D)},this.initTexture=function(D){D.isCubeTexture?P.setTextureCube(D,0):D.isData3DTexture?P.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?P.setTexture2DArray(D,0):P.setTexture2D(D,0),Et.unbindTexture()},this.resetState=function(){U=0,I=0,z=null,Et.reset(),Ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Gi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorspace=be._getDrawingBufferColorSpace(t),e.unpackColorSpace=be._getUnpackColorSpace()}}const H3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:am,AddEquation:aa,AddOperation:Cy,AdditiveAnimationBlendMode:gm,AdditiveBlending:zp,AgXToneMapping:Ny,AlphaFormat:um,AlwaysCompare:Yy,AlwaysDepth:Gu,AlwaysStencilFunc:Gp,AmbientLight:Hx,AnimationAction:Kx,AnimationClip:Wl,AnimationLoader:tT,AnimationMixer:RT,AnimationObjectGroup:CT,AnimationUtils:J1,ArcCurve:hx,ArrayCamera:qx,ArrowHelper:QT,AttachedBindMode:Vp,Audio:Yx,AudioAnalyser:vT,AudioContext:Hm,AudioListener:pT,AudioLoader:hT,AxesHelper:$T,BackSide:Xn,BasicDepthPacking:zy,BasicShadowMap:oy,BatchedMesh:ox,Bone:bm,BooleanKeyframeTrack:fr,Box2:zT,Box3:qn,Box3Helper:JT,BoxGeometry:hr,BoxHelper:KT,BufferAttribute:He,BufferGeometry:de,BufferGeometryLoader:Xx,ByteType:om,Cache:ws,Camera:Vh,CameraHelper:ZT,CanvasTexture:x1,CapsuleGeometry:Zh,CatmullRomCurve3:fx,CineonToneMapping:Dy,CircleGeometry:Kh,ClampToEdgeWrapping:Di,Clock:Vm,Color:Ot,ColorKeyframeTrack:Bm,ColorManagement:be,CompressedArrayTexture:_1,CompressedCubeTexture:y1,CompressedTexture:qh,CompressedTextureLoader:eT,ConeGeometry:Jh,ConstantAlphaFactor:Ey,ConstantColorFactor:My,Controls:eA,CubeCamera:tx,CubeReflectionMapping:Ns,CubeRefractionMapping:la,CubeTexture:Jl,CubeTextureLoader:nT,CubeUVReflectionMapping:Mo,CubicBezierCurve:Cm,CubicBezierCurve3:dx,CubicInterpolant:Nx,CullFaceBack:Bp,CullFaceFront:ry,CullFaceFrontBack:Rb,CullFaceNone:ay,Curve:Xi,CurvePath:mx,CustomBlending:ly,CustomToneMapping:Uy,CylinderGeometry:To,Cylindrical:BT,Data3DTexture:Hh,DataArrayTexture:Kl,DataTexture:is,DataTextureLoader:iT,DataUtils:XE,DecrementStencilOp:kb,DecrementWrapStencilOp:Xb,DefaultLoadingManager:Ix,DepthFormat:nr,DepthStencilFormat:or,DepthTexture:Tm,DetachedBindMode:Py,DirectionalLight:Fx,DirectionalLightHelper:YT,DiscreteInterpolant:Lx,DodecahedronGeometry:jh,DoubleSide:ts,DstAlphaFactor:vy,DstColorFactor:yy,DynamicCopyUsage:rE,DynamicDrawUsage:tE,DynamicReadUsage:iE,EdgesGeometry:gx,EllipseCurve:Yh,EqualCompare:ky,EqualDepth:Wu,EqualStencilFunc:Kb,EquirectangularReflectionMapping:wl,EquirectangularRefractionMapping:Rl,Euler:_i,EventDispatcher:rs,ExtrudeGeometry:$h,FileLoader:Ps,Float16BufferAttribute:QE,Float32BufferAttribute:qt,FloatType:ni,Fog:kh,FogExp2:Gh,FramebufferTexture:v1,FrontSide:Us,Frustum:jl,GLBufferAttribute:IT,GLSL1:lE,GLSL3:kp,GreaterCompare:Wy,GreaterDepth:qu,GreaterEqualCompare:qy,GreaterEqualDepth:Xu,GreaterEqualStencilFunc:$b,GreaterStencilFunc:jb,GridHelper:XT,Group:ho,HalfFloatType:bo,HemisphereLight:Ox,HemisphereLightHelper:WT,IcosahedronGeometry:tf,ImageBitmapLoader:uT,ImageLoader:Xl,ImageUtils:Jy,IncrementStencilOp:Gb,IncrementWrapStencilOp:Wb,InstancedBufferAttribute:xo,InstancedBufferGeometry:Wx,InstancedInterleavedBuffer:PT,InstancedMesh:rx,Int16BufferAttribute:JE,Int32BufferAttribute:jE,Int8BufferAttribute:YE,IntType:Nh,InterleavedBuffer:Wh,InterleavedBufferAttribute:lr,Interpolant:ec,InterpolateDiscrete:Nl,InterpolateLinear:xh,InterpolateSmooth:Iu,InvertStencilOp:qb,KeepStencilOp:Ya,KeyframeTrack:qi,LOD:sx,LatheGeometry:Ql,Layers:_o,LessCompare:Gy,LessDepth:ku,LessEqualCompare:vm,LessEqualDepth:ar,LessEqualStencilFunc:Jb,LessStencilFunc:Zb,Light:pa,LightProbe:kx,Line:ua,Line3:FT,LineBasicMaterial:Yn,LineCurve:wm,LineCurve3:px,LineDashedMaterial:Rx,LineLoop:lx,LineSegments:os,LinearFilter:fn,LinearInterpolant:Om,LinearMipMapLinearFilter:Lb,LinearMipMapNearestFilter:Nb,LinearMipmapLinearFilter:es,LinearMipmapNearestFilter:_l,LinearSRGBColorSpace:ca,LinearToneMapping:wy,LinearTransfer:Pl,Loader:si,LoaderUtils:Zp,LoadingManager:zm,LoopOnce:Iy,LoopPingPong:By,LoopRepeat:Oy,LuminanceAlphaFormat:dm,LuminanceFormat:fm,MOUSE:Cb,Material:On,MaterialLoader:lf,MathUtils:AE,Matrix2:qm,Matrix3:ce,Matrix4:ee,MaxEquation:fy,Mesh:un,MeshBasicMaterial:fa,MeshDepthMaterial:Lm,MeshDistanceMaterial:Pm,MeshLambertMaterial:Cx,MeshMatcapMaterial:wx,MeshNormalMaterial:Ax,MeshPhongMaterial:Ex,MeshPhysicalMaterial:bx,MeshStandardMaterial:Nm,MeshToonMaterial:Tx,MinEquation:hy,MirroredRepeatWrapping:Ul,MixOperation:Ay,MultiplyBlending:Hp,MultiplyOperation:Yl,NearestFilter:En,NearestMipMapLinearFilter:Ub,NearestMipMapNearestFilter:Db,NearestMipmapLinearFilter:co,NearestMipmapNearestFilter:rm,NeutralToneMapping:Ly,NeverCompare:Vy,NeverDepth:Vu,NeverStencilFunc:Yb,NoBlending:Rs,NoColorSpace:As,NoToneMapping:ns,NormalAnimationBlendMode:zh,NormalBlending:er,NotEqualCompare:Xy,NotEqualDepth:Yu,NotEqualStencilFunc:Qb,NumberKeyframeTrack:Gl,Object3D:De,ObjectLoader:lT,ObjectSpaceNormalMap:Hy,OctahedronGeometry:$l,OneFactor:py,OneMinusConstantAlphaFactor:Ty,OneMinusConstantColorFactor:by,OneMinusDstAlphaFactor:_y,OneMinusDstColorFactor:xy,OneMinusSrcAlphaFactor:Hu,OneMinusSrcColorFactor:gy,OrthographicCamera:ic,PCFShadowMap:Dh,PCFSoftShadowMap:vl,PMREMGenerator:jp,Path:zl,PerspectiveCamera:yn,Plane:sa,PlaneGeometry:Ao,PlaneHelper:jT,PointLight:zx,PointLightHelper:GT,Points:cx,PointsMaterial:Em,PolarGridHelper:qT,PolyhedronGeometry:da,PositionalAudio:gT,PropertyBinding:we,PropertyMixer:Zx,QuadraticBezierCurve:Rm,QuadraticBezierCurve3:Dm,Quaternion:ii,QuaternionKeyframeTrack:nc,QuaternionLinearInterpolant:Px,RED_GREEN_RGTC2_Format:_h,RED_RGTC1_Format:mm,REVISION:Rh,RGBADepthPacking:Fy,RGBAFormat:Pn,RGBAIntegerFormat:Bh,RGBA_ASTC_10x10_Format:fh,RGBA_ASTC_10x5_Format:ch,RGBA_ASTC_10x6_Format:uh,RGBA_ASTC_10x8_Format:hh,RGBA_ASTC_12x10_Format:dh,RGBA_ASTC_12x12_Format:ph,RGBA_ASTC_4x4_Format:eh,RGBA_ASTC_5x4_Format:nh,RGBA_ASTC_5x5_Format:ih,RGBA_ASTC_6x5_Format:sh,RGBA_ASTC_6x6_Format:ah,RGBA_ASTC_8x5_Format:rh,RGBA_ASTC_8x6_Format:oh,RGBA_ASTC_8x8_Format:lh,RGBA_BPTC_Format:bl,RGBA_ETC2_EAC_Format:th,RGBA_PVRTC_2BPPV1_Format:ju,RGBA_PVRTC_4BPPV1_Format:Ju,RGBA_S3TC_DXT1_Format:xl,RGBA_S3TC_DXT3_Format:Sl,RGBA_S3TC_DXT5_Format:Ml,RGBDepthPacking:zb,RGBFormat:hm,RGBIntegerFormat:Pb,RGB_BPTC_SIGNED_Format:mh,RGB_BPTC_UNSIGNED_Format:gh,RGB_ETC1_Format:Qu,RGB_ETC2_Format:$u,RGB_PVRTC_2BPPV1_Format:Ku,RGB_PVRTC_4BPPV1_Format:Zu,RGB_S3TC_DXT1_Format:yl,RGDepthPacking:Fb,RGFormat:pm,RGIntegerFormat:Oh,RawShaderMaterial:Mx,Ray:Eo,Raycaster:Xm,RectAreaLight:Vx,RedFormat:Ih,RedIntegerFormat:Zl,ReinhardToneMapping:Ry,RenderTarget:Fh,RenderTarget3D:DT,RenderTargetArray:UT,RepeatWrapping:Dl,ReplaceStencilOp:Vb,ReverseSubtractEquation:uy,RingGeometry:ef,SIGNED_RED_GREEN_RGTC2_Format:yh,SIGNED_RED_RGTC1_Format:vh,SRGBColorSpace:Ln,SRGBTransfer:Oe,Scene:Sm,ShaderChunk:fe,ShaderLib:Vi,ShaderMaterial:Wi,ShadowMaterial:Sx,Shape:sr,ShapeGeometry:nf,ShapePath:tA,ShapeUtils:ss,ShortType:lm,Skeleton:Xh,SkeletonHelper:VT,SkinnedMesh:ax,Source:Qa,Sphere:In,SphereGeometry:tc,Spherical:OT,SphericalHarmonics3:Gx,SplineCurve:Um,SpotLight:Bx,SpotLightHelper:HT,Sprite:ix,SpriteMaterial:Mm,SrcAlphaFactor:Fu,SrcAlphaSaturateFactor:Sy,SrcColorFactor:my,StaticCopyUsage:aE,StaticDrawUsage:Il,StaticReadUsage:nE,StereoCamera:fT,StreamCopyUsage:oE,StreamDrawUsage:eE,StreamReadUsage:sE,StringKeyframeTrack:dr,SubtractEquation:cy,SubtractiveBlending:Fp,TOUCH:wb,TangentSpaceNormalMap:ha,TetrahedronGeometry:sf,Texture:sn,TextureLoader:sT,TextureUtils:rA,TimestampQuery:cE,TorusGeometry:af,TorusKnotGeometry:rf,Triangle:ei,TriangleFanDrawMode:Bb,TriangleStripDrawMode:Ob,TrianglesDrawMode:Ib,TubeGeometry:of,UVMapping:Uh,Uint16BufferAttribute:ym,Uint32BufferAttribute:xm,Uint8BufferAttribute:ZE,Uint8ClampedBufferAttribute:KE,Uniform:Wm,UniformsGroup:LT,UniformsLib:Ct,UniformsUtils:$y,UnsignedByteType:ki,UnsignedInt248Type:rr,UnsignedInt5999Type:cm,UnsignedIntType:Ls,UnsignedShort4444Type:Lh,UnsignedShort5551Type:Ph,UnsignedShortType:go,VSMShadowMap:Hi,Vector2:ht,Vector3:B,Vector4:Re,VectorKeyframeTrack:kl,VideoFrameTexture:g1,VideoTexture:ux,WebGL3DRenderTarget:IE,WebGLArrayRenderTarget:PE,WebGLCoordinateSystem:Gi,WebGLCubeRenderTarget:ex,WebGLRenderTarget:as,WebGLRenderer:iS,WebGLUtils:nS,WebGPUCoordinateSystem:Ol,WebXRController:Ou,WireframeGeometry:xx,WrapAroundEnding:Ll,ZeroCurvatureEnding:Ja,ZeroFactor:dy,ZeroSlopeEnding:ja,ZeroStencilOp:Hb,createCanvasElement:Ky},Symbol.toStringTag,{value:"Module"}));var Mp={exports:{}},bp={},Ep={exports:{}},Tp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var F_;function H2(){if(F_)return Tp;F_=1;var a=sm();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=a.useState,i=a.useEffect,o=a.useLayoutEffect,l=a.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Tp.useSyncExternalStore=a.useSyncExternalStore!==void 0?a.useSyncExternalStore:p,Tp}var H_;function V2(){return H_||(H_=1,Ep.exports=H2()),Ep.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var V_;function G2(){if(V_)return bp;V_=1;var a=sm(),t=V2();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=a.useRef,l=a.useEffect,c=a.useMemo,h=a.useDebugValue;return bp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function y(U){if(!E){if(E=!0,A=U,U=g(U),v!==void 0&&b.hasValue){var I=b.value;if(v(I,U))return T=I}return T=U}if(I=T,n(A,U))return I;var z=g(U);return v!==void 0&&v(I,z)?(A=U,I):(A=U,T=z)}var E=!1,A,T,L=m===void 0?null:m;return[function(){return y(p())},L===null?void 0:function(){return y(L())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},bp}var G_;function k2(){return G_||(G_=1,Mp.exports=G2()),Mp.exports}var W2=k2();const X2=sy(W2),k_=a=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=a(n,i,c);return c},q2=a=>a?k_(a):k_,{useSyncExternalStoreWithSelector:Y2}=X2,Z2=a=>a;function K2(a,t=Z2,e){const n=Y2(a.subscribe,a.getState,a.getInitialState,t,e);return Eb.useDebugValue(n),n}const W_=(a,t)=>{const e=q2(a),n=(i,o=t)=>K2(e,i,o);return Object.assign(n,e),n},sS=(a,t)=>a?W_(a,t):W_,J2=a=>typeof a=="object"&&typeof a.then=="function",tr=[];function aS(a,t,e=(n,i)=>n===i){if(a===t)return!0;if(!a||!t)return!1;const n=a.length;if(t.length!==n)return!1;for(let i=0;i<n;i++)if(!e(a[i],t[i]))return!1;return!0}function rS(a,t=null,e=!1,n={}){t===null&&(t=[a]);for(const o of tr)if(aS(t,o.keys,o.equal)){if(e)return;if(Object.prototype.hasOwnProperty.call(o,"error"))throw o.error;if(Object.prototype.hasOwnProperty.call(o,"response"))return n.lifespan&&n.lifespan>0&&(o.timeout&&clearTimeout(o.timeout),o.timeout=setTimeout(o.remove,n.lifespan)),o.response;if(!e)throw o.promise}const i={keys:t,equal:n.equal,remove:()=>{const o=tr.indexOf(i);o!==-1&&tr.splice(o,1)},promise:(J2(a)?a:a(...t)).then(o=>{i.response=o,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(o=>i.error=o)};if(tr.push(i),!e)throw i.promise}const j2=(a,t,e)=>rS(a,t,!1,e),Q2=(a,t,e)=>void rS(a,t,!0,e),$2=a=>{if(a===void 0||a.length===0)tr.splice(0,tr.length);else{const t=tr.find(e=>aS(a,e.keys,e.equal));t&&t.remove()}};var Ap={exports:{}},Cp={exports:{}},wp={exports:{}},Rp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var X_;function t3(){return X_||(X_=1,function(a){function t(V,it){var Y=V.length;V.push(it);t:for(;0<Y;){var ct=Y-1>>>1,gt=V[ct];if(0<i(gt,it))V[ct]=it,V[Y]=gt,Y=ct;else break t}}function e(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var it=V[0],Y=V.pop();if(Y!==it){V[0]=Y;t:for(var ct=0,gt=V.length,St=gt>>>1;ct<St;){var Pt=2*(ct+1)-1,le=V[Pt],nt=Pt+1,_t=V[nt];if(0>i(le,Y))nt<gt&&0>i(_t,le)?(V[ct]=_t,V[nt]=Y,ct=nt):(V[ct]=le,V[Pt]=Y,ct=Pt);else if(nt<gt&&0>i(_t,Y))V[ct]=_t,V[nt]=Y,ct=nt;else break t}}return it}function i(V,it){var Y=V.sortIndex-it.sortIndex;return Y!==0?Y:V.id-it.id}if(a.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;a.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();a.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(V){for(var it=e(f);it!==null;){if(it.callback===null)n(f);else if(it.startTime<=V)n(f),it.sortIndex=it.expirationTime,t(h,it);else break;it=e(f)}}function T(V){if(b=!1,A(V),!x)if(e(h)!==null)x=!0,K();else{var it=e(f);it!==null&&at(T,it.startTime-V)}}var L=!1,U=-1,I=5,z=-1;function w(){return!(a.unstable_now()-z<I)}function C(){if(L){var V=a.unstable_now();z=V;var it=!0;try{t:{x=!1,b&&(b=!1,y(U),U=-1),v=!0;var Y=g;try{e:{for(A(V),m=e(h);m!==null&&!(m.expirationTime>V&&w());){var ct=m.callback;if(typeof ct=="function"){m.callback=null,g=m.priorityLevel;var gt=ct(m.expirationTime<=V);if(V=a.unstable_now(),typeof gt=="function"){m.callback=gt,A(V),it=!0;break e}m===e(h)&&n(h),A(V)}else n(h);m=e(h)}if(m!==null)it=!0;else{var St=e(f);St!==null&&at(T,St.startTime-V),it=!1}}break t}finally{m=null,g=Y,v=!1}it=void 0}}finally{it?F():L=!1}}}var F;if(typeof E=="function")F=function(){E(C)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,W=$.port2;$.port1.onmessage=C,F=function(){W.postMessage(null)}}else F=function(){S(C,0)};function K(){L||(L=!0,F())}function at(V,it){U=S(function(){V(a.unstable_now())},it)}a.unstable_IdlePriority=5,a.unstable_ImmediatePriority=1,a.unstable_LowPriority=4,a.unstable_NormalPriority=3,a.unstable_Profiling=null,a.unstable_UserBlockingPriority=2,a.unstable_cancelCallback=function(V){V.callback=null},a.unstable_continueExecution=function(){x||v||(x=!0,K())},a.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<V?Math.floor(1e3/V):5},a.unstable_getCurrentPriorityLevel=function(){return g},a.unstable_getFirstCallbackNode=function(){return e(h)},a.unstable_next=function(V){switch(g){case 1:case 2:case 3:var it=3;break;default:it=g}var Y=g;g=it;try{return V()}finally{g=Y}},a.unstable_pauseExecution=function(){},a.unstable_requestPaint=function(){},a.unstable_runWithPriority=function(V,it){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var Y=g;g=V;try{return it()}finally{g=Y}},a.unstable_scheduleCallback=function(V,it,Y){var ct=a.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?ct+Y:ct):Y=ct,V){case 1:var gt=-1;break;case 2:gt=250;break;case 5:gt=1073741823;break;case 4:gt=1e4;break;default:gt=5e3}return gt=Y+gt,V={id:p++,callback:it,priorityLevel:V,startTime:Y,expirationTime:gt,sortIndex:-1},Y>ct?(V.sortIndex=Y,t(f,V),e(h)===null&&V===e(f)&&(b?(y(U),U=-1):b=!0,at(T,Y-ct))):(V.sortIndex=gt,t(h,V),x||v||(x=!0,K())),V},a.unstable_shouldYield=w,a.unstable_wrapCallback=function(V){var it=g;return function(){var Y=g;g=it;try{return V.apply(this,arguments)}finally{g=Y}}}}(Rp)),Rp}var q_;function oS(){return q_||(q_=1,wp.exports=t3()),wp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Y_;function e3(){return Y_||(Y_=1,function(a){a.exports=function(t){function e(s,r,u,d){return new VS(s,r,u,d)}function n(){}function i(s){var r="https://react.dev/errors/"+s;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+s+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(s){return s===null||typeof s!="object"?null:(s=A0&&s[A0]||s["@@iterator"],typeof s=="function"?s:null)}function l(s){if(s==null)return null;if(typeof s=="function")return s.$$typeof===YS?null:s.displayName||s.name||null;if(typeof s=="string")return s;switch(s){case Mr:return"Fragment";case Sr:return"Portal";case ed:return"Profiler";case b0:return"StrictMode";case id:return"Suspense";case sd:return"SuspenseList"}if(typeof s=="object")switch(s.$$typeof){case Vs:return(s.displayName||"Context")+".Provider";case E0:return(s._context.displayName||"Context")+".Consumer";case nd:var r=s.render;return s=s.displayName,s||(s=r.displayName||r.name||"",s=s!==""?"ForwardRef("+s+")":"ForwardRef"),s;case ad:return r=s.displayName||null,r!==null?r:l(s.type)||"Memo";case Gs:r=s._payload,s=s._init;try{return l(s(r))}catch{}}return null}function c(s){if(rd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);rd=r&&r[1]||"",C0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+rd+s+C0}function h(s,r){if(!s||od)return"";od=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Lt=function(){throw Error()};if(Object.defineProperty(Lt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Lt,[])}catch(ue){var It=ue}Reflect.construct(s,[],Lt)}else{try{Lt.call()}catch(ue){It=ue}s.call(Lt.prototype)}}else{try{throw Error()}catch(ue){It=ue}(Lt=s())&&typeof Lt.catch=="function"&&Lt.catch(function(){})}}catch(ue){if(ue&&It&&typeof ue.stack=="string")return[ue.stack,It.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var _=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");_&&_.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),N=M[0],H=M[1];if(N&&H){var Z=N.split(`
`),ot=H.split(`
`);for(_=d=0;d<Z.length&&!Z[d].includes("DetermineComponentFrameRoot");)d++;for(;_<ot.length&&!ot[_].includes("DetermineComponentFrameRoot");)_++;if(d===Z.length||_===ot.length)for(d=Z.length-1,_=ot.length-1;1<=d&&0<=_&&Z[d]!==ot[_];)_--;for(;1<=d&&0<=_;d--,_--)if(Z[d]!==ot[_]){if(d!==1||_!==1)do if(d--,_--,0>_||Z[d]!==ot[_]){var Mt=`
`+Z[d].replace(" at new "," at ");return s.displayName&&Mt.includes("<anonymous>")&&(Mt=Mt.replace("<anonymous>",s.displayName)),Mt}while(1<=d&&0<=_);break}}}finally{od=!1,Error.prepareStackTrace=u}return(u=s?s.displayName||s.name:"")?c(u):""}function f(s){switch(s.tag){case 26:case 27:case 5:return c(s.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return s=h(s.type,!1),s;case 11:return s=h(s.type.render,!1),s;case 1:return s=h(s.type,!0),s;default:return""}}function p(s){try{var r="";do r+=f(s),s=s.return;while(s);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(s){var r=s,u=s;if(s.alternate)for(;r.return;)r=r.return;else{s=r;do r=s,(r.flags&4098)!==0&&(u=r.return),s=r.return;while(s)}return r.tag===3?u:null}function g(s){if(m(s)!==s)throw Error(i(188))}function v(s){var r=s.alternate;if(!r){if(r=m(s),r===null)throw Error(i(188));return r!==s?null:s}for(var u=s,d=r;;){var _=u.return;if(_===null)break;var M=_.alternate;if(M===null){if(d=_.return,d!==null){u=d;continue}break}if(_.child===M.child){for(M=_.child;M;){if(M===u)return g(_),s;if(M===d)return g(_),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=_,d=M;else{for(var N=!1,H=_.child;H;){if(H===u){N=!0,u=_,d=M;break}if(H===d){N=!0,d=_,u=M;break}H=H.sibling}if(!N){for(H=M.child;H;){if(H===u){N=!0,u=M,d=_;break}if(H===d){N=!0,d=M,u=_;break}H=H.sibling}if(!N)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?s:r}function x(s){var r=s.tag;if(r===5||r===26||r===27||r===6)return s;for(s=s.child;s!==null;){if(r=x(s),r!==null)return r;s=s.sibling}return null}function b(s){var r=s.tag;if(r===5||r===26||r===27||r===6)return s;for(s=s.child;s!==null;){if(s.tag!==4&&(r=b(s),r!==null))return r;s=s.sibling}return null}function S(s){return{current:s}}function y(s){0>Er||(s.current=dd[Er],dd[Er]=null,Er--)}function E(s,r){Er++,dd[Er]=s.current,s.current=r}function A(s){return s>>>=0,s===0?32:31-(lb(s)/cb|0)|0}function T(s){var r=s&42;if(r!==0)return r;switch(s&-s){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return s&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return s}}function L(s,r){var u=s.pendingLanes;if(u===0)return 0;var d=0,_=s.suspendedLanes,M=s.pingedLanes,N=s.warmLanes;s=s.finishedLanes!==0;var H=u&134217727;return H!==0?(u=H&~_,u!==0?d=T(u):(M&=H,M!==0?d=T(M):s||(N=H&~N,N!==0&&(d=T(N))))):(H=u&~_,H!==0?d=T(H):M!==0?d=T(M):s||(N=u&~N,N!==0&&(d=T(N)))),d===0?0:r!==0&&r!==d&&(r&_)===0&&(_=d&-d,N=r&-r,_>=N||_===32&&(N&4194176)!==0)?r:d}function U(s,r){return(s.pendingLanes&~(s.suspendedLanes&~s.pingedLanes)&r)===0}function I(s,r){switch(s){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var s=Sc;return Sc<<=1,(Sc&4194176)===0&&(Sc=128),s}function w(){var s=Mc;return Mc<<=1,(Mc&62914560)===0&&(Mc=4194304),s}function C(s){for(var r=[],u=0;31>u;u++)r.push(s);return r}function F(s,r){s.pendingLanes|=r,r!==268435456&&(s.suspendedLanes=0,s.pingedLanes=0,s.warmLanes=0)}function $(s,r,u,d,_,M){var N=s.pendingLanes;s.pendingLanes=u,s.suspendedLanes=0,s.pingedLanes=0,s.warmLanes=0,s.expiredLanes&=u,s.entangledLanes&=u,s.errorRecoveryDisabledLanes&=u,s.shellSuspendCounter=0;var H=s.entanglements,Z=s.expirationTimes,ot=s.hiddenUpdates;for(u=N&~u;0<u;){var Mt=31-ui(u),Lt=1<<Mt;H[Mt]=0,Z[Mt]=-1;var It=ot[Mt];if(It!==null)for(ot[Mt]=null,Mt=0;Mt<It.length;Mt++){var ue=It[Mt];ue!==null&&(ue.lane&=-536870913)}u&=~Lt}d!==0&&W(s,d,0),M!==0&&_===0&&s.tag!==0&&(s.suspendedLanes|=M&~(N&~r))}function W(s,r,u){s.pendingLanes|=r,s.suspendedLanes&=~r;var d=31-ui(r);s.entangledLanes|=r,s.entanglements[d]=s.entanglements[d]|1073741824|u&4194218}function K(s,r){var u=s.entangledLanes|=r;for(s=s.entanglements;u;){var d=31-ui(u),_=1<<d;_&r|s[d]&r&&(s[d]|=r),u&=~_}}function at(s){return s&=-s,2<s?8<s?(s&134217727)!==0?32:268435456:8:2}function V(s){if(hi&&typeof hi.onCommitFiberRoot=="function")try{hi.onCommitFiberRoot(Xo,s,void 0,(s.current.flags&128)===128)}catch{}}function it(s){if(typeof pb=="function"&&mb(s),hi&&typeof hi.setStrictMode=="function")try{hi.setStrictMode(Xo,s)}catch{}}function Y(s,r){return s===r&&(s!==0||1/s===1/r)||s!==s&&r!==r}function ct(s,r){if(typeof s=="object"&&s!==null){var u=$0.get(s);return u!==void 0?u:(r={value:s,source:r,stack:p(r)},$0.set(s,r),r)}return{value:s,source:r,stack:p(r)}}function gt(s,r){Ar[Cr++]=Tc,Ar[Cr++]=Ec,Ec=s,Tc=r}function St(s,r,u){bi[Ei++]=ds,bi[Ei++]=ps,bi[Ei++]=Ea,Ea=s;var d=ds;s=ps;var _=32-ui(d)-1;d&=~(1<<_),u+=1;var M=32-ui(r)+_;if(30<M){var N=_-_%5;M=(d&(1<<N)-1).toString(32),d>>=N,_-=N,ds=1<<32-ui(r)+_|u<<_|d,ps=M+s}else ds=1<<M|u<<_|d,ps=s}function Pt(s){s.return!==null&&(gt(s,1),St(s,1,0))}function le(s){for(;s===Ec;)Ec=Ar[--Cr],Ar[Cr]=null,Tc=Ar[--Cr],Ar[Cr]=null;for(;s===Ea;)Ea=bi[--Ei],bi[Ei]=null,ps=bi[--Ei],bi[Ei]=null,ds=bi[--Ei],bi[Ei]=null}function nt(s,r){E(Ws,r),E(qo,s),E(bn,null),s=JS(r),y(bn),E(bn,s)}function _t(){y(bn),y(qo),y(Ws)}function Bt(s){s.memoizedState!==null&&E(Ac,s);var r=bn.current,u=jS(r,s.type);r!==u&&(E(qo,s),E(bn,u))}function bt(s){qo.current===s&&(y(bn),y(qo)),Ac.current===s&&(y(Ac),fs?ba._currentValue=br:ba._currentValue2=br)}function Xt(s){var r=Error(i(418,""));throw ft(ct(r,s)),gd}function xe(s,r){if(!Si)throw Error(i(175));WM(s.stateNode,s.type,s.memoizedProps,r,s)||Xt(s)}function Yt(s){for(Hn=s.return;Hn;)switch(Hn.tag){case 3:case 27:Ji=!0;return;case 5:case 13:Ji=!1;return;default:Hn=Hn.return}}function ve(s){if(!Si||s!==Hn)return!1;if(!Ne)return Yt(s),Ne=!0,!1;var r=!1;if(wn?s.tag!==3&&s.tag!==27&&(s.tag!==5||G0(s.type)&&!xc(s.type,s.memoizedProps))&&(r=!0):s.tag!==3&&(s.tag!==5||G0(s.type)&&!xc(s.type,s.memoizedProps))&&(r=!0),r&&Rn&&Xt(s),Yt(s),s.tag===13){if(!Si)throw Error(i(316));if(s=s.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(i(317));Rn=YM(s)}else Rn=Hn?H0(s.stateNode):null;return!0}function mt(){Si&&(Rn=Hn=null,Ne=!1)}function ft(s){Ii===null?Ii=[s]:Ii.push(s)}function O(){for(var s=wr,r=vd=wr=0;r<s;){var u=Ti[r];Ti[r++]=null;var d=Ti[r];Ti[r++]=null;var _=Ti[r];Ti[r++]=null;var M=Ti[r];if(Ti[r++]=null,d!==null&&_!==null){var N=d.pending;N===null?_.next=_:(_.next=N.next,N.next=_),d.pending=_}M!==0&&Et(u,_,M)}}function Wt(s,r,u,d){Ti[wr++]=s,Ti[wr++]=r,Ti[wr++]=u,Ti[wr++]=d,vd|=d,s.lanes|=d,s=s.alternate,s!==null&&(s.lanes|=d)}function vt(s,r,u,d){return Wt(s,r,u,d),Qt(s)}function Dt(s,r){return Wt(s,null,null,r),Qt(s)}function Et(s,r,u){s.lanes|=u;var d=s.alternate;d!==null&&(d.lanes|=u);for(var _=!1,M=s.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(s=M.stateNode,s===null||s._visibility&1||(_=!0)),s=M,M=M.return;_&&r!==null&&s.tag===3&&(M=s.stateNode,_=31-ui(u),M=M.hiddenUpdates,s=M[_],s===null?M[_]=[r]:s.push(r),r.lane=u|536870912)}function Qt(s){if(50<el)throw el=0,Ld=null,Error(i(185));for(var r=s.return;r!==null;)s=r,r=s.return;return s.tag===3?s.stateNode:null}function Tt(s){s!==Rr&&s.next===null&&(Rr===null?Cc=Rr=s:Rr=Rr.next=s),wc=!0,_d||(_d=!0,lt(R))}function P(s,r){if(!yd&&wc){yd=!0;do for(var u=!1,d=Cc;d!==null;){if(s!==0){var _=d.pendingLanes;if(_===0)var M=0;else{var N=d.suspendedLanes,H=d.pingedLanes;M=(1<<31-ui(42|s)+1)-1,M&=_&~(N&~H),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,dt(d,M))}else M=Te,M=L(d,d===Xe?M:0),(M&3)===0||U(d,M)||(u=!0,dt(d,M));d=d.next}while(u);yd=!1}}function R(){wc=_d=!1;var s=0;Dr!==0&&(aM()&&(s=Dr),Dr=0);for(var r=Pi(),u=null,d=Cc;d!==null;){var _=d.next,M=J(d,r);M===0?(d.next=null,u===null?Cc=_:u.next=_,_===null&&(Rr=u)):(u=d,(s!==0||(M&3)!==0)&&(wc=!0)),d=_}P(s)}function J(s,r){for(var u=s.suspendedLanes,d=s.pingedLanes,_=s.expirationTimes,M=s.pendingLanes&-62914561;0<M;){var N=31-ui(M),H=1<<N,Z=_[N];Z===-1?((H&u)===0||(H&d)!==0)&&(_[N]=I(H,r)):Z<=r&&(s.expiredLanes|=H),M&=~H}if(r=Xe,u=Te,u=L(s,s===r?u:0),d=s.callbackNode,u===0||s===r&&qe===2||s.cancelPendingCommit!==null)return d!==null&&d!==null&&pd(d),s.callbackNode=null,s.callbackPriority=0;if((u&3)===0||U(s,u)){if(r=u&-u,r===s.callbackPriority)return r;switch(d!==null&&pd(d),at(u)){case 2:case 8:u=fb;break;case 32:u=md;break;case 268435456:u=db;break;default:u=md}return d=rt.bind(null,s),u=bc(u,d),s.callbackPriority=r,s.callbackNode=u,r}return d!==null&&d!==null&&pd(d),s.callbackPriority=2,s.callbackNode=null,2}function rt(s,r){var u=s.callbackNode;if(xa()&&s.callbackNode!==u)return null;var d=Te;return d=L(s,s===Xe?d:0),d===0?null:(n0(s,d,r),J(s,Pi()),s.callbackNode!=null&&s.callbackNode===u?rt.bind(null,s):null)}function dt(s,r){if(xa())return null;n0(s,r,!0)}function lt(s){hM?fM(function(){(ze&6)!==0?bc(Q0,s):s()}):bc(Q0,s)}function kt(){return Dr===0&&(Dr=z()),Dr}function wt(s,r){if(Yo===null){var u=Yo=[];xd=0,Ur=kt(),Nr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return xd++,r.then(zt,zt),r}function zt(){if(--xd===0&&Yo!==null){Nr!==null&&(Nr.status="fulfilled");var s=Yo;Yo=null,Ur=0,Nr=null;for(var r=0;r<s.length;r++)(0,s[r])()}}function me(s,r){var u=[],d={status:"pending",value:null,reason:null,then:function(_){u.push(_)}};return s.then(function(){d.status="fulfilled",d.value=r;for(var _=0;_<u.length;_++)(0,u[_])(r)},function(_){for(d.status="rejected",d.reason=_,_=0;_<u.length;_++)(0,u[_])(void 0)}),d}function yt(s){s.updateQueue={baseState:s.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Vt(s,r){s=s.updateQueue,r.updateQueue===s&&(r.updateQueue={baseState:s.baseState,firstBaseUpdate:s.firstBaseUpdate,lastBaseUpdate:s.lastBaseUpdate,shared:s.shared,callbacks:null})}function Zt(s){return{lane:s,tag:0,payload:null,callback:null,next:null}}function jt(s,r,u){var d=s.updateQueue;if(d===null)return null;if(d=d.shared,(ze&2)!==0){var _=d.pending;return _===null?r.next=r:(r.next=_.next,_.next=r),d.pending=r,r=Qt(s),Et(s,null,u),r}return Wt(s,d,r,u),Qt(s)}function Ft(s,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=s.pendingLanes,u|=d,r.lanes=u,K(s,u)}}function ge(s,r){var u=s.updateQueue,d=s.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var _=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var N={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?_=M=N:M=M.next=N,u=u.next}while(u!==null);M===null?_=M=r:M=M.next=r}else _=M=r;u={baseState:d.baseState,firstBaseUpdate:_,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},s.updateQueue=u;return}s=u.lastBaseUpdate,s===null?u.firstBaseUpdate=r:s.next=r,u.lastBaseUpdate=r}function se(){if(Sd){var s=Nr;if(s!==null)throw s}}function Ue(s,r,u,d){Sd=!1;var _=s.updateQueue;Xs=!1;var M=_.firstBaseUpdate,N=_.lastBaseUpdate,H=_.shared.pending;if(H!==null){_.shared.pending=null;var Z=H,ot=Z.next;Z.next=null,N===null?M=ot:N.next=ot,N=Z;var Mt=s.alternate;Mt!==null&&(Mt=Mt.updateQueue,H=Mt.lastBaseUpdate,H!==N&&(H===null?Mt.firstBaseUpdate=ot:H.next=ot,Mt.lastBaseUpdate=Z))}if(M!==null){var Lt=_.baseState;N=0,Mt=ot=Z=null,H=M;do{var It=H.lane&-536870913,ue=It!==H.lane;if(ue?(Te&It)===It:(d&It)===It){It!==0&&It===Ur&&(Sd=!0),Mt!==null&&(Mt=Mt.next={lane:0,tag:H.tag,payload:H.payload,callback:null,next:null});t:{var wi=s,nl=H;It=r;var La=u;switch(nl.tag){case 1:if(wi=nl.payload,typeof wi=="function"){Lt=wi.call(La,Lt,It);break t}Lt=wi;break t;case 3:wi.flags=wi.flags&-65537|128;case 0:if(wi=nl.payload,It=typeof wi=="function"?wi.call(La,Lt,It):wi,It==null)break t;Lt=td({},Lt,It);break t;case 2:Xs=!0}}It=H.callback,It!==null&&(s.flags|=64,ue&&(s.flags|=8192),ue=_.callbacks,ue===null?_.callbacks=[It]:ue.push(It))}else ue={lane:It,tag:H.tag,payload:H.payload,callback:H.callback,next:null},Mt===null?(ot=Mt=ue,Z=Lt):Mt=Mt.next=ue,N|=It;if(H=H.next,H===null){if(H=_.shared.pending,H===null)break;ue=H,H=ue.next,ue.next=null,_.lastBaseUpdate=ue,_.shared.pending=null}}while(!0);Mt===null&&(Z=Lt),_.baseState=Z,_.firstBaseUpdate=ot,_.lastBaseUpdate=Mt,M===null&&(_.shared.lanes=0),Zs|=N,s.lanes=N,s.memoizedState=Lt}}function k(s,r){if(typeof s!="function")throw Error(i(191,s));s.call(r)}function Rt(s,r){var u=s.callbacks;if(u!==null)for(s.callbacks=null,s=0;s<u.length;s++)k(u[s],r)}function st(s,r){if(fi(s,r))return!0;if(typeof s!="object"||s===null||typeof r!="object"||r===null)return!1;var u=Object.keys(s),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var _=u[d];if(!gb.call(r,_)||!fi(s[_],r[_]))return!1}return!0}function ut(s){return s=s.status,s==="fulfilled"||s==="rejected"}function Ut(){}function Nt(s,r,u){switch(u=s[u],u===void 0?s.push(r):u!==r&&(r.then(Ut,Ut),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw s=r.reason,s===Zo?Error(i(483)):s;default:if(typeof r.status=="string")r.then(Ut,Ut);else{if(s=Xe,s!==null&&100<s.shellSuspendCounter)throw Error(i(482));s=r,s.status="pending",s.then(function(d){if(r.status==="pending"){var _=r;_.status="fulfilled",_.value=d}},function(d){if(r.status==="pending"){var _=r;_.status="rejected",_.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw s=r.reason,s===Zo?Error(i(483)):s}throw Lr=r,Zo}}function re(){if(Lr===null)throw Error(i(459));var s=Lr;return Lr=null,s}function Ve(s){var r=Ko;return Ko+=1,Pr===null&&(Pr=[]),Nt(Pr,s,r)}function Qe(s,r){r=r.props.ref,s.ref=r!==void 0?r:null}function Ee(s,r){throw r.$$typeof===WS?Error(i(525)):(s=Object.prototype.toString.call(r),Error(i(31,s==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":s)))}function Zn(s){var r=s._init;return r(s._payload)}function yi(s){function r(j,q){if(s){var et=j.deletions;et===null?(j.deletions=[q],j.flags|=16):et.push(q)}}function u(j,q){if(!s)return null;for(;q!==null;)r(j,q),q=q.sibling;return null}function d(j){for(var q=new Map;j!==null;)j.key!==null?q.set(j.key,j):q.set(j.index,j),j=j.sibling;return q}function _(j,q){return j=Hs(j,q),j.index=0,j.sibling=null,j}function M(j,q,et){return j.index=et,s?(et=j.alternate,et!==null?(et=et.index,et<q?(j.flags|=33554434,q):et):(j.flags|=33554434,q)):(j.flags|=1048576,q)}function N(j){return s&&j.alternate===null&&(j.flags|=33554434),j}function H(j,q,et,xt){return q===null||q.tag!==6?(q=jf(et,j.mode,xt),q.return=j,q):(q=_(q,et),q.return=j,q)}function Z(j,q,et,xt){var Jt=et.type;return Jt===Mr?Mt(j,q,et.props.children,xt,et.key):q!==null&&(q.elementType===Jt||typeof Jt=="object"&&Jt!==null&&Jt.$$typeof===Gs&&Zn(Jt)===q.type)?(q=_(q,et.props),Qe(q,et),q.return=j,q):(q=vc(et.type,et.key,et.props,null,j.mode,xt),Qe(q,et),q.return=j,q)}function ot(j,q,et,xt){return q===null||q.tag!==4||q.stateNode.containerInfo!==et.containerInfo||q.stateNode.implementation!==et.implementation?(q=Qf(et,j.mode,xt),q.return=j,q):(q=_(q,et.children||[]),q.return=j,q)}function Mt(j,q,et,xt,Jt){return q===null||q.tag!==7?(q=Sa(et,j.mode,xt,Jt),q.return=j,q):(q=_(q,et),q.return=j,q)}function Lt(j,q,et){if(typeof q=="string"&&q!==""||typeof q=="number"||typeof q=="bigint")return q=jf(""+q,j.mode,et),q.return=j,q;if(typeof q=="object"&&q!==null){switch(q.$$typeof){case _c:return et=vc(q.type,q.key,q.props,null,j.mode,et),Qe(et,q),et.return=j,et;case Sr:return q=Qf(q,j.mode,et),q.return=j,q;case Gs:var xt=q._init;return q=xt(q._payload),Lt(j,q,et)}if(yc(q)||o(q))return q=Sa(q,j.mode,et,null),q.return=j,q;if(typeof q.then=="function")return Lt(j,Ve(q),et);if(q.$$typeof===Vs)return Lt(j,hc(j,q),et);Ee(j,q)}return null}function It(j,q,et,xt){var Jt=q!==null?q.key:null;if(typeof et=="string"&&et!==""||typeof et=="number"||typeof et=="bigint")return Jt!==null?null:H(j,q,""+et,xt);if(typeof et=="object"&&et!==null){switch(et.$$typeof){case _c:return et.key===Jt?Z(j,q,et,xt):null;case Sr:return et.key===Jt?ot(j,q,et,xt):null;case Gs:return Jt=et._init,et=Jt(et._payload),It(j,q,et,xt)}if(yc(et)||o(et))return Jt!==null?null:Mt(j,q,et,xt,null);if(typeof et.then=="function")return It(j,q,Ve(et),xt);if(et.$$typeof===Vs)return It(j,q,hc(j,et),xt);Ee(j,et)}return null}function ue(j,q,et,xt,Jt){if(typeof xt=="string"&&xt!==""||typeof xt=="number"||typeof xt=="bigint")return j=j.get(et)||null,H(q,j,""+xt,Jt);if(typeof xt=="object"&&xt!==null){switch(xt.$$typeof){case _c:return j=j.get(xt.key===null?et:xt.key)||null,Z(q,j,xt,Jt);case Sr:return j=j.get(xt.key===null?et:xt.key)||null,ot(q,j,xt,Jt);case Gs:var Ye=xt._init;return xt=Ye(xt._payload),ue(j,q,et,xt,Jt)}if(yc(xt)||o(xt))return j=j.get(et)||null,Mt(q,j,xt,Jt,null);if(typeof xt.then=="function")return ue(j,q,et,Ve(xt),Jt);if(xt.$$typeof===Vs)return ue(j,q,et,hc(q,xt),Jt);Ee(q,xt)}return null}function wi(j,q,et,xt){for(var Jt=null,Ye=null,ie=q,Le=q=0,vn=null;ie!==null&&Le<et.length;Le++){ie.index>Le?(vn=ie,ie=null):vn=ie.sibling;var Pe=It(j,ie,et[Le],xt);if(Pe===null){ie===null&&(ie=vn);break}s&&ie&&Pe.alternate===null&&r(j,ie),q=M(Pe,q,Le),Ye===null?Jt=Pe:Ye.sibling=Pe,Ye=Pe,ie=vn}if(Le===et.length)return u(j,ie),Ne&&gt(j,Le),Jt;if(ie===null){for(;Le<et.length;Le++)ie=Lt(j,et[Le],xt),ie!==null&&(q=M(ie,q,Le),Ye===null?Jt=ie:Ye.sibling=ie,Ye=ie);return Ne&&gt(j,Le),Jt}for(ie=d(ie);Le<et.length;Le++)vn=ue(ie,j,Le,et[Le],xt),vn!==null&&(s&&vn.alternate!==null&&ie.delete(vn.key===null?Le:vn.key),q=M(vn,q,Le),Ye===null?Jt=vn:Ye.sibling=vn,Ye=vn);return s&&ie.forEach(function(Js){return r(j,Js)}),Ne&&gt(j,Le),Jt}function nl(j,q,et,xt){if(et==null)throw Error(i(151));for(var Jt=null,Ye=null,ie=q,Le=q=0,vn=null,Pe=et.next();ie!==null&&!Pe.done;Le++,Pe=et.next()){ie.index>Le?(vn=ie,ie=null):vn=ie.sibling;var Js=It(j,ie,Pe.value,xt);if(Js===null){ie===null&&(ie=vn);break}s&&ie&&Js.alternate===null&&r(j,ie),q=M(Js,q,Le),Ye===null?Jt=Js:Ye.sibling=Js,Ye=Js,ie=vn}if(Pe.done)return u(j,ie),Ne&&gt(j,Le),Jt;if(ie===null){for(;!Pe.done;Le++,Pe=et.next())Pe=Lt(j,Pe.value,xt),Pe!==null&&(q=M(Pe,q,Le),Ye===null?Jt=Pe:Ye.sibling=Pe,Ye=Pe);return Ne&&gt(j,Le),Jt}for(ie=d(ie);!Pe.done;Le++,Pe=et.next())Pe=ue(ie,j,Le,Pe.value,xt),Pe!==null&&(s&&Pe.alternate!==null&&ie.delete(Pe.key===null?Le:Pe.key),q=M(Pe,q,Le),Ye===null?Jt=Pe:Ye.sibling=Pe,Ye=Pe);return s&&ie.forEach(function(bb){return r(j,bb)}),Ne&&gt(j,Le),Jt}function La(j,q,et,xt){if(typeof et=="object"&&et!==null&&et.type===Mr&&et.key===null&&(et=et.props.children),typeof et=="object"&&et!==null){switch(et.$$typeof){case _c:t:{for(var Jt=et.key;q!==null;){if(q.key===Jt){if(Jt=et.type,Jt===Mr){if(q.tag===7){u(j,q.sibling),xt=_(q,et.props.children),xt.return=j,j=xt;break t}}else if(q.elementType===Jt||typeof Jt=="object"&&Jt!==null&&Jt.$$typeof===Gs&&Zn(Jt)===q.type){u(j,q.sibling),xt=_(q,et.props),Qe(xt,et),xt.return=j,j=xt;break t}u(j,q);break}else r(j,q);q=q.sibling}et.type===Mr?(xt=Sa(et.props.children,j.mode,xt,et.key),xt.return=j,j=xt):(xt=vc(et.type,et.key,et.props,null,j.mode,xt),Qe(xt,et),xt.return=j,j=xt)}return N(j);case Sr:t:{for(Jt=et.key;q!==null;){if(q.key===Jt)if(q.tag===4&&q.stateNode.containerInfo===et.containerInfo&&q.stateNode.implementation===et.implementation){u(j,q.sibling),xt=_(q,et.children||[]),xt.return=j,j=xt;break t}else{u(j,q);break}else r(j,q);q=q.sibling}xt=Qf(et,j.mode,xt),xt.return=j,j=xt}return N(j);case Gs:return Jt=et._init,et=Jt(et._payload),La(j,q,et,xt)}if(yc(et))return wi(j,q,et,xt);if(o(et)){if(Jt=o(et),typeof Jt!="function")throw Error(i(150));return et=Jt.call(et),nl(j,q,et,xt)}if(typeof et.then=="function")return La(j,q,Ve(et),xt);if(et.$$typeof===Vs)return La(j,q,hc(j,et),xt);Ee(j,et)}return typeof et=="string"&&et!==""||typeof et=="number"||typeof et=="bigint"?(et=""+et,q!==null&&q.tag===6?(u(j,q.sibling),xt=_(q,et),xt.return=j,j=xt):(u(j,q),xt=jf(et,j.mode,xt),xt.return=j,j=xt),N(j)):u(j,q)}return function(j,q,et,xt){try{Ko=0;var Jt=La(j,q,et,xt);return Pr=null,Jt}catch(ie){if(ie===Zo)throw ie;var Ye=e(29,ie,null,j.mode);return Ye.lanes=xt,Ye.return=j,Ye}finally{}}}function Ro(s,r){s=_s,E(Dc,s),E(Ir,r),_s=s|r.baseLanes}function pr(){E(Dc,_s),E(Ir,Ir.current)}function Ui(){_s=Dc.current,y(Ir),y(Dc)}function xi(s){var r=s.alternate;E(hn,hn.current&1),E(Ai,s),ji===null&&(r===null||Ir.current!==null||r.memoizedState!==null)&&(ji=s)}function Do(s){if(s.tag===22){if(E(hn,hn.current),E(Ai,s),ji===null){var r=s.alternate;r!==null&&r.memoizedState!==null&&(ji=s)}}else Ni()}function Ni(){E(hn,hn.current),E(Ai,Ai.current)}function Kn(s){y(Ai),ji===s&&(ji=null),y(hn)}function ma(s){for(var r=s;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||ud(u)||hd(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===s)break;for(;r.sibling===null;){if(r.return===null||r.return===s)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function ke(){throw Error(i(321))}function mr(s,r){if(r===null)return!1;for(var u=0;u<r.length&&u<s.length;u++)if(!fi(s[u],r[u]))return!1;return!0}function gr(s,r,u,d,_,M){return qs=M,pe=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,ae.H=s===null||s.memoizedState===null?Ca:Ys,Aa=!1,M=u(d,_),Aa=!1,Or&&(M=ac(r,u,d,_)),sc(s),M}function sc(s){ae.H=Qi;var r=Be!==null&&Be.next!==null;if(qs=0,on=Be=pe=null,Uc=!1,Jo=0,Br=null,r)throw Error(i(300));s===null||mn||(s=s.dependencies,s!==null&&uc(s)&&(mn=!0))}function ac(s,r,u,d){pe=s;var _=0;do{if(Or&&(Br=null),Jo=0,Or=!1,25<=_)throw Error(i(301));if(_+=1,on=Be=null,s.updateQueue!=null){var M=s.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}ae.H=wa,M=r(u,d)}while(Or);return M}function ff(){var s=ae.H,r=s.useState()[0];return r=typeof r.then=="function"?Q(r):r,s=s.useState()[0],(Be!==null?Be.memoizedState:null)!==s&&(pe.flags|=1024),r}function Uo(){var s=Nc!==0;return Nc=0,s}function No(s,r,u){r.updateQueue=s.updateQueue,r.flags&=-2053,s.lanes&=~u}function Lo(s){if(Uc){for(s=s.memoizedState;s!==null;){var r=s.queue;r!==null&&(r.pending=null),s=s.next}Uc=!1}qs=0,on=Be=pe=null,Or=!1,Jo=Nc=0,Br=null}function D(){var s={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return on===null?pe.memoizedState=on=s:on=on.next=s,on}function G(){if(Be===null){var s=pe.alternate;s=s!==null?s.memoizedState:null}else s=Be.next;var r=on===null?pe.memoizedState:on.next;if(r!==null)on=r,Be=s;else{if(s===null)throw pe.alternate===null?Error(i(467)):Error(i(310));Be=s,s={memoizedState:Be.memoizedState,baseState:Be.baseState,baseQueue:Be.baseQueue,queue:Be.queue,next:null},on===null?pe.memoizedState=on=s:on=on.next=s}return on}function Q(s){var r=Jo;return Jo+=1,Br===null&&(Br=[]),s=Nt(Br,s,r),r=pe,(on===null?r.memoizedState:on.next)===null&&(r=r.alternate,ae.H=r===null||r.memoizedState===null?Ca:Ys),s}function tt(s){if(s!==null&&typeof s=="object"){if(typeof s.then=="function")return Q(s);if(s.$$typeof===Vs)return An(s)}throw Error(i(438,String(s)))}function X(s){var r=null,u=pe.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=pe.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(_){return _.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=bd(),pe.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(s),d=0;d<s;d++)u[d]=qS;return r.index++,u}function pt(s,r){return typeof r=="function"?r(s):r}function At(s){var r=G();return Ht(r,Be,s)}function Ht(s,r,u){var d=s.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var _=s.baseQueue,M=d.pending;if(M!==null){if(_!==null){var N=_.next;_.next=M.next,M.next=N}r.baseQueue=_=M,d.pending=null}if(M=s.baseState,_===null)s.memoizedState=M;else{r=_.next;var H=N=null,Z=null,ot=r,Mt=!1;do{var Lt=ot.lane&-536870913;if(Lt!==ot.lane?(Te&Lt)===Lt:(qs&Lt)===Lt){var It=ot.revertLane;if(It===0)Z!==null&&(Z=Z.next={lane:0,revertLane:0,action:ot.action,hasEagerState:ot.hasEagerState,eagerState:ot.eagerState,next:null}),Lt===Ur&&(Mt=!0);else if((qs&It)===It){ot=ot.next,It===Ur&&(Mt=!0);continue}else Lt={lane:0,revertLane:ot.revertLane,action:ot.action,hasEagerState:ot.hasEagerState,eagerState:ot.eagerState,next:null},Z===null?(H=Z=Lt,N=M):Z=Z.next=Lt,pe.lanes|=It,Zs|=It;Lt=ot.action,Aa&&u(M,Lt),M=ot.hasEagerState?ot.eagerState:u(M,Lt)}else It={lane:Lt,revertLane:ot.revertLane,action:ot.action,hasEagerState:ot.hasEagerState,eagerState:ot.eagerState,next:null},Z===null?(H=Z=It,N=M):Z=Z.next=It,pe.lanes|=Lt,Zs|=Lt;ot=ot.next}while(ot!==null&&ot!==r);if(Z===null?N=M:Z.next=H,!fi(M,s.memoizedState)&&(mn=!0,Mt&&(u=Nr,u!==null)))throw u;s.memoizedState=M,s.baseState=N,s.baseQueue=Z,d.lastRenderedState=M}return _===null&&(d.lanes=0),[s.memoizedState,d.dispatch]}function Gt(s){var r=G(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=s;var d=u.dispatch,_=u.pending,M=r.memoizedState;if(_!==null){u.pending=null;var N=_=_.next;do M=s(M,N.action),N=N.next;while(N!==_);fi(M,r.memoizedState)||(mn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function te(s,r,u){var d=pe,_=G(),M=Ne;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var N=!fi((Be||_).memoizedState,u);if(N&&(_.memoizedState=u,mn=!0),_=_.queue,df(Se.bind(null,d,_,s),[s]),_.getSnapshot!==r||N||on!==null&&on.memoizedState.tag&1){if(d.flags|=2048,Zi(9,Kt.bind(null,d,_,u,r),{destroy:void 0},null),Xe===null)throw Error(i(349));M||(qs&60)!==0||ne(d,r,u)}return u}function ne(s,r,u){s.flags|=16384,s={getSnapshot:r,value:u},r=pe.updateQueue,r===null?(r=bd(),pe.updateQueue=r,r.stores=[s]):(u=r.stores,u===null?r.stores=[s]:u.push(s))}function Kt(s,r,u,d){r.value=u,r.getSnapshot=d,Ae(r)&&Ke(s)}function Se(s,r,u){return u(function(){Ae(r)&&Ke(s)})}function Ae(s){var r=s.getSnapshot;s=s.value;try{var u=r();return!fi(s,u)}catch{return!0}}function Ke(s){var r=Dt(s,2);r!==null&&Fn(r,s,2)}function We(s){var r=D();if(typeof s=="function"){var u=s;if(s=u(),Aa){it(!0);try{u()}finally{it(!1)}}}return r.memoizedState=r.baseState=s,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:pt,lastRenderedState:s},r}function Me(s,r,u,d){return s.baseState=u,Ht(s,Be,typeof d=="function"?d:pt)}function $t(s,r,u,d,_){if(lc(s))throw Error(i(485));if(s=r.action,s!==null){var M={payload:_,action:s,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(N){M.listeners.push(N)}};ae.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,rn(r,M)):(M.next=u.next,r.pending=u.next=M)}}function rn(s,r){var u=r.action,d=r.payload,_=s.state;if(r.isTransition){var M=ae.T,N={};ae.T=N;try{var H=u(_,d),Z=ae.S;Z!==null&&Z(N,H),Ce(s,r,H)}catch(ot){Yi(s,r,ot)}finally{ae.T=M}}else try{M=u(_,d),Ce(s,r,M)}catch(ot){Yi(s,r,ot)}}function Ce(s,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){Jn(s,r,d)},function(d){return Yi(s,r,d)}):Jn(s,r,u)}function Jn(s,r,u){r.status="fulfilled",r.value=u,Tn(r),s.state=u,r=s.pending,r!==null&&(u=r.next,u===r?s.pending=null:(u=u.next,r.next=u,rn(s,u)))}function Yi(s,r,u){var d=s.pending;if(s.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,Tn(r),r=r.next;while(r!==d)}s.action=null}function Tn(s){s=s.listeners;for(var r=0;r<s.length;r++)(0,s[r])()}function Is(s,r){return r}function Ge(s,r){if(Ne){var u=Xe.formState;if(u!==null){t:{var d=pe;if(Ne){if(Rn){var _=BM(Rn,Ji);if(_){Rn=H0(_),d=zM(_);break t}}Xt(d)}d=!1}d&&(r=u[0])}}u=D(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Is,lastRenderedState:r},u.queue=d,u=hg.bind(null,pe,d),d.dispatch=u,d=We(!1);var M=vf.bind(null,pe,!1,d.queue);return d=D(),_={state:r,dispatch:null,action:s,pending:null},d.queue=_,u=$t.bind(null,pe,_,M,u),_.dispatch=u,d.memoizedState=s,[r,u,!1]}function Bn(s){var r=G();return zn(r,Be,s)}function zn(s,r,u){r=Ht(s,r,Is)[0],s=At(pt)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?Q(r):r;var d=G(),_=d.queue,M=_.dispatch;return u!==d.memoizedState&&(pe.flags|=2048,Zi(9,xn.bind(null,_,u),{destroy:void 0},null)),[r,M,s]}function xn(s,r){s.action=r}function Sn(s){var r=G(),u=Be;if(u!==null)return zn(r,u,s);G(),r=r.memoizedState,u=G();var d=u.queue.dispatch;return u.memoizedState=s,[r,d,!1]}function Zi(s,r,u,d){return s={tag:s,create:r,inst:u,deps:d,next:null},r=pe.updateQueue,r===null&&(r=bd(),pe.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=s.next=s:(d=u.next,u.next=s,s.next=d,r.lastEffect=s),s}function Ki(){return G().memoizedState}function rc(s,r,u,d){var _=D();pe.flags|=s,_.memoizedState=Zi(1|r,u,{destroy:void 0},d===void 0?null:d)}function oc(s,r,u,d){var _=G();d=d===void 0?null:d;var M=_.memoizedState.inst;Be!==null&&d!==null&&mr(d,Be.memoizedState.deps)?_.memoizedState=Zi(r,u,M,d):(pe.flags|=s,_.memoizedState=Zi(1|r,u,M,d))}function $m(s,r){rc(8390656,8,s,r)}function df(s,r){oc(2048,8,s,r)}function tg(s,r){return oc(4,2,s,r)}function eg(s,r){return oc(4,4,s,r)}function ng(s,r){if(typeof r=="function"){s=s();var u=r(s);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return s=s(),r.current=s,function(){r.current=null}}function ig(s,r,u){u=u!=null?u.concat([s]):null,oc(4,4,ng.bind(null,r,s),u)}function pf(){}function sg(s,r){var u=G();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&mr(r,d[1])?d[0]:(u.memoizedState=[s,r],s)}function ag(s,r){var u=G();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&mr(r,d[1]))return d[0];if(d=s(),Aa){it(!0);try{s()}finally{it(!1)}}return u.memoizedState=[d,r],d}function mf(s,r,u){return u===void 0||(qs&1073741824)!==0?s.memoizedState=r:(s.memoizedState=u,s=e0(),pe.lanes|=s,Zs|=s,u)}function rg(s,r,u,d){return fi(u,r)?u:Ir.current!==null?(s=mf(s,u,d),fi(s,r)||(mn=!0),s):(qs&42)===0?(mn=!0,s.memoizedState=u):(s=e0(),pe.lanes|=s,Zs|=s,r)}function og(s,r,u,d,_){var M=Ma();Qn(M!==0&&8>M?M:8);var N=ae.T,H={};ae.T=H,vf(s,!1,r,u);try{var Z=_(),ot=ae.S;if(ot!==null&&ot(H,Z),Z!==null&&typeof Z=="object"&&typeof Z.then=="function"){var Mt=me(Z,d);Po(s,r,Mt,li(s))}else Po(s,r,d,li(s))}catch(Lt){Po(s,r,{then:function(){},status:"rejected",reason:Lt},li())}finally{Qn(M),ae.T=N}}function lg(s){var r=s.memoizedState;if(r!==null)return r;r={memoizedState:br,baseState:br,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:pt,lastRenderedState:br},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:pt,lastRenderedState:u},next:null},s.memoizedState=r,s=s.alternate,s!==null&&(s.memoizedState=r),r}function gf(){return An(ba)}function cg(){return G().memoizedState}function ug(){return G().memoizedState}function ES(s){for(var r=s.return;r!==null;){switch(r.tag){case 24:case 3:var u=li();s=Zt(u);var d=jt(r,s,u);d!==null&&(Fn(d,r,u),Ft(d,r,u)),r={cache:Df()},s.payload=r;return}r=r.return}}function TS(s,r,u){var d=li();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},lc(s)?fg(r,u):(u=vt(s,r,u,d),u!==null&&(Fn(u,s,d),dg(u,r,d)))}function hg(s,r,u){var d=li();Po(s,r,u,d)}function Po(s,r,u,d){var _={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(lc(s))fg(r,_);else{var M=s.alternate;if(s.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var N=r.lastRenderedState,H=M(N,u);if(_.hasEagerState=!0,_.eagerState=H,fi(H,N))return Wt(s,r,_,0),Xe===null&&O(),!1}catch{}finally{}if(u=vt(s,r,_,d),u!==null)return Fn(u,s,d),dg(u,r,d),!0}return!1}function vf(s,r,u,d){if(d={lane:2,revertLane:kt(),action:d,hasEagerState:!1,eagerState:null,next:null},lc(s)){if(r)throw Error(i(479))}else r=vt(s,u,d,2),r!==null&&Fn(r,s,2)}function lc(s){var r=s.alternate;return s===pe||r!==null&&r===pe}function fg(s,r){Or=Uc=!0;var u=s.pending;u===null?r.next=r:(r.next=u.next,u.next=r),s.pending=r}function dg(s,r,u){if((u&4194176)!==0){var d=r.lanes;d&=s.pendingLanes,u|=d,r.lanes=u,K(s,u)}}function _f(s,r,u,d){r=s.memoizedState,u=u(d,r),u=u==null?r:td({},r,u),s.memoizedState=u,s.lanes===0&&(s.updateQueue.baseState=u)}function pg(s,r,u,d,_,M,N){return s=s.stateNode,typeof s.shouldComponentUpdate=="function"?s.shouldComponentUpdate(d,M,N):r.prototype&&r.prototype.isPureReactComponent?!st(u,d)||!st(_,M):!0}function mg(s,r,u,d){s=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==s&&Ed.enqueueReplaceState(r,r.state,null)}function ga(s,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(s=s.defaultProps){u===r&&(u=td({},u));for(var _ in s)u[_]===void 0&&(u[_]=s[_])}return u}function cc(s,r){try{var u=s.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function gg(s,r,u){try{var d=s.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(_){setTimeout(function(){throw _})}}function yf(s,r,u){return u=Zt(u),u.tag=3,u.payload={element:null},u.callback=function(){cc(s,r)},u}function vg(s){return s=Zt(s),s.tag=3,s}function _g(s,r,u,d){var _=u.type.getDerivedStateFromError;if(typeof _=="function"){var M=d.value;s.payload=function(){return _(M)},s.callback=function(){gg(r,u,d)}}var N=u.stateNode;N!==null&&typeof N.componentDidCatch=="function"&&(s.callback=function(){gg(r,u,d),typeof _!="function"&&(Ks===null?Ks=new Set([this]):Ks.add(this));var H=d.stack;this.componentDidCatch(d.value,{componentStack:H!==null?H:""})})}function AS(s,r,u,d,_){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&Oo(r,u,_,!0),u=Ai.current,u!==null){switch(u.tag){case 13:return ji===null?Yf():u.alternate===null&&en===0&&(en=3),u.flags&=-257,u.flags|=65536,u.lanes=_,d===Rc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),Kf(s,d,_)),!1;case 22:return u.flags|=65536,d===Rc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),Kf(s,d,_)),!1}throw Error(i(435,u.tag))}return Kf(s,d,_),Yf(),!1}if(Ne)return r=Ai.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=_,d!==gd&&(s=Error(i(422),{cause:d}),ft(ct(s,u)))):(d!==gd&&(r=Error(i(423),{cause:d}),ft(ct(r,u))),s=s.current.alternate,s.flags|=65536,_&=-_,s.lanes|=_,d=ct(d,u),_=yf(s.stateNode,d,_),ge(s,_),en!==4&&(en=2)),!1;var M=Error(i(520),{cause:d});if(M=ct(M,u),Qo===null?Qo=[M]:Qo.push(M),en!==4&&(en=2),r===null)return!0;d=ct(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,s=_&-_,u.lanes|=s,s=yf(u.stateNode,d,s),ge(u,s),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(Ks===null||!Ks.has(M))))return u.flags|=65536,_&=-_,u.lanes|=_,_=vg(_),_g(_,s,u,d),ge(u,_),!1}u=u.return}while(u!==null);return!1}function Mn(s,r,u,d){r.child=s===null?tv(r,null,u,d):Ta(r,s.child,u,d)}function yg(s,r,u,d,_){u=u.render;var M=r.ref;if("ref"in d){var N={};for(var H in d)H!=="ref"&&(N[H]=d[H])}else N=d;return va(r),d=gr(s,r,u,N,M,_),H=Uo(),s!==null&&!mn?(No(s,r,_),ls(s,r,_)):(Ne&&H&&Pt(r),r.flags|=1,Mn(s,r,d,_),r.child)}function xg(s,r,u,d,_){if(s===null){var M=u.type;return typeof M=="function"&&!Jf(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,Sg(s,r,M,d,_)):(s=vc(u.type,null,d,r,r.mode,_),s.ref=r.ref,s.return=r,r.child=s)}if(M=s.child,!Cf(s,_)){var N=M.memoizedProps;if(u=u.compare,u=u!==null?u:st,u(N,d)&&s.ref===r.ref)return ls(s,r,_)}return r.flags|=1,s=Hs(M,d),s.ref=r.ref,s.return=r,r.child=s}function Sg(s,r,u,d,_){if(s!==null){var M=s.memoizedProps;if(st(M,d)&&s.ref===r.ref)if(mn=!1,r.pendingProps=d=M,Cf(s,_))(s.flags&131072)!==0&&(mn=!0);else return r.lanes=s.lanes,ls(s,r,_)}return xf(s,r,u,d,_)}function Mg(s,r,u){var d=r.pendingProps,_=d.children,M=(r.stateNode._pendingVisibility&2)!==0,N=s!==null?s.memoizedState:null;if(Io(s,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=N!==null?N.baseLanes|u:u,s!==null){for(_=r.child=s.child,M=0;_!==null;)M=M|_.lanes|_.childLanes,_=_.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return bg(s,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},s!==null&&fc(r,N!==null?N.cachePool:null),N!==null?Ro(r,N):pr(),Do(r);else return r.lanes=r.childLanes=536870912,bg(s,r,N!==null?N.baseLanes|u:u,u)}else N!==null?(fc(r,N.cachePool),Ro(r,N),Ni(),r.memoizedState=null):(s!==null&&fc(r,null),pr(),Ni());return Mn(s,r,_,u),r.child}function bg(s,r,u,d){var _=Uf();return _=_===null?null:{parent:fs?$e._currentValue:$e._currentValue2,pool:_},r.memoizedState={baseLanes:u,cachePool:_},s!==null&&fc(r,null),pr(),Do(r),s!==null&&Oo(s,r,d,!0),null}function Io(s,r){var u=r.ref;if(u===null)s!==null&&s.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(s===null||s.ref!==u)&&(r.flags|=2097664)}}function xf(s,r,u,d,_){return va(r),u=gr(s,r,u,d,void 0,_),d=Uo(),s!==null&&!mn?(No(s,r,_),ls(s,r,_)):(Ne&&d&&Pt(r),r.flags|=1,Mn(s,r,u,_),r.child)}function Eg(s,r,u,d,_,M){return va(r),r.updateQueue=null,u=ac(r,d,u,_),sc(s),d=Uo(),s!==null&&!mn?(No(s,r,M),ls(s,r,M)):(Ne&&d&&Pt(r),r.flags|=1,Mn(s,r,u,M),r.child)}function Tg(s,r,u,d,_){if(va(r),r.stateNode===null){var M=Tr,N=u.contextType;typeof N=="object"&&N!==null&&(M=An(N)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Ed,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},yt(r),N=u.contextType,M.context=typeof N=="object"&&N!==null?An(N):Tr,M.state=r.memoizedState,N=u.getDerivedStateFromProps,typeof N=="function"&&(_f(r,u,N,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(N=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),N!==M.state&&Ed.enqueueReplaceState(M,M.state,null),Ue(r,d,M,_),se(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(s===null){M=r.stateNode;var H=r.memoizedProps,Z=ga(u,H);M.props=Z;var ot=M.context,Mt=u.contextType;N=Tr,typeof Mt=="object"&&Mt!==null&&(N=An(Mt));var Lt=u.getDerivedStateFromProps;Mt=typeof Lt=="function"||typeof M.getSnapshotBeforeUpdate=="function",H=r.pendingProps!==H,Mt||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(H||ot!==N)&&mg(r,M,d,N),Xs=!1;var It=r.memoizedState;M.state=It,Ue(r,d,M,_),se(),ot=r.memoizedState,H||It!==ot||Xs?(typeof Lt=="function"&&(_f(r,u,Lt,d),ot=r.memoizedState),(Z=Xs||pg(r,u,Z,d,It,ot,N))?(Mt||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ot),M.props=d,M.state=ot,M.context=N,d=Z):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,Vt(s,r),N=r.memoizedProps,Mt=ga(u,N),M.props=Mt,Lt=r.pendingProps,It=M.context,ot=u.contextType,Z=Tr,typeof ot=="object"&&ot!==null&&(Z=An(ot)),H=u.getDerivedStateFromProps,(ot=typeof H=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(N!==Lt||It!==Z)&&mg(r,M,d,Z),Xs=!1,It=r.memoizedState,M.state=It,Ue(r,d,M,_),se();var ue=r.memoizedState;N!==Lt||It!==ue||Xs||s!==null&&s.dependencies!==null&&uc(s.dependencies)?(typeof H=="function"&&(_f(r,u,H,d),ue=r.memoizedState),(Mt=Xs||pg(r,u,Mt,d,It,ue,Z)||s!==null&&s.dependencies!==null&&uc(s.dependencies))?(ot||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,ue,Z),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,ue,Z)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||N===s.memoizedProps&&It===s.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===s.memoizedProps&&It===s.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=ue),M.props=d,M.state=ue,M.context=Z,d=Mt):(typeof M.componentDidUpdate!="function"||N===s.memoizedProps&&It===s.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||N===s.memoizedProps&&It===s.memoizedState||(r.flags|=1024),d=!1)}return M=d,Io(s,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,s!==null&&d?(r.child=Ta(r,s.child,null,_),r.child=Ta(r,null,u,_)):Mn(s,r,u,_),r.memoizedState=M.state,s=r.child):s=ls(s,r,_),s}function Ag(s,r,u,d){return mt(),r.flags|=256,Mn(s,r,u,d),r.child}function Sf(s){return{baseLanes:s,cachePool:Ng()}}function Mf(s,r,u){return s=s!==null?s.childLanes&~u:0,r&&(s|=Ci),s}function Cg(s,r,u){var d=r.pendingProps,_=!1,M=(r.flags&128)!==0,N;if((N=M)||(N=s!==null&&s.memoizedState===null?!1:(hn.current&2)!==0),N&&(_=!0,r.flags&=-129),N=(r.flags&32)!==0,r.flags&=-33,s===null){if(Ne){if(_?xi(r):Ni(),Ne){var H=Rn,Z;(Z=H)&&(H=kM(H,Ji),H!==null?(r.memoizedState={dehydrated:H,treeContext:Ea!==null?{id:ds,overflow:ps}:null,retryLane:536870912},Z=e(18,null,null,0),Z.stateNode=H,Z.return=r,r.child=Z,Hn=r,Rn=null,Z=!0):Z=!1),Z||Xt(r)}if(H=r.memoizedState,H!==null&&(H=H.dehydrated,H!==null))return hd(H)?r.lanes=16:r.lanes=536870912,null;Kn(r)}return H=d.children,d=d.fallback,_?(Ni(),_=r.mode,H=Ef({mode:"hidden",children:H},_),d=Sa(d,_,u,null),H.return=r,d.return=r,H.sibling=d,r.child=H,_=r.child,_.memoizedState=Sf(u),_.childLanes=Mf(s,N,u),r.memoizedState=Td,d):(xi(r),bf(r,H))}if(Z=s.memoizedState,Z!==null&&(H=Z.dehydrated,H!==null)){if(M)r.flags&256?(xi(r),r.flags&=-257,r=Tf(s,r,u)):r.memoizedState!==null?(Ni(),r.child=s.child,r.flags|=128,r=null):(Ni(),_=d.fallback,H=r.mode,d=Ef({mode:"visible",children:d.children},H),_=Sa(_,H,u,null),_.flags|=2,d.return=r,_.return=r,d.sibling=_,r.child=d,Ta(r,s.child,null,u),d=r.child,d.memoizedState=Sf(u),d.childLanes=Mf(s,N,u),r.memoizedState=Td,r=_);else if(xi(r),hd(H))N=IM(H).digest,d=Error(i(419)),d.stack="",d.digest=N,ft({value:d,source:null,stack:null}),r=Tf(s,r,u);else if(mn||Oo(s,r,u,!1),N=(u&s.childLanes)!==0,mn||N){if(N=Xe,N!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(N.suspendedLanes|u))!==0?0:d,d!==0&&d!==Z.retryLane)throw Z.retryLane=d,Dt(s,d),Fn(N,s,d),nv}ud(H)||Yf(),r=Tf(s,r,u)}else ud(H)?(r.flags|=128,r.child=s.child,r=zS.bind(null,s),OM(H,r),r=null):(s=Z.treeContext,Si&&(Rn=HM(H),Hn=r,Ne=!0,Ii=null,Ji=!1,s!==null&&(bi[Ei++]=ds,bi[Ei++]=ps,bi[Ei++]=Ea,ds=s.id,ps=s.overflow,Ea=r)),r=bf(r,d.children),r.flags|=4096);return r}return _?(Ni(),_=d.fallback,H=r.mode,Z=s.child,M=Z.sibling,d=Hs(Z,{mode:"hidden",children:d.children}),d.subtreeFlags=Z.subtreeFlags&31457280,M!==null?_=Hs(M,_):(_=Sa(_,H,u,null),_.flags|=2),_.return=r,d.return=r,d.sibling=_,r.child=d,d=_,_=r.child,H=s.child.memoizedState,H===null?H=Sf(u):(Z=H.cachePool,Z!==null?(M=fs?$e._currentValue:$e._currentValue2,Z=Z.parent!==M?{parent:M,pool:M}:Z):Z=Ng(),H={baseLanes:H.baseLanes|u,cachePool:Z}),_.memoizedState=H,_.childLanes=Mf(s,N,u),r.memoizedState=Td,d):(xi(r),u=s.child,s=u.sibling,u=Hs(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,s!==null&&(N=r.deletions,N===null?(r.deletions=[s],r.flags|=16):N.push(s)),r.child=u,r.memoizedState=null,u)}function bf(s,r){return r=Ef({mode:"visible",children:r},s.mode),r.return=s,s.child=r}function Ef(s,r){return v0(s,r,0,null)}function Tf(s,r,u){return Ta(r,s.child,null,u),s=bf(r,r.pendingProps.children),s.flags|=2,r.memoizedState=null,s}function wg(s,r,u){s.lanes|=r;var d=s.alternate;d!==null&&(d.lanes|=r),wf(s.return,r,u)}function Af(s,r,u,d,_){var M=s.memoizedState;M===null?s.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:_}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=_)}function Rg(s,r,u){var d=r.pendingProps,_=d.revealOrder,M=d.tail;if(Mn(s,r,d.children,u),d=hn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(s!==null&&(s.flags&128)!==0)t:for(s=r.child;s!==null;){if(s.tag===13)s.memoizedState!==null&&wg(s,u,r);else if(s.tag===19)wg(s,u,r);else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===r)break t;for(;s.sibling===null;){if(s.return===null||s.return===r)break t;s=s.return}s.sibling.return=s.return,s=s.sibling}d&=1}switch(E(hn,d),_){case"forwards":for(u=r.child,_=null;u!==null;)s=u.alternate,s!==null&&ma(s)===null&&(_=u),u=u.sibling;u=_,u===null?(_=r.child,r.child=null):(_=u.sibling,u.sibling=null),Af(r,!1,_,u,M);break;case"backwards":for(u=null,_=r.child,r.child=null;_!==null;){if(s=_.alternate,s!==null&&ma(s)===null){r.child=_;break}s=_.sibling,_.sibling=u,u=_,_=s}Af(r,!0,u,null,M);break;case"together":Af(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function ls(s,r,u){if(s!==null&&(r.dependencies=s.dependencies),Zs|=r.lanes,(u&r.childLanes)===0)if(s!==null){if(Oo(s,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(s!==null&&r.child!==s.child)throw Error(i(153));if(r.child!==null){for(s=r.child,u=Hs(s,s.pendingProps),r.child=u,u.return=r;s.sibling!==null;)s=s.sibling,u=u.sibling=Hs(s,s.pendingProps),u.return=r;u.sibling=null}return r.child}function Cf(s,r){return(s.lanes&r)!==0?!0:(s=s.dependencies,!!(s!==null&&uc(s)))}function CS(s,r,u){switch(r.tag){case 3:nt(r,r.stateNode.containerInfo),Os(r,$e,s.memoizedState.cache),mt();break;case 27:case 5:Bt(r);break;case 4:nt(r,r.stateNode.containerInfo);break;case 10:Os(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(xi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Cg(s,r,u):(xi(r),s=ls(s,r,u),s!==null?s.sibling:null);xi(r);break;case 19:var _=(s.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(Oo(s,r,u,!1),d=(u&r.childLanes)!==0),_){if(d)return Rg(s,r,u);r.flags|=128}if(_=r.memoizedState,_!==null&&(_.rendering=null,_.tail=null,_.lastEffect=null),E(hn,hn.current),d)break;return null;case 22:case 23:return r.lanes=0,Mg(s,r,u);case 24:Os(r,$e,s.memoizedState.cache)}return ls(s,r,u)}function Dg(s,r,u){if(s!==null)if(s.memoizedProps!==r.pendingProps)mn=!0;else{if(!Cf(s,u)&&(r.flags&128)===0)return mn=!1,CS(s,r,u);mn=(s.flags&131072)!==0}else mn=!1,Ne&&(r.flags&1048576)!==0&&St(r,Tc,r.index);switch(r.lanes=0,r.tag){case 16:t:{s=r.pendingProps;var d=r.elementType,_=d._init;if(d=_(d._payload),r.type=d,typeof d=="function")Jf(d)?(s=ga(d,s),r.tag=1,r=Tg(null,r,d,s,u)):(r.tag=0,r=xf(null,r,d,s,u));else{if(d!=null){if(_=d.$$typeof,_===nd){r.tag=11,r=yg(null,r,d,s,u);break t}else if(_===ad){r.tag=14,r=xg(null,r,d,s,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return xf(s,r,r.type,r.pendingProps,u);case 1:return d=r.type,_=ga(d,r.pendingProps),Tg(s,r,d,_,u);case 3:t:{if(nt(r,r.stateNode.containerInfo),s===null)throw Error(i(387));var M=r.pendingProps;_=r.memoizedState,d=_.element,Vt(s,r),Ue(r,M,null,u);var N=r.memoizedState;if(M=N.cache,Os(r,$e,M),M!==_.cache&&Rf(r,[$e],u,!0),se(),M=N.element,Si&&_.isDehydrated)if(_={element:M,isDehydrated:!1,cache:N.cache},r.updateQueue.baseState=_,r.memoizedState=_,r.flags&256){r=Ag(s,r,M,u);break t}else if(M!==d){d=ct(Error(i(424)),r),ft(d),r=Ag(s,r,M,u);break t}else for(Si&&(Rn=FM(r.stateNode.containerInfo),Hn=r,Ne=!0,Ii=null,Ji=!0),u=tv(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(mt(),M===d){r=ls(s,r,u);break t}Mn(s,r,M,u)}r=r.child}return r;case 26:if(Mi)return Io(s,r),s===null?(u=W0(r.type,null,r.pendingProps,null))?r.memoizedState=u:Ne||(r.stateNode=eb(r.type,r.pendingProps,Ws.current,r)):r.memoizedState=W0(r.type,s.memoizedProps,r.pendingProps,s.memoizedState),null;case 27:if(wn)return Bt(r),s===null&&wn&&Ne&&(d=r.stateNode=J0(r.type,r.pendingProps,Ws.current,bn.current,!1),Hn=r,Ji=!0,Rn=V0(d)),d=r.pendingProps.children,s!==null||Ne?Mn(s,r,d,u):r.child=Ta(r,null,d,u),Io(s,r),r.child;case 5:return s===null&&Ne&&(QM(r.type,r.pendingProps,bn.current),(_=d=Rn)&&(d=VM(d,r.type,r.pendingProps,Ji),d!==null?(r.stateNode=d,Hn=r,Rn=V0(d),Ji=!1,_=!0):_=!1),_||Xt(r)),Bt(r),_=r.type,M=r.pendingProps,N=s!==null?s.memoizedProps:null,d=M.children,xc(_,M)?d=null:N!==null&&xc(_,N)&&(r.flags|=32),r.memoizedState!==null&&(_=gr(s,r,ff,null,null,u),fs?ba._currentValue=_:ba._currentValue2=_),Io(s,r),Mn(s,r,d,u),r.child;case 6:return s===null&&Ne&&($M(r.pendingProps,bn.current),(s=u=Rn)&&(u=GM(u,r.pendingProps,Ji),u!==null?(r.stateNode=u,Hn=r,Rn=null,s=!0):s=!1),s||Xt(r)),null;case 13:return Cg(s,r,u);case 4:return nt(r,r.stateNode.containerInfo),d=r.pendingProps,s===null?r.child=Ta(r,null,d,u):Mn(s,r,d,u),r.child;case 11:return yg(s,r,r.type,r.pendingProps,u);case 7:return Mn(s,r,r.pendingProps,u),r.child;case 8:return Mn(s,r,r.pendingProps.children,u),r.child;case 12:return Mn(s,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,Os(r,r.type,d.value),Mn(s,r,d.children,u),r.child;case 9:return _=r.type._context,d=r.pendingProps.children,va(r),_=An(_),d=d(_),r.flags|=1,Mn(s,r,d,u),r.child;case 14:return xg(s,r,r.type,r.pendingProps,u);case 15:return Sg(s,r,r.type,r.pendingProps,u);case 19:return Rg(s,r,u);case 22:return Mg(s,r,u);case 24:return va(r),d=An($e),s===null?(_=Uf(),_===null&&(_=Xe,M=Df(),_.pooledCache=M,M.refCount++,M!==null&&(_.pooledCacheLanes|=u),_=M),r.memoizedState={parent:d,cache:_},yt(r),Os(r,$e,_)):((s.lanes&u)!==0&&(Vt(s,r),Ue(r,null,null,u),se()),_=s.memoizedState,M=r.memoizedState,_.parent!==d?(_={parent:d,cache:d},r.memoizedState=_,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=_),Os(r,$e,d)):(d=M.cache,Os(r,$e,d),d!==_.cache&&Rf(r,[$e],u,!0))),Mn(s,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function Os(s,r,u){fs?(E(Lc,r._currentValue),r._currentValue=u):(E(Lc,r._currentValue2),r._currentValue2=u)}function cs(s){var r=Lc.current;fs?s._currentValue=r:s._currentValue2=r,y(Lc)}function wf(s,r,u){for(;s!==null;){var d=s.alternate;if((s.childLanes&r)!==r?(s.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),s===u)break;s=s.return}}function Rf(s,r,u,d){var _=s.child;for(_!==null&&(_.return=s);_!==null;){var M=_.dependencies;if(M!==null){var N=_.child;M=M.firstContext;t:for(;M!==null;){var H=M;M=_;for(var Z=0;Z<r.length;Z++)if(H.context===r[Z]){M.lanes|=u,H=M.alternate,H!==null&&(H.lanes|=u),wf(M.return,u,s),d||(N=null);break t}M=H.next}}else if(_.tag===18){if(N=_.return,N===null)throw Error(i(341));N.lanes|=u,M=N.alternate,M!==null&&(M.lanes|=u),wf(N,u,s),N=null}else N=_.child;if(N!==null)N.return=_;else for(N=_;N!==null;){if(N===s){N=null;break}if(_=N.sibling,_!==null){_.return=N.return,N=_;break}N=N.return}_=N}}function Oo(s,r,u,d){s=null;for(var _=r,M=!1;_!==null;){if(!M){if((_.flags&524288)!==0)M=!0;else if((_.flags&262144)!==0)break}if(_.tag===10){var N=_.alternate;if(N===null)throw Error(i(387));if(N=N.memoizedProps,N!==null){var H=_.type;fi(_.pendingProps.value,N.value)||(s!==null?s.push(H):s=[H])}}else if(_===Ac.current){if(N=_.alternate,N===null)throw Error(i(387));N.memoizedState.memoizedState!==_.memoizedState.memoizedState&&(s!==null?s.push(ba):s=[ba])}_=_.return}s!==null&&Rf(r,s,u,d),r.flags|=262144}function uc(s){for(s=s.firstContext;s!==null;){var r=s.context;if(!fi(fs?r._currentValue:r._currentValue2,s.memoizedValue))return!0;s=s.next}return!1}function va(s){Ra=s,ms=null,s=s.dependencies,s!==null&&(s.firstContext=null)}function An(s){return Ug(Ra,s)}function hc(s,r){return Ra===null&&va(s),Ug(s,r)}function Ug(s,r){var u=fs?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},ms===null){if(s===null)throw Error(i(308));ms=r,s.dependencies={lanes:0,firstContext:r},s.flags|=524288}else ms=ms.next=r;return u}function Df(){return{controller:new _b,data:new Map,refCount:0}}function Bo(s){s.refCount--,s.refCount===0&&yb(xb,function(){s.controller.abort()})}function Uf(){var s=Da.current;return s!==null?s:Xe.pooledCache}function fc(s,r){r===null?E(Da,Da.current):E(Da,r.pool)}function Ng(){var s=Uf();return s===null?null:{parent:fs?$e._currentValue:$e._currentValue2,pool:s}}function ai(s){s.flags|=4}function Lg(s,r){if(s!==null&&s.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(s=r.child;s!==null;){if((s.flags&13878)!==0||(s.subtreeFlags&13878)!==0)return!0;s=s.sibling}return!1}function Nf(s,r,u,d){if(Cn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)ld(s,u.stateNode);else if(!(u.tag===4||wn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(ks)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=z0(M,_.type,_.memoizedProps)),ld(s,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=F0(M,_.memoizedProps)),ld(s,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),Nf(s,_,!0,!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function Pg(s,r,u,d){if(ks)for(var _=r.child;_!==null;){if(_.tag===5){var M=_.stateNode;u&&d&&(M=z0(M,_.type,_.memoizedProps)),O0(s,M)}else if(_.tag===6)M=_.stateNode,u&&d&&(M=F0(M,_.memoizedProps)),O0(s,M);else if(_.tag!==4){if(_.tag===22&&_.memoizedState!==null)M=_.child,M!==null&&(M.return=_),Pg(s,_,!(_.memoizedProps!==null&&_.memoizedProps.mode==="manual"),!0);else if(_.child!==null){_.child.return=_,_=_.child;continue}}if(_===r)break;for(;_.sibling===null;){if(_.return===null||_.return===r)return;_=_.return}_.sibling.return=_.return,_=_.sibling}}function Ig(s,r){if(ks&&Lg(s,r)){s=r.stateNode;var u=s.containerInfo,d=I0();Pg(d,r,!1,!1),s.pendingChildren=d,ai(r),PM(u,d)}}function Lf(s,r,u,d){if(Cn)s.memoizedProps!==d&&ai(r);else if(ks){var _=s.stateNode,M=s.memoizedProps;if((s=Lg(s,r))||M!==d){var N=bn.current;M=LM(_,u,M,d,!s,null),M===_?r.stateNode=_:(R0(M,u,d,N)&&ai(r),r.stateNode=M,s?Nf(M,r,!1,!1):ai(r))}else r.stateNode=_}}function Pf(s,r,u){if(oM(r,u)){if(s.flags|=16777216,!N0(r,u))if(r0())s.flags|=8192;else throw Lr=Rc,Md}else s.flags&=-16777217}function Og(s,r){if(ib(r)){if(s.flags|=16777216,!K0(r))if(r0())s.flags|=8192;else throw Lr=Rc,Md}else s.flags&=-16777217}function dc(s,r){r!==null&&(s.flags|=4),s.flags&16384&&(r=s.tag!==22?w():536870912,s.lanes|=r,Hr|=r)}function zo(s,r){if(!Ne)switch(s.tailMode){case"hidden":r=s.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?s.tail=null:u.sibling=null;break;case"collapsed":u=s.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||s.tail===null?s.tail=null:s.tail.sibling=null:d.sibling=null}}function Je(s){var r=s.alternate!==null&&s.alternate.child===s.child,u=0,d=0;if(r)for(var _=s.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags&31457280,d|=_.flags&31457280,_.return=s,_=_.sibling;else for(_=s.child;_!==null;)u|=_.lanes|_.childLanes,d|=_.subtreeFlags,d|=_.flags,_.return=s,_=_.sibling;return s.subtreeFlags|=d,s.childLanes=u,r}function wS(s,r,u){var d=r.pendingProps;switch(le(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Je(r),null;case 1:return Je(r),null;case 3:return u=r.stateNode,d=null,s!==null&&(d=s.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),cs($e),_t(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(s===null||s.child===null)&&(ve(r)?ai(r):s===null||s.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Ii!==null&&(Xf(Ii),Ii=null))),Ig(s,r),Je(r),null;case 26:if(Mi){u=r.type;var _=r.memoizedState;return s===null?(ai(r),_!==null?(Je(r),Og(r,_)):(Je(r),Pf(r,u,d))):_?_!==s.memoizedState?(ai(r),Je(r),Og(r,_)):(Je(r),r.flags&=-16777217):(Cn?s.memoizedProps!==d&&ai(r):Lf(s,r,u,d),Je(r),Pf(r,u,d)),null}case 27:if(wn){if(bt(r),u=Ws.current,_=r.type,s!==null&&r.stateNode!=null)Cn?s.memoizedProps!==d&&ai(r):Lf(s,r,_,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}s=bn.current,ve(r)?xe(r,s):(s=J0(_,d,u,s,!0),r.stateNode=s,ai(r))}return Je(r),null}case 5:if(bt(r),u=r.type,s!==null&&r.stateNode!=null)Lf(s,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}s=bn.current,ve(r)?xe(r,s):(_=tM(u,d,Ws.current,s,r),Nf(_,r,!1,!1),r.stateNode=_,R0(_,u,d,s)&&ai(r))}return Je(r),Pf(r,r.type,r.pendingProps),null;case 6:if(s&&r.stateNode!=null)u=s.memoizedProps,Cn?u!==d&&ai(r):ks&&(u!==d?(r.stateNode=D0(d,Ws.current,bn.current,r),ai(r)):r.stateNode=s.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(s=Ws.current,u=bn.current,ve(r)){if(!Si)throw Error(i(176));if(s=r.stateNode,u=r.memoizedProps,d=null,_=Hn,_!==null)switch(_.tag){case 27:case 5:d=_.memoizedProps}XM(s,u,r,d)||Xt(r)}else r.stateNode=D0(d,s,u,r)}return Je(r),null;case 13:if(d=r.memoizedState,s===null||s.memoizedState!==null&&s.memoizedState.dehydrated!==null){if(_=ve(r),d!==null&&d.dehydrated!==null){if(s===null){if(!_)throw Error(i(318));if(!Si)throw Error(i(344));if(_=r.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(i(317));qM(_,r)}else mt(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Je(r),_=!1}else Ii!==null&&(Xf(Ii),Ii=null),_=!0;if(!_)return r.flags&256?(Kn(r),r):(Kn(r),null)}if(Kn(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,s=s!==null&&s.memoizedState!==null,u){d=r.child,_=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(_=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==_&&(d.flags|=2048)}return u!==s&&u&&(r.child.flags|=8192),dc(r,r.updateQueue),Je(r),null;case 4:return _t(),Ig(s,r),s===null&&iM(r.stateNode.containerInfo),Je(r),null;case 10:return cs(r.type),Je(r),null;case 19:if(y(hn),_=r.memoizedState,_===null)return Je(r),null;if(d=(r.flags&128)!==0,M=_.rendering,M===null)if(d)zo(_,!1);else{if(en!==0||s!==null&&(s.flags&128)!==0)for(s=r.child;s!==null;){if(M=ma(s),M!==null){for(r.flags|=128,zo(_,!1),s=M.updateQueue,r.updateQueue=s,dc(r,s),r.subtreeFlags=0,s=u,u=r.child;u!==null;)g0(u,s),u=u.sibling;return E(hn,hn.current&1|2),r.child}s=s.sibling}_.tail!==null&&Pi()>$o&&(r.flags|=128,d=!0,zo(_,!1),r.lanes=4194304)}else{if(!d)if(s=ma(M),s!==null){if(r.flags|=128,d=!0,s=s.updateQueue,r.updateQueue=s,dc(r,s),zo(_,!0),_.tail===null&&_.tailMode==="hidden"&&!M.alternate&&!Ne)return Je(r),null}else 2*Pi()-_.renderingStartTime>$o&&u!==536870912&&(r.flags|=128,d=!0,zo(_,!1),r.lanes=4194304);_.isBackwards?(M.sibling=r.child,r.child=M):(s=_.last,s!==null?s.sibling=M:r.child=M,_.last=M)}return _.tail!==null?(r=_.tail,_.rendering=r,_.tail=r.sibling,_.renderingStartTime=Pi(),r.sibling=null,s=hn.current,E(hn,d?s&1|2:s&1),r):(Je(r),null);case 22:case 23:return Kn(r),Ui(),d=r.memoizedState!==null,s!==null?s.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Je(r),r.subtreeFlags&6&&(r.flags|=8192)):Je(r),u=r.updateQueue,u!==null&&dc(r,u.retryQueue),u=null,s!==null&&s.memoizedState!==null&&s.memoizedState.cachePool!==null&&(u=s.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),s!==null&&y(Da),null;case 24:return u=null,s!==null&&(u=s.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),cs($e),Je(r),null;case 25:return null}throw Error(i(156,r.tag))}function RS(s,r){switch(le(r),r.tag){case 1:return s=r.flags,s&65536?(r.flags=s&-65537|128,r):null;case 3:return cs($e),_t(),s=r.flags,(s&65536)!==0&&(s&128)===0?(r.flags=s&-65537|128,r):null;case 26:case 27:case 5:return bt(r),null;case 13:if(Kn(r),s=r.memoizedState,s!==null&&s.dehydrated!==null){if(r.alternate===null)throw Error(i(340));mt()}return s=r.flags,s&65536?(r.flags=s&-65537|128,r):null;case 19:return y(hn),null;case 4:return _t(),null;case 10:return cs(r.type),null;case 22:case 23:return Kn(r),Ui(),s!==null&&y(Da),s=r.flags,s&65536?(r.flags=s&-65537|128,r):null;case 24:return cs($e),null;case 25:return null;default:return null}}function Bg(s,r){switch(le(r),r.tag){case 3:cs($e),_t();break;case 26:case 27:case 5:bt(r);break;case 4:_t();break;case 13:Kn(r);break;case 19:y(hn);break;case 10:cs(r.type);break;case 22:case 23:Kn(r),Ui(),s!==null&&y(Da);break;case 24:cs($e)}}function Fo(s,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var _=d.next;u=_;do{if((u.tag&s)===s){d=void 0;var M=u.create,N=u.inst;d=M(),N.destroy=d}u=u.next}while(u!==_)}}catch(H){Ie(r,r.return,H)}}function Bs(s,r,u){try{var d=r.updateQueue,_=d!==null?d.lastEffect:null;if(_!==null){var M=_.next;d=M;do{if((d.tag&s)===s){var N=d.inst,H=N.destroy;if(H!==void 0){N.destroy=void 0,_=r;var Z=u;try{H()}catch(ot){Ie(_,Z,ot)}}}d=d.next}while(d!==M)}}catch(ot){Ie(r,r.return,ot)}}function zg(s){var r=s.updateQueue;if(r!==null){var u=s.stateNode;try{Rt(r,u)}catch(d){Ie(s,s.return,d)}}}function Fg(s,r,u){u.props=ga(s.type,s.memoizedProps),u.state=s.memoizedState;try{u.componentWillUnmount()}catch(d){Ie(s,r,d)}}function _a(s,r){try{var u=s.ref;if(u!==null){var d=s.stateNode;switch(s.tag){case 26:case 27:case 5:var _=Go(d);break;default:_=d}typeof u=="function"?s.refCleanup=u(_):u.current=_}}catch(M){Ie(s,r,M)}}function ri(s,r){var u=s.ref,d=s.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(_){Ie(s,r,_)}finally{s.refCleanup=null,s=s.alternate,s!=null&&(s.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(_){Ie(s,r,_)}else u.current=null}function Hg(s){var r=s.type,u=s.memoizedProps,d=s.stateNode;try{MM(d,r,u,s)}catch(_){Ie(s,s.return,_)}}function Vg(s,r,u){try{bM(s.stateNode,s.type,u,r,s)}catch(d){Ie(s,s.return,d)}}function Gg(s){return s.tag===5||s.tag===3||(Mi?s.tag===26:!1)||(wn?s.tag===27:!1)||s.tag===4}function If(s){t:for(;;){for(;s.sibling===null;){if(s.return===null||Gg(s.return))return null;s=s.return}for(s.sibling.return=s.return,s=s.sibling;s.tag!==5&&s.tag!==6&&(!wn||s.tag!==27)&&s.tag!==18;){if(s.flags&2||s.child===null||s.tag===4)continue t;s.child.return=s,s=s.child}if(!(s.flags&2))return s.stateNode}}function Of(s,r,u){var d=s.tag;if(d===5||d===6)s=s.stateNode,r?TM(u,s,r):xM(u,s);else if(!(d===4||wn&&d===27)&&(s=s.child,s!==null))for(Of(s,r,u),s=s.sibling;s!==null;)Of(s,r,u),s=s.sibling}function pc(s,r,u){var d=s.tag;if(d===5||d===6)s=s.stateNode,r?EM(u,s,r):yM(u,s);else if(!(d===4||wn&&d===27)&&(s=s.child,s!==null))for(pc(s,r,u),s=s.sibling;s!==null;)pc(s,r,u),s=s.sibling}function kg(s,r,u){s=s.containerInfo;try{B0(s,u)}catch(d){Ie(r,r.return,d)}}function DS(s,r){for(QS(s.containerInfo),gn=r;gn!==null;)if(s=gn,r=s.child,(s.subtreeFlags&1028)!==0&&r!==null)r.return=s,gn=r;else for(;gn!==null;){s=gn;var u=s.alternate;switch(r=s.flags,s.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=s,_=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var N=ga(d.type,_,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(N,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(H){Ie(d,d.return,H)}}break;case 3:(r&1024)!==0&&Cn&&NM(s.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=s.sibling,r!==null){r.return=s.return,gn=r;break}gn=s.return}return N=av,av=!1,N}function Wg(s,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:us(s,u),d&4&&Fo(5,u);break;case 1:if(us(s,u),d&4)if(s=u.stateNode,r===null)try{s.componentDidMount()}catch(H){Ie(u,u.return,H)}else{var _=ga(u.type,r.memoizedProps);r=r.memoizedState;try{s.componentDidUpdate(_,r,s.__reactInternalSnapshotBeforeUpdate)}catch(H){Ie(u,u.return,H)}}d&64&&zg(u),d&512&&_a(u,u.return);break;case 3:if(us(s,u),d&64&&(d=u.updateQueue,d!==null)){if(s=null,u.child!==null)switch(u.child.tag){case 27:case 5:s=Go(u.child.stateNode);break;case 1:s=u.child.stateNode}try{Rt(d,s)}catch(H){Ie(u,u.return,H)}}break;case 26:if(Mi){us(s,u),d&512&&_a(u,u.return);break}case 27:case 5:us(s,u),r===null&&d&4&&Hg(u),d&512&&_a(u,u.return);break;case 12:us(s,u);break;case 13:us(s,u),d&4&&qg(s,u);break;case 22:if(_=u.memoizedState!==null||gs,!_){r=r!==null&&r.memoizedState!==null||tn;var M=gs,N=tn;gs=_,(tn=r)&&!N?zs(s,u,(u.subtreeFlags&8772)!==0):us(s,u),gs=M,tn=N}d&512&&(u.memoizedProps.mode==="manual"?_a(u,u.return):ri(u,u.return));break;default:us(s,u)}}function Xg(s){var r=s.alternate;r!==null&&(s.alternate=null,Xg(r)),s.child=null,s.deletions=null,s.sibling=null,s.tag===5&&(r=s.stateNode,r!==null&&rM(r)),s.stateNode=null,s.return=null,s.dependencies=null,s.memoizedProps=null,s.memoizedState=null,s.pendingProps=null,s.stateNode=null,s.updateQueue=null}function Li(s,r,u){for(u=u.child;u!==null;)Bf(s,r,u),u=u.sibling}function Bf(s,r,u){if(hi&&typeof hi.onCommitFiberUnmount=="function")try{hi.onCommitFiberUnmount(Xo,u)}catch{}switch(u.tag){case 26:if(Mi){tn||ri(u,r),Li(s,r,u),u.memoizedState?q0(u.memoizedState):u.stateNode&&Z0(u.stateNode);break}case 27:if(wn){tn||ri(u,r);var d=ln,_=di;ln=u.stateNode,Li(s,r,u),ob(u.stateNode),ln=d,di=_;break}case 5:tn||ri(u,r);case 6:if(Cn){if(d=ln,_=di,ln=null,Li(s,r,u),ln=d,di=_,ln!==null)if(di)try{CM(ln,u.stateNode)}catch(M){Ie(u,r,M)}else try{AM(ln,u.stateNode)}catch(M){Ie(u,r,M)}}else Li(s,r,u);break;case 18:Cn&&ln!==null&&(di?jM(ln,u.stateNode):JM(ln,u.stateNode));break;case 4:Cn?(d=ln,_=di,ln=u.stateNode.containerInfo,di=!0,Li(s,r,u),ln=d,di=_):(ks&&kg(u.stateNode,u,I0()),Li(s,r,u));break;case 0:case 11:case 14:case 15:tn||Bs(2,u,r),tn||Bs(4,u,r),Li(s,r,u);break;case 1:tn||(ri(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&Fg(u,r,d)),Li(s,r,u);break;case 21:Li(s,r,u);break;case 22:tn||ri(u,r),tn=(d=tn)||u.memoizedState!==null,Li(s,r,u),tn=d;break;default:Li(s,r,u)}}function qg(s,r){if(Si&&r.memoizedState===null&&(s=r.alternate,s!==null&&(s=s.memoizedState,s!==null&&(s=s.dehydrated,s!==null))))try{KM(s)}catch(u){Ie(r,r.return,u)}}function US(s){switch(s.tag){case 13:case 19:var r=s.stateNode;return r===null&&(r=s.stateNode=new sv),r;case 22:return s=s.stateNode,r=s._retryCache,r===null&&(r=s._retryCache=new sv),r;default:throw Error(i(435,s.tag))}}function zf(s,r){var u=US(s);r.forEach(function(d){var _=FS.bind(null,s,d);u.has(d)||(u.add(d),d.then(_,_))})}function jn(s,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var _=u[d],M=s,N=r;if(Cn){var H=N;t:for(;H!==null;){switch(H.tag){case 27:case 5:ln=H.stateNode,di=!1;break t;case 3:ln=H.stateNode.containerInfo,di=!0;break t;case 4:ln=H.stateNode.containerInfo,di=!0;break t}H=H.return}if(ln===null)throw Error(i(160));Bf(M,N,_),ln=null,di=!1}else Bf(M,N,_);M=_.alternate,M!==null&&(M.return=null),_.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)Yg(r,s),r=r.sibling}function Yg(s,r){var u=s.alternate,d=s.flags;switch(s.tag){case 0:case 11:case 14:case 15:jn(r,s),oi(s),d&4&&(Bs(3,s,s.return),Fo(3,s),Bs(5,s,s.return));break;case 1:jn(r,s),oi(s),d&512&&(tn||u===null||ri(u,u.return)),d&64&&gs&&(s=s.updateQueue,s!==null&&(d=s.callbacks,d!==null&&(u=s.shared.hiddenCallbacks,s.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Mi){var _=Oi;jn(r,s),oi(s),d&512&&(tn||u===null||ri(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=s.memoizedState,u===null?r===null?s.stateNode===null?s.stateNode=tb(_,s.type,s.memoizedProps,s):Y0(_,s.type,s.stateNode):s.stateNode=X0(_,r,s.memoizedProps):d!==r?(d===null?u.stateNode!==null&&Z0(u.stateNode):q0(d),r===null?Y0(_,s.type,s.stateNode):X0(_,r,s.memoizedProps)):r===null&&s.stateNode!==null&&Vg(s,s.memoizedProps,u.memoizedProps));break}case 27:if(wn&&d&4&&s.alternate===null){_=s.stateNode;var M=s.memoizedProps;try{ab(_),rb(s.type,M,_,s)}catch(Mt){Ie(s,s.return,Mt)}}case 5:if(jn(r,s),oi(s),d&512&&(tn||u===null||ri(u,u.return)),Cn){if(s.flags&32){r=s.stateNode;try{P0(r)}catch(Mt){Ie(s,s.return,Mt)}}d&4&&s.stateNode!=null&&(r=s.memoizedProps,Vg(s,r,u!==null?u.memoizedProps:r)),d&1024&&(Ad=!0)}break;case 6:if(jn(r,s),oi(s),d&4&&Cn){if(s.stateNode===null)throw Error(i(162));d=s.memoizedProps,u=u!==null?u.memoizedProps:d,r=s.stateNode;try{SM(r,u,d)}catch(Mt){Ie(s,s.return,Mt)}}break;case 3:if(Mi?(nb(),_=Oi,Oi=fd(r.containerInfo),jn(r,s),Oi=_):jn(r,s),oi(s),d&4){if(Cn&&Si&&u!==null&&u.memoizedState.isDehydrated)try{ZM(r.containerInfo)}catch(Mt){Ie(s,s.return,Mt)}if(ks){d=r.containerInfo,u=r.pendingChildren;try{B0(d,u)}catch(Mt){Ie(s,s.return,Mt)}}}Ad&&(Ad=!1,Zg(s));break;case 4:Mi?(u=Oi,Oi=fd(s.stateNode.containerInfo),jn(r,s),oi(s),Oi=u):(jn(r,s),oi(s)),d&4&&ks&&kg(s.stateNode,s,s.stateNode.pendingChildren);break;case 12:jn(r,s),oi(s);break;case 13:jn(r,s),oi(s),s.child.flags&8192&&s.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Dd=Pi()),d&4&&(d=s.updateQueue,d!==null&&(s.updateQueue=null,zf(s,d)));break;case 22:d&512&&(tn||u===null||ri(u,u.return)),_=s.memoizedState!==null;var N=u!==null&&u.memoizedState!==null,H=gs,Z=tn;if(gs=H||_,tn=Z||N,jn(r,s),tn=Z,gs=H,oi(s),r=s.stateNode,r._current=s,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=_?r._visibility&-2:r._visibility|1,_&&(r=gs||tn,u===null||N||r||vr(s)),Cn&&(s.memoizedProps===null||s.memoizedProps.mode!=="manual"))){t:if(u=null,Cn)for(r=s;;){if(r.tag===5||Mi&&r.tag===26||wn&&r.tag===27){if(u===null){N=u=r;try{M=N.stateNode,_?wM(M):DM(N.stateNode,N.memoizedProps)}catch(Mt){Ie(N,N.return,Mt)}}}else if(r.tag===6){if(u===null){N=r;try{var ot=N.stateNode;_?RM(ot):UM(ot,N.memoizedProps)}catch(Mt){Ie(N,N.return,Mt)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===s)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===s)break t;for(;r.sibling===null;){if(r.return===null||r.return===s)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=s.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,zf(s,u))));break;case 19:jn(r,s),oi(s),d&4&&(d=s.updateQueue,d!==null&&(s.updateQueue=null,zf(s,d)));break;case 21:break;default:jn(r,s),oi(s)}}function oi(s){var r=s.flags;if(r&2){try{if(Cn&&(!wn||s.tag!==27)){t:{for(var u=s.return;u!==null;){if(Gg(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(wn){var _=d.stateNode,M=If(s);pc(s,M,_);break}case 5:var N=d.stateNode;d.flags&32&&(P0(N),d.flags&=-33);var H=If(s);pc(s,H,N);break;case 3:case 4:var Z=d.stateNode.containerInfo,ot=If(s);Of(s,ot,Z);break;default:throw Error(i(161))}}}catch(Mt){Ie(s,s.return,Mt)}s.flags&=-3}r&4096&&(s.flags&=-4097)}function Zg(s){if(s.subtreeFlags&1024)for(s=s.child;s!==null;){var r=s;Zg(r),r.tag===5&&r.flags&1024&&uM(r.stateNode),s=s.sibling}}function us(s,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)Wg(s,r.alternate,r),r=r.sibling}function vr(s){for(s=s.child;s!==null;){var r=s;switch(r.tag){case 0:case 11:case 14:case 15:Bs(4,r,r.return),vr(r);break;case 1:ri(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&Fg(r,r.return,u),vr(r);break;case 26:case 27:case 5:ri(r,r.return),vr(r);break;case 22:ri(r,r.return),r.memoizedState===null&&vr(r);break;default:vr(r)}s=s.sibling}}function zs(s,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,_=s,M=r,N=M.flags;switch(M.tag){case 0:case 11:case 15:zs(_,M,u),Fo(4,M);break;case 1:if(zs(_,M,u),d=M,_=d.stateNode,typeof _.componentDidMount=="function")try{_.componentDidMount()}catch(ot){Ie(d,d.return,ot)}if(d=M,_=d.updateQueue,_!==null){var H=d.stateNode;try{var Z=_.shared.hiddenCallbacks;if(Z!==null)for(_.shared.hiddenCallbacks=null,_=0;_<Z.length;_++)k(Z[_],H)}catch(ot){Ie(d,d.return,ot)}}u&&N&64&&zg(M),_a(M,M.return);break;case 26:case 27:case 5:zs(_,M,u),u&&d===null&&N&4&&Hg(M),_a(M,M.return);break;case 12:zs(_,M,u);break;case 13:zs(_,M,u),u&&N&4&&qg(_,M);break;case 22:M.memoizedState===null&&zs(_,M,u),_a(M,M.return);break;default:zs(_,M,u)}r=r.sibling}}function Ff(s,r){var u=null;s!==null&&s.memoizedState!==null&&s.memoizedState.cachePool!==null&&(u=s.memoizedState.cachePool.pool),s=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(s=r.memoizedState.cachePool.pool),s!==u&&(s!=null&&s.refCount++,u!=null&&Bo(u))}function Hf(s,r){s=null,r.alternate!==null&&(s=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==s&&(r.refCount++,s!=null&&Bo(s))}function Fs(s,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)Kg(s,r,u,d),r=r.sibling}function Kg(s,r,u,d){var _=r.flags;switch(r.tag){case 0:case 11:case 15:Fs(s,r,u,d),_&2048&&Fo(9,r);break;case 3:Fs(s,r,u,d),_&2048&&(s=null,r.alternate!==null&&(s=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==s&&(r.refCount++,s!=null&&Bo(s)));break;case 12:if(_&2048){Fs(s,r,u,d),s=r.stateNode;try{var M=r.memoizedProps,N=M.id,H=M.onPostCommit;typeof H=="function"&&H(N,r.alternate===null?"mount":"update",s.passiveEffectDuration,-0)}catch(Z){Ie(r,r.return,Z)}}else Fs(s,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?Fs(s,r,u,d):Ho(s,r):M._visibility&4?Fs(s,r,u,d):(M._visibility|=4,_r(s,r,u,d,(r.subtreeFlags&10256)!==0)),_&2048&&Ff(r.alternate,r);break;case 24:Fs(s,r,u,d),_&2048&&Hf(r.alternate,r);break;default:Fs(s,r,u,d)}}function _r(s,r,u,d,_){for(_=_&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=s,N=r,H=u,Z=d,ot=N.flags;switch(N.tag){case 0:case 11:case 15:_r(M,N,H,Z,_),Fo(8,N);break;case 23:break;case 22:var Mt=N.stateNode;N.memoizedState!==null?Mt._visibility&4?_r(M,N,H,Z,_):Ho(M,N):(Mt._visibility|=4,_r(M,N,H,Z,_)),_&&ot&2048&&Ff(N.alternate,N);break;case 24:_r(M,N,H,Z,_),_&&ot&2048&&Hf(N.alternate,N);break;default:_r(M,N,H,Z,_)}r=r.sibling}}function Ho(s,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=s,d=r,_=d.flags;switch(d.tag){case 22:Ho(u,d),_&2048&&Ff(d.alternate,d);break;case 24:Ho(u,d),_&2048&&Hf(d.alternate,d);break;default:Ho(u,d)}r=r.sibling}}function ya(s){if(s.subtreeFlags&zr)for(s=s.child;s!==null;)Jg(s),s=s.sibling}function Jg(s){switch(s.tag){case 26:ya(s),s.flags&zr&&(s.memoizedState!==null?sb(Oi,s.memoizedState,s.memoizedProps):L0(s.type,s.memoizedProps));break;case 5:ya(s),s.flags&zr&&L0(s.type,s.memoizedProps);break;case 3:case 4:if(Mi){var r=Oi;Oi=fd(s.stateNode.containerInfo),ya(s),Oi=r}else ya(s);break;case 22:s.memoizedState===null&&(r=s.alternate,r!==null&&r.memoizedState!==null?(r=zr,zr=16777216,ya(s),zr=r):ya(s));break;default:ya(s)}}function jg(s){var r=s.alternate;if(r!==null&&(s=r.child,s!==null)){r.child=null;do r=s.sibling,s.sibling=null,s=r;while(s!==null)}}function Vo(s){var r=s.deletions;if((s.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];gn=d,$g(d,s)}jg(s)}if(s.subtreeFlags&10256)for(s=s.child;s!==null;)Qg(s),s=s.sibling}function Qg(s){switch(s.tag){case 0:case 11:case 15:Vo(s),s.flags&2048&&Bs(9,s,s.return);break;case 3:Vo(s);break;case 12:Vo(s);break;case 22:var r=s.stateNode;s.memoizedState!==null&&r._visibility&4&&(s.return===null||s.return.tag!==13)?(r._visibility&=-5,mc(s)):Vo(s);break;default:Vo(s)}}function mc(s){var r=s.deletions;if((s.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];gn=d,$g(d,s)}jg(s)}for(s=s.child;s!==null;){switch(r=s,r.tag){case 0:case 11:case 15:Bs(8,r,r.return),mc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,mc(r));break;default:mc(r)}s=s.sibling}}function $g(s,r){for(;gn!==null;){var u=gn;switch(u.tag){case 0:case 11:case 15:Bs(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Bo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,gn=d;else t:for(u=s;gn!==null;){d=gn;var _=d.sibling,M=d.return;if(Xg(d),d===u){gn=null;break t}if(_!==null){_.return=M,gn=_;break t}gn=M}}}function Vf(s){var r=U0(s);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(s=dM(s),s===null)throw Error(i(362));return s.stateNode.current}function Gf(s,r){var u=s.tag;switch(r.$$typeof){case Pc:if(s.type===r.value)return!0;break;case Ic:t:{for(r=r.value,s=[s,0],u=0;u<s.length;){var d=s[u++],_=d.tag,M=s[u++],N=r[M];if(_!==5&&_!==26&&_!==27||!Wo(d)){for(;N!=null&&Gf(d,N);)M++,N=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)s.push(d,M),d=d.sibling}}r=!1}return r;case Oc:if((u===5||u===26||u===27)&&gM(s.stateNode,r.value))return!0;break;case zc:if((u===5||u===6||u===26||u===27)&&(s=mM(s),s!==null&&0<=s.indexOf(r.value)))return!0;break;case Bc:if((u===5||u===26||u===27)&&(s=s.memoizedProps["data-testname"],typeof s=="string"&&s.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function kf(s){switch(s.$$typeof){case Pc:return"<"+(l(s.value)||"Unknown")+">";case Ic:return":has("+(kf(s)||"")+")";case Oc:return'[role="'+s.value+'"]';case zc:return'"'+s.value+'"';case Bc:return'[data-testname="'+s.value+'"]';default:throw Error(i(365))}}function t0(s,r){var u=[];s=[s,0];for(var d=0;d<s.length;){var _=s[d++],M=_.tag,N=s[d++],H=r[N];if(M!==5&&M!==26&&M!==27||!Wo(_)){for(;H!=null&&Gf(_,H);)N++,H=r[N];if(N===r.length)u.push(_);else for(_=_.child;_!==null;)s.push(_,N),_=_.sibling}}return u}function Wf(s,r){if(!ko)throw Error(i(363));s=Vf(s),s=t0(s,r),r=[],s=Array.from(s);for(var u=0;u<s.length;){var d=s[u++],_=d.tag;if(_===5||_===26||_===27)Wo(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)s.push(d),d=d.sibling}return r}function li(){if((ze&2)!==0&&Te!==0)return Te&-Te;if(ae.T!==null){var s=Ur;return s!==0?s:kt()}return sM()}function e0(){Ci===0&&(Ci=(Te&536870912)===0||Ne?z():536870912);var s=Ai.current;return s!==null&&(s.flags|=32),Ci}function Fn(s,r,u){(s===Xe&&qe===2||s.cancelPendingCommit!==null)&&(yr(s,0),hs(s,Te,Ci,!1)),F(s,u),((ze&2)===0||s!==Xe)&&(s===Xe&&((ze&2)===0&&(Ua|=u),en===4&&hs(s,Te,Ci,!1)),Tt(s))}function n0(s,r,u){if((ze&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&s.expiredLanes)===0||U(s,r),_=d?PS(s,r):Zf(s,r,!0),M=d;do{if(_===0){Fr&&!d&&hs(s,r,0,!1);break}else if(_===6)hs(s,r,0,!vs);else{if(u=s.current.alternate,M&&!NS(u)){_=Zf(s,r,!1),M=!1;continue}if(_===2){if(M=r,s.errorRecoveryDisabledLanes&M)var N=0;else N=s.pendingLanes&-536870913,N=N!==0?N:N&536870912?536870912:0;if(N!==0){r=N;t:{var H=s;_=Qo;var Z=Si&&H.current.memoizedState.isDehydrated;if(Z&&(yr(H,N).flags|=256),N=Zf(H,N,!1),N!==2){if(Cd&&!Z){H.errorRecoveryDisabledLanes|=M,Ua|=M,_=4;break t}M=$i,$i=_,M!==null&&Xf(M)}_=N}if(M=!1,_!==2)continue}}if(_===1){yr(s,0),hs(s,r,0,!0);break}t:{switch(d=s,_){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){hs(d,r,Ci,!vs);break t}break;case 2:$i=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=Dd+300-Pi(),10<M)){if(hs(d,r,Ci,!vs),L(d,0)!==0)break t;d.timeoutHandle=eM(i0.bind(null,d,u,$i,Fc,Rd,r,Ci,Ua,Hr,vs,2,-0,0),M);break t}i0(d,u,$i,Fc,Rd,r,Ci,Ua,Hr,vs,0,-0,0)}}break}while(!0);Tt(s)}function Xf(s){$i===null?$i=s:$i.push.apply($i,s)}function i0(s,r,u,d,_,M,N,H,Z,ot,Mt,Lt,It){var ue=r.subtreeFlags;if((ue&8192||(ue&16785408)===16785408)&&(lM(),Jg(r),r=cM(),r!==null)){s.cancelPendingCommit=r(f0.bind(null,s,u,d,_,N,H,Z,1,Lt,It)),hs(s,M,N,!ot);return}f0(s,u,d,_,N,H,Z,Mt,Lt,It)}function NS(s){for(var r=s;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var _=u[d],M=_.getSnapshot;_=_.value;try{if(!fi(M(),_))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===s)break;for(;r.sibling===null;){if(r.return===null||r.return===s)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function hs(s,r,u,d){r&=~wd,r&=~Ua,s.suspendedLanes|=r,s.pingedLanes&=~r,d&&(s.warmLanes|=r),d=s.expirationTimes;for(var _=r;0<_;){var M=31-ui(_),N=1<<M;d[M]=-1,_&=~N}u!==0&&W(s,u,r)}function s0(){return(ze&6)===0?(P(0),!1):!0}function qf(){if(ye!==null){if(qe===0)var s=ye.return;else s=ye,ms=Ra=null,Lo(s),Pr=null,Ko=0,s=ye;for(;s!==null;)Bg(s.alternate,s),s=s.return;ye=null}}function yr(s,r){s.finishedWork=null,s.finishedLanes=0;var u=s.timeoutHandle;u!==cd&&(s.timeoutHandle=cd,nM(u)),u=s.cancelPendingCommit,u!==null&&(s.cancelPendingCommit=null,u()),qf(),Xe=s,ye=u=Hs(s.current,null),Te=r,qe=0,pi=null,vs=!1,Fr=U(s,r),Cd=!1,Hr=Ci=wd=Ua=Zs=en=0,$i=Qo=null,Rd=!1,(r&8)!==0&&(r|=r&32);var d=s.entangledLanes;if(d!==0)for(s=s.entanglements,d&=r;0<d;){var _=31-ui(d),M=1<<_;r|=s[_],d&=~M}return _s=r,O(),u}function a0(s,r){pe=null,ae.H=Qi,r===Zo?(r=re(),qe=3):r===Md?(r=re(),qe=4):qe=r===nv?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,pi=r,ye===null&&(en=1,cc(s,ct(r,s.current)))}function r0(){var s=Ai.current;return s===null?!0:(Te&4194176)===Te?ji===null:(Te&62914560)===Te||(Te&536870912)!==0?s===ji:!1}function o0(){var s=ae.H;return ae.H=Qi,s===null?Qi:s}function l0(){var s=ae.A;return ae.A=Sb,s}function Yf(){en=4,vs||(Te&4194176)!==Te&&Ai.current!==null||(Fr=!0),(Zs&134217727)===0&&(Ua&134217727)===0||Xe===null||hs(Xe,Te,Ci,!1)}function Zf(s,r,u){var d=ze;ze|=2;var _=o0(),M=l0();(Xe!==s||Te!==r)&&(Fc=null,yr(s,r)),r=!1;var N=en;t:do try{if(qe!==0&&ye!==null){var H=ye,Z=pi;switch(qe){case 8:qf(),N=6;break t;case 3:case 2:case 6:Ai.current===null&&(r=!0);var ot=qe;if(qe=0,pi=null,xr(s,H,Z,ot),u&&Fr){N=0;break t}break;default:ot=qe,qe=0,pi=null,xr(s,H,Z,ot)}}LS(),N=en;break}catch(Mt){a0(s,Mt)}while(!0);return r&&s.shellSuspendCounter++,ms=Ra=null,ze=d,ae.H=_,ae.A=M,ye===null&&(Xe=null,Te=0,O()),N}function LS(){for(;ye!==null;)c0(ye)}function PS(s,r){var u=ze;ze|=2;var d=o0(),_=l0();Xe!==s||Te!==r?(Fc=null,$o=Pi()+500,yr(s,r)):Fr=U(s,r);t:do try{if(qe!==0&&ye!==null){r=ye;var M=pi;e:switch(qe){case 1:qe=0,pi=null,xr(s,r,M,1);break;case 2:if(ut(M)){qe=0,pi=null,u0(r);break}r=function(){qe===2&&Xe===s&&(qe=7),Tt(s)},M.then(r,r);break t;case 3:qe=7;break t;case 4:qe=5;break t;case 7:ut(M)?(qe=0,pi=null,u0(r)):(qe=0,pi=null,xr(s,r,M,7));break;case 5:var N=null;switch(ye.tag){case 26:N=ye.memoizedState;case 5:case 27:var H=ye,Z=H.type,ot=H.pendingProps;if(N?K0(N):N0(Z,ot)){qe=0,pi=null;var Mt=H.sibling;if(Mt!==null)ye=Mt;else{var Lt=H.return;Lt!==null?(ye=Lt,gc(Lt)):ye=null}break e}}qe=0,pi=null,xr(s,r,M,5);break;case 6:qe=0,pi=null,xr(s,r,M,6);break;case 8:qf(),en=6;break t;default:throw Error(i(462))}}IS();break}catch(It){a0(s,It)}while(!0);return ms=Ra=null,ae.H=d,ae.A=_,ze=u,ye!==null?0:(Xe=null,Te=0,O(),en)}function IS(){for(;ye!==null&&!ub();)c0(ye)}function c0(s){var r=Dg(s.alternate,s,_s);s.memoizedProps=s.pendingProps,r===null?gc(s):ye=r}function u0(s){var r=s,u=r.alternate;switch(r.tag){case 15:case 0:r=Eg(u,r,r.pendingProps,r.type,void 0,Te);break;case 11:r=Eg(u,r,r.pendingProps,r.type.render,r.ref,Te);break;case 5:Lo(r);default:Bg(u,r),r=ye=g0(r,_s),r=Dg(u,r,_s)}s.memoizedProps=s.pendingProps,r===null?gc(s):ye=r}function xr(s,r,u,d){ms=Ra=null,Lo(r),Pr=null,Ko=0;var _=r.return;try{if(AS(s,_,r,u,Te)){en=1,cc(s,ct(u,s.current)),ye=null;return}}catch(M){if(_!==null)throw ye=_,M;en=1,cc(s,ct(u,s.current)),ye=null;return}r.flags&32768?(Ne||d===1?s=!0:Fr||(Te&536870912)!==0?s=!1:(vs=s=!0,(d===2||d===3||d===6)&&(d=Ai.current,d!==null&&d.tag===13&&(d.flags|=16384))),h0(r,s)):gc(r)}function gc(s){var r=s;do{if((r.flags&32768)!==0){h0(r,vs);return}s=r.return;var u=wS(r.alternate,r,_s);if(u!==null){ye=u;return}if(r=r.sibling,r!==null){ye=r;return}ye=r=s}while(r!==null);en===0&&(en=5)}function h0(s,r){do{var u=RS(s.alternate,s);if(u!==null){u.flags&=32767,ye=u;return}if(u=s.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(s=s.sibling,s!==null)){ye=s;return}ye=s=u}while(s!==null);en=6,ye=null}function f0(s,r,u,d,_,M,N,H,Z,ot){var Mt=ae.T,Lt=Ma();try{Qn(2),ae.T=null,OS(s,r,u,d,Lt,_,M,N,H,Z,ot)}finally{ae.T=Mt,Qn(Lt)}}function OS(s,r,u,d,_,M,N,H){do xa();while(Na!==null);if((ze&6)!==0)throw Error(i(327));var Z=s.finishedWork;if(d=s.finishedLanes,Z===null)return null;if(s.finishedWork=null,s.finishedLanes=0,Z===s.current)throw Error(i(177));s.callbackNode=null,s.callbackPriority=0,s.cancelPendingCommit=null;var ot=Z.lanes|Z.childLanes;if(ot|=vd,$(s,d,ot,M,N,H),s===Xe&&(ye=Xe=null,Te=0),(Z.subtreeFlags&10256)===0&&(Z.flags&10256)===0||Hc||(Hc=!0,Ud=ot,Nd=u,HS(md,function(){return xa(),null})),u=(Z.flags&15990)!==0,(Z.subtreeFlags&15990)!==0||u?(u=ae.T,ae.T=null,M=Ma(),Qn(2),N=ze,ze|=4,DS(s,Z),Yg(Z,s),$S(s.containerInfo),s.current=Z,Wg(s,Z.alternate,Z),hb(),ze=N,Qn(M),ae.T=u):s.current=Z,Hc?(Hc=!1,Na=s,tl=d):d0(s,ot),ot=s.pendingLanes,ot===0&&(Ks=null),V(Z.stateNode),Tt(s),r!==null)for(_=s.onRecoverableError,Z=0;Z<r.length;Z++)ot=r[Z],_(ot.value,{componentStack:ot.stack});return(tl&3)!==0&&xa(),ot=s.pendingLanes,(d&4194218)!==0&&(ot&42)!==0?s===Ld?el++:(el=0,Ld=s):el=0,P(0),null}function d0(s,r){(s.pooledCacheLanes&=r)===0&&(r=s.pooledCache,r!=null&&(s.pooledCache=null,Bo(r)))}function xa(){if(Na!==null){var s=Na,r=Ud;Ud=0;var u=at(tl),d=32>u?32:u;u=ae.T;var _=Ma();try{if(Qn(d),ae.T=null,Na===null)var M=!1;else{d=Nd,Nd=null;var N=Na,H=tl;if(Na=null,tl=0,(ze&6)!==0)throw Error(i(331));var Z=ze;if(ze|=4,Qg(N.current),Kg(N,N.current,H,d),ze=Z,P(0,!1),hi&&typeof hi.onPostCommitFiberRoot=="function")try{hi.onPostCommitFiberRoot(Xo,N)}catch{}M=!0}return M}finally{Qn(_),ae.T=u,d0(s,r)}}return!1}function p0(s,r,u){r=ct(u,r),r=yf(s.stateNode,r,2),s=jt(s,r,2),s!==null&&(F(s,2),Tt(s))}function Ie(s,r,u){if(s.tag===3)p0(s,s,u);else for(;r!==null;){if(r.tag===3){p0(r,s,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(Ks===null||!Ks.has(d))){s=ct(u,s),u=vg(2),d=jt(r,u,2),d!==null&&(_g(u,d,r,s),F(d,2),Tt(d));break}}r=r.return}}function Kf(s,r,u){var d=s.pingCache;if(d===null){d=s.pingCache=new Mb;var _=new Set;d.set(r,_)}else _=d.get(r),_===void 0&&(_=new Set,d.set(r,_));_.has(u)||(Cd=!0,_.add(u),s=BS.bind(null,s,r,u),r.then(s,s))}function BS(s,r,u){var d=s.pingCache;d!==null&&d.delete(r),s.pingedLanes|=s.suspendedLanes&u,s.warmLanes&=~u,Xe===s&&(Te&u)===u&&(en===4||en===3&&(Te&62914560)===Te&&300>Pi()-Dd?(ze&2)===0&&yr(s,0):wd|=u,Hr===Te&&(Hr=0)),Tt(s)}function m0(s,r){r===0&&(r=w()),s=Dt(s,r),s!==null&&(F(s,r),Tt(s))}function zS(s){var r=s.memoizedState,u=0;r!==null&&(u=r.retryLane),m0(s,u)}function FS(s,r){var u=0;switch(s.tag){case 13:var d=s.stateNode,_=s.memoizedState;_!==null&&(u=_.retryLane);break;case 19:d=s.stateNode;break;case 22:d=s.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),m0(s,u)}function HS(s,r){return bc(s,r)}function VS(s,r,u,d){this.tag=s,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Jf(s){return s=s.prototype,!(!s||!s.isReactComponent)}function Hs(s,r){var u=s.alternate;return u===null?(u=e(s.tag,r,s.key,s.mode),u.elementType=s.elementType,u.type=s.type,u.stateNode=s.stateNode,u.alternate=s,s.alternate=u):(u.pendingProps=r,u.type=s.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=s.flags&31457280,u.childLanes=s.childLanes,u.lanes=s.lanes,u.child=s.child,u.memoizedProps=s.memoizedProps,u.memoizedState=s.memoizedState,u.updateQueue=s.updateQueue,r=s.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=s.sibling,u.index=s.index,u.ref=s.ref,u.refCleanup=s.refCleanup,u}function g0(s,r){s.flags&=31457282;var u=s.alternate;return u===null?(s.childLanes=0,s.lanes=r,s.child=null,s.subtreeFlags=0,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=u.childLanes,s.lanes=u.lanes,s.child=u.child,s.subtreeFlags=0,s.deletions=null,s.memoizedProps=u.memoizedProps,s.memoizedState=u.memoizedState,s.updateQueue=u.updateQueue,s.type=u.type,r=u.dependencies,s.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),s}function vc(s,r,u,d,_,M){var N=0;if(d=s,typeof s=="function")Jf(s)&&(N=1);else if(typeof s=="string")N=Mi&&wn?k0(s,u,bn.current)?26:j0(s)?27:5:Mi?k0(s,u,bn.current)?26:5:wn&&j0(s)?27:5;else t:switch(s){case Mr:return Sa(u.children,_,M,r);case b0:N=8,_|=24;break;case ed:return s=e(12,u,r,_|2),s.elementType=ed,s.lanes=M,s;case id:return s=e(13,u,r,_),s.elementType=id,s.lanes=M,s;case sd:return s=e(19,u,r,_),s.elementType=sd,s.lanes=M,s;case T0:return v0(u,_,M,r);default:if(typeof s=="object"&&s!==null)switch(s.$$typeof){case XS:case Vs:N=10;break t;case E0:N=9;break t;case nd:N=11;break t;case ad:N=14;break t;case Gs:N=16,d=null;break t}N=29,u=Error(i(130,s===null?"null":typeof s,"")),d=null}return r=e(N,u,r,_),r.elementType=s,r.type=d,r.lanes=M,r}function Sa(s,r,u,d){return s=e(7,s,d,r),s.lanes=u,s}function v0(s,r,u,d){s=e(22,s,d,r),s.elementType=T0,s.lanes=u;var _={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)===0){var N=Dt(M,2);N!==null&&(_._pendingVisibility|=2,Fn(N,M,2))}},attach:function(){var M=_._current;if(M===null)throw Error(i(456));if((_._pendingVisibility&2)!==0){var N=Dt(M,2);N!==null&&(_._pendingVisibility&=-3,Fn(N,M,2))}}};return s.stateNode=_,s}function jf(s,r,u){return s=e(6,s,null,r),s.lanes=u,s}function Qf(s,r,u){return r=e(4,s.children!==null?s.children:[],s.key,r),r.lanes=u,r.stateNode={containerInfo:s.containerInfo,pendingChildren:null,implementation:s.implementation},r}function GS(s,r,u,d,_,M,N,H){this.tag=1,this.containerInfo=s,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=cd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=C(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=C(0),this.hiddenUpdates=C(null),this.identifierPrefix=d,this.onUncaughtError=_,this.onCaughtError=M,this.onRecoverableError=N,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=H,this.incompleteTransitions=new Map}function _0(s,r,u,d,_,M,N,H,Z,ot,Mt,Lt){return s=new GS(s,r,u,N,H,Z,ot,Lt),r=1,M===!0&&(r|=24),M=e(3,null,null,r),s.current=M,M.stateNode=s,r=Df(),r.refCount++,s.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},yt(M),s}function y0(s){return s?(s=Tr,s):Tr}function x0(s){var r=s._reactInternals;if(r===void 0)throw typeof s.render=="function"?Error(i(188)):(s=Object.keys(s).join(","),Error(i(268,s)));return s=v(r),s=s!==null?x(s):null,s===null?null:Go(s.stateNode)}function S0(s,r,u,d,_,M){_=y0(_),d.context===null?d.context=_:d.pendingContext=_,d=Zt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=jt(s,d,r),u!==null&&(Fn(u,s,r),Ft(u,s,r))}function M0(s,r){if(s=s.memoizedState,s!==null&&s.dehydrated!==null){var u=s.retryLane;s.retryLane=u!==0&&u<r?u:r}}function $f(s,r){M0(s,r),(s=s.alternate)&&M0(s,r)}var _e={},kS=sm(),ci=oS(),td=Object.assign,WS=Symbol.for("react.element"),_c=Symbol.for("react.transitional.element"),Sr=Symbol.for("react.portal"),Mr=Symbol.for("react.fragment"),b0=Symbol.for("react.strict_mode"),ed=Symbol.for("react.profiler"),XS=Symbol.for("react.provider"),E0=Symbol.for("react.consumer"),Vs=Symbol.for("react.context"),nd=Symbol.for("react.forward_ref"),id=Symbol.for("react.suspense"),sd=Symbol.for("react.suspense_list"),ad=Symbol.for("react.memo"),Gs=Symbol.for("react.lazy"),T0=Symbol.for("react.offscreen"),qS=Symbol.for("react.memo_cache_sentinel"),A0=Symbol.iterator,YS=Symbol.for("react.client.reference"),ae=kS.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,rd,C0,od=!1,yc=Array.isArray,ZS=t.rendererVersion,KS=t.rendererPackageName,w0=t.extraDevToolsConfig,Go=t.getPublicInstance,JS=t.getRootHostContext,jS=t.getChildHostContext,QS=t.prepareForCommit,$S=t.resetAfterCommit,tM=t.createInstance,ld=t.appendInitialChild,R0=t.finalizeInitialChildren,xc=t.shouldSetTextContent,D0=t.createTextInstance,eM=t.scheduleTimeout,nM=t.cancelTimeout,cd=t.noTimeout,fs=t.isPrimaryRenderer;t.warnsIfNotActing;var Cn=t.supportsMutation,ks=t.supportsPersistence,Si=t.supportsHydration,U0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var iM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var Qn=t.setCurrentUpdatePriority,Ma=t.getCurrentUpdatePriority,sM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var aM=t.shouldAttemptEagerTransition,rM=t.detachDeletedInstance;t.requestPostPaintCallback;var oM=t.maySuspendCommit,N0=t.preloadInstance,lM=t.startSuspendingCommit,L0=t.suspendInstance,cM=t.waitForCommitToBeReady,br=t.NotPendingTransition,ba=t.HostTransitionContext,uM=t.resetFormInstance;t.bindToConsole;var hM=t.supportsMicrotasks,fM=t.scheduleMicrotask,ko=t.supportsTestSelectors,dM=t.findFiberRoot,pM=t.getBoundingRect,mM=t.getTextContent,Wo=t.isHiddenSubtree,gM=t.matchAccessibilityRole,vM=t.setFocusIfFocusable,_M=t.setupIntersectionObserver,yM=t.appendChild,xM=t.appendChildToContainer,SM=t.commitTextUpdate,MM=t.commitMount,bM=t.commitUpdate,EM=t.insertBefore,TM=t.insertInContainerBefore,AM=t.removeChild,CM=t.removeChildFromContainer,P0=t.resetTextContent,wM=t.hideInstance,RM=t.hideTextInstance,DM=t.unhideInstance,UM=t.unhideTextInstance,NM=t.clearContainer,LM=t.cloneInstance,I0=t.createContainerChildSet,O0=t.appendChildToContainerChildSet,PM=t.finalizeContainerChildren,B0=t.replaceContainerChildren,z0=t.cloneHiddenInstance,F0=t.cloneHiddenTextInstance,ud=t.isSuspenseInstancePending,hd=t.isSuspenseInstanceFallback,IM=t.getSuspenseInstanceFallbackErrorDetails,OM=t.registerSuspenseInstanceRetry,BM=t.canHydrateFormStateMarker,zM=t.isFormStateMarkerMatching,H0=t.getNextHydratableSibling,V0=t.getFirstHydratableChild,FM=t.getFirstHydratableChildWithinContainer,HM=t.getFirstHydratableChildWithinSuspenseInstance,VM=t.canHydrateInstance,GM=t.canHydrateTextInstance,kM=t.canHydrateSuspenseInstance,WM=t.hydrateInstance,XM=t.hydrateTextInstance,qM=t.hydrateSuspenseInstance,YM=t.getNextHydratableInstanceAfterSuspenseInstance,ZM=t.commitHydratedContainer,KM=t.commitHydratedSuspenseInstance,JM=t.clearSuspenseBoundary,jM=t.clearSuspenseBoundaryFromContainer,G0=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var QM=t.validateHydratableInstance,$M=t.validateHydratableTextInstance,Mi=t.supportsResources,k0=t.isHostHoistableType,fd=t.getHoistableRoot,W0=t.getResource,X0=t.acquireResource,q0=t.releaseResource,tb=t.hydrateHoistable,Y0=t.mountHoistable,Z0=t.unmountHoistable,eb=t.createHoistableInstance,nb=t.prepareToCommitHoistables,ib=t.mayResourceSuspendCommit,K0=t.preloadResource,sb=t.suspendResource,wn=t.supportsSingletons,J0=t.resolveSingletonInstance,ab=t.clearSingleton,rb=t.acquireSingletonInstance,ob=t.releaseSingletonInstance,j0=t.isHostSingletonType,dd=[],Er=-1,Tr={},ui=Math.clz32?Math.clz32:A,lb=Math.log,cb=Math.LN2,Sc=128,Mc=4194304,bc=ci.unstable_scheduleCallback,pd=ci.unstable_cancelCallback,ub=ci.unstable_shouldYield,hb=ci.unstable_requestPaint,Pi=ci.unstable_now,Q0=ci.unstable_ImmediatePriority,fb=ci.unstable_UserBlockingPriority,md=ci.unstable_NormalPriority,db=ci.unstable_IdlePriority,pb=ci.log,mb=ci.unstable_setDisableYieldValue,Xo=null,hi=null,fi=typeof Object.is=="function"?Object.is:Y,$0=new WeakMap,Ar=[],Cr=0,Ec=null,Tc=0,bi=[],Ei=0,Ea=null,ds=1,ps="",bn=S(null),qo=S(null),Ws=S(null),Ac=S(null),Hn=null,Rn=null,Ne=!1,Ii=null,Ji=!1,gd=Error(i(519)),Ti=[],wr=0,vd=0,Cc=null,Rr=null,_d=!1,wc=!1,yd=!1,Dr=0,Yo=null,xd=0,Ur=0,Nr=null,Xs=!1,Sd=!1,gb=Object.prototype.hasOwnProperty,Zo=Error(i(460)),Md=Error(i(474)),Rc={then:function(){}},Lr=null,Pr=null,Ko=0,Ta=yi(!0),tv=yi(!1),Ir=S(null),Dc=S(0),Ai=S(null),ji=null,hn=S(0),qs=0,pe=null,Be=null,on=null,Uc=!1,Or=!1,Aa=!1,Nc=0,Jo=0,Br=null,vb=0,bd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},Qi={readContext:An,use:tt,useCallback:ke,useContext:ke,useEffect:ke,useImperativeHandle:ke,useLayoutEffect:ke,useInsertionEffect:ke,useMemo:ke,useReducer:ke,useRef:ke,useState:ke,useDebugValue:ke,useDeferredValue:ke,useTransition:ke,useSyncExternalStore:ke,useId:ke};Qi.useCacheRefresh=ke,Qi.useMemoCache=ke,Qi.useHostTransitionStatus=ke,Qi.useFormState=ke,Qi.useActionState=ke,Qi.useOptimistic=ke;var Ca={readContext:An,use:tt,useCallback:function(s,r){return D().memoizedState=[s,r===void 0?null:r],s},useContext:An,useEffect:$m,useImperativeHandle:function(s,r,u){u=u!=null?u.concat([s]):null,rc(4194308,4,ng.bind(null,r,s),u)},useLayoutEffect:function(s,r){return rc(4194308,4,s,r)},useInsertionEffect:function(s,r){rc(4,2,s,r)},useMemo:function(s,r){var u=D();r=r===void 0?null:r;var d=s();if(Aa){it(!0);try{s()}finally{it(!1)}}return u.memoizedState=[d,r],d},useReducer:function(s,r,u){var d=D();if(u!==void 0){var _=u(r);if(Aa){it(!0);try{u(r)}finally{it(!1)}}}else _=r;return d.memoizedState=d.baseState=_,s={pending:null,lanes:0,dispatch:null,lastRenderedReducer:s,lastRenderedState:_},d.queue=s,s=s.dispatch=TS.bind(null,pe,s),[d.memoizedState,s]},useRef:function(s){var r=D();return s={current:s},r.memoizedState=s},useState:function(s){s=We(s);var r=s.queue,u=hg.bind(null,pe,r);return r.dispatch=u,[s.memoizedState,u]},useDebugValue:pf,useDeferredValue:function(s,r){var u=D();return mf(u,s,r)},useTransition:function(){var s=We(!1);return s=og.bind(null,pe,s.queue,!0,!1),D().memoizedState=s,[!1,s]},useSyncExternalStore:function(s,r,u){var d=pe,_=D();if(Ne){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),Xe===null)throw Error(i(349));(Te&60)!==0||ne(d,r,u)}_.memoizedState=u;var M={value:u,getSnapshot:r};return _.queue=M,$m(Se.bind(null,d,M,s),[s]),d.flags|=2048,Zi(9,Kt.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var s=D(),r=Xe.identifierPrefix;if(Ne){var u=ps,d=ds;u=(d&~(1<<32-ui(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Nc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=vb++,r=":"+r+"r"+u.toString(32)+":";return s.memoizedState=r},useCacheRefresh:function(){return D().memoizedState=ES.bind(null,pe)}};Ca.useMemoCache=X,Ca.useHostTransitionStatus=gf,Ca.useFormState=Ge,Ca.useActionState=Ge,Ca.useOptimistic=function(s){var r=D();r.memoizedState=r.baseState=s;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=vf.bind(null,pe,!0,u),u.dispatch=r,[s,r]};var Ys={readContext:An,use:tt,useCallback:sg,useContext:An,useEffect:df,useImperativeHandle:ig,useInsertionEffect:tg,useLayoutEffect:eg,useMemo:ag,useReducer:At,useRef:Ki,useState:function(){return At(pt)},useDebugValue:pf,useDeferredValue:function(s,r){var u=G();return rg(u,Be.memoizedState,s,r)},useTransition:function(){var s=At(pt)[0],r=G().memoizedState;return[typeof s=="boolean"?s:Q(s),r]},useSyncExternalStore:te,useId:cg};Ys.useCacheRefresh=ug,Ys.useMemoCache=X,Ys.useHostTransitionStatus=gf,Ys.useFormState=Bn,Ys.useActionState=Bn,Ys.useOptimistic=function(s,r){var u=G();return Me(u,Be,s,r)};var wa={readContext:An,use:tt,useCallback:sg,useContext:An,useEffect:df,useImperativeHandle:ig,useInsertionEffect:tg,useLayoutEffect:eg,useMemo:ag,useReducer:Gt,useRef:Ki,useState:function(){return Gt(pt)},useDebugValue:pf,useDeferredValue:function(s,r){var u=G();return Be===null?mf(u,s,r):rg(u,Be.memoizedState,s,r)},useTransition:function(){var s=Gt(pt)[0],r=G().memoizedState;return[typeof s=="boolean"?s:Q(s),r]},useSyncExternalStore:te,useId:cg};wa.useCacheRefresh=ug,wa.useMemoCache=X,wa.useHostTransitionStatus=gf,wa.useFormState=Sn,wa.useActionState=Sn,wa.useOptimistic=function(s,r){var u=G();return Be!==null?Me(u,Be,s,r):(u.baseState=s,[s,u.queue.dispatch])};var Ed={isMounted:function(s){return(s=s._reactInternals)?m(s)===s:!1},enqueueSetState:function(s,r,u){s=s._reactInternals;var d=li(),_=Zt(d);_.payload=r,u!=null&&(_.callback=u),r=jt(s,_,d),r!==null&&(Fn(r,s,d),Ft(r,s,d))},enqueueReplaceState:function(s,r,u){s=s._reactInternals;var d=li(),_=Zt(d);_.tag=1,_.payload=r,u!=null&&(_.callback=u),r=jt(s,_,d),r!==null&&(Fn(r,s,d),Ft(r,s,d))},enqueueForceUpdate:function(s,r){s=s._reactInternals;var u=li(),d=Zt(u);d.tag=2,r!=null&&(d.callback=r),r=jt(s,d,u),r!==null&&(Fn(r,s,u),Ft(r,s,u))}},ev=typeof reportError=="function"?reportError:function(s){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof s=="object"&&s!==null&&typeof s.message=="string"?String(s.message):String(s),error:s});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",s);return}console.error(s)},nv=Error(i(461)),mn=!1,Td={dehydrated:null,treeContext:null,retryLane:0},Lc=S(null),Ra=null,ms=null,_b=typeof AbortController<"u"?AbortController:function(){var s=[],r=this.signal={aborted:!1,addEventListener:function(u,d){s.push(d)}};this.abort=function(){r.aborted=!0,s.forEach(function(u){return u()})}},yb=ci.unstable_scheduleCallback,xb=ci.unstable_NormalPriority,$e={$$typeof:Vs,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},iv=ae.S;ae.S=function(s,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&wt(s,r),iv!==null&&iv(s,r)};var Da=S(null),gs=!1,tn=!1,Ad=!1,sv=typeof WeakSet=="function"?WeakSet:Set,gn=null,av=!1,ln=null,di=!1,Oi=null,zr=8192,Sb={getCacheForType:function(s){var r=An($e),u=r.data.get(s);return u===void 0&&(u=s(),r.data.set(s,u)),u}},Pc=0,Ic=1,Oc=2,Bc=3,zc=4;if(typeof Symbol=="function"&&Symbol.for){var jo=Symbol.for;Pc=jo("selector.component"),Ic=jo("selector.has_pseudo_class"),Oc=jo("selector.role"),Bc=jo("selector.test_id"),zc=jo("selector.text")}var Mb=typeof WeakMap=="function"?WeakMap:Map,ze=0,Xe=null,ye=null,Te=0,qe=0,pi=null,vs=!1,Fr=!1,Cd=!1,_s=0,en=0,Zs=0,Ua=0,wd=0,Ci=0,Hr=0,Qo=null,$i=null,Rd=!1,Dd=0,$o=1/0,Fc=null,Ks=null,Hc=!1,Na=null,tl=0,Ud=0,Nd=null,el=0,Ld=null;return _e.attemptContinuousHydration=function(s){if(s.tag===13){var r=Dt(s,67108864);r!==null&&Fn(r,s,67108864),$f(s,67108864)}},_e.attemptHydrationAtCurrentPriority=function(s){if(s.tag===13){var r=li(),u=Dt(s,r);u!==null&&Fn(u,s,r),$f(s,r)}},_e.attemptSynchronousHydration=function(s){switch(s.tag){case 3:if(s=s.stateNode,s.current.memoizedState.isDehydrated){var r=T(s.pendingLanes);if(r!==0){for(s.pendingLanes|=2,s.entangledLanes|=2;r;){var u=1<<31-ui(r);s.entanglements[1]|=u,r&=~u}Tt(s),(ze&6)===0&&($o=Pi()+500,P(0))}}break;case 13:r=Dt(s,2),r!==null&&Fn(r,s,2),s0(),$f(s,2)}},_e.batchedUpdates=function(s,r){return s(r)},_e.createComponentSelector=function(s){return{$$typeof:Pc,value:s}},_e.createContainer=function(s,r,u,d,_,M,N,H,Z,ot){return _0(s,r,!1,null,u,d,M,N,H,Z,ot,null)},_e.createHasPseudoClassSelector=function(s){return{$$typeof:Ic,value:s}},_e.createHydrationContainer=function(s,r,u,d,_,M,N,H,Z,ot,Mt,Lt,It){return s=_0(u,d,!0,s,_,M,H,Z,ot,Mt,Lt,It),s.context=y0(null),u=s.current,d=li(),_=Zt(d),_.callback=r??null,jt(u,_,d),s.current.lanes=d,F(s,d),Tt(s),s},_e.createPortal=function(s,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Sr,key:d==null?null:""+d,children:s,containerInfo:r,implementation:u}},_e.createRoleSelector=function(s){return{$$typeof:Oc,value:s}},_e.createTestNameSelector=function(s){return{$$typeof:Bc,value:s}},_e.createTextSelector=function(s){return{$$typeof:zc,value:s}},_e.defaultOnCaughtError=function(s){console.error(s)},_e.defaultOnRecoverableError=function(s){ev(s)},_e.defaultOnUncaughtError=function(s){ev(s)},_e.deferredUpdates=function(s){var r=ae.T,u=Ma();try{return Qn(32),ae.T=null,s()}finally{Qn(u),ae.T=r}},_e.discreteUpdates=function(s,r,u,d,_){var M=ae.T,N=Ma();try{return Qn(2),ae.T=null,s(r,u,d,_)}finally{Qn(N),ae.T=M,ze===0&&($o=Pi()+500)}},_e.findAllNodes=Wf,_e.findBoundingRects=function(s,r){if(!ko)throw Error(i(363));r=Wf(s,r),s=[];for(var u=0;u<r.length;u++)s.push(pM(r[u]));for(r=s.length-1;0<r;r--){u=s[r];for(var d=u.x,_=d+u.width,M=u.y,N=M+u.height,H=r-1;0<=H;H--)if(r!==H){var Z=s[H],ot=Z.x,Mt=ot+Z.width,Lt=Z.y,It=Lt+Z.height;if(d>=ot&&M>=Lt&&_<=Mt&&N<=It){s.splice(r,1);break}else if(d!==ot||u.width!==Z.width||It<M||Lt>N){if(!(M!==Lt||u.height!==Z.height||Mt<d||ot>_)){ot>d&&(Z.width+=ot-d,Z.x=d),Mt<_&&(Z.width=_-ot),s.splice(r,1);break}}else{Lt>M&&(Z.height+=Lt-M,Z.y=M),It<N&&(Z.height=N-Lt),s.splice(r,1);break}}}return s},_e.findHostInstance=x0,_e.findHostInstanceWithNoPortals=function(s){return s=v(s),s=s!==null?b(s):null,s===null?null:Go(s.stateNode)},_e.findHostInstanceWithWarning=function(s){return x0(s)},_e.flushPassiveEffects=xa,_e.flushSyncFromReconciler=function(s){var r=ze;ze|=1;var u=ae.T,d=Ma();try{if(Qn(2),ae.T=null,s)return s()}finally{Qn(d),ae.T=u,ze=r,(ze&6)===0&&P(0)}},_e.flushSyncWork=s0,_e.focusWithin=function(s,r){if(!ko)throw Error(i(363));for(s=Vf(s),r=t0(s,r),r=Array.from(r),s=0;s<r.length;){var u=r[s++],d=u.tag;if(!Wo(u)){if((d===5||d===26||d===27)&&vM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},_e.getFindAllNodesFailureDescription=function(s,r){if(!ko)throw Error(i(363));var u=0,d=[];s=[Vf(s),0];for(var _=0;_<s.length;){var M=s[_++],N=M.tag,H=s[_++],Z=r[H];if((N!==5&&N!==26&&N!==27||!Wo(M))&&(Gf(M,Z)&&(d.push(kf(Z)),H++,H>u&&(u=H)),H<r.length))for(M=M.child;M!==null;)s.push(M,H),M=M.sibling}if(u<r.length){for(s=[];u<r.length;u++)s.push(kf(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+s.join(" > ")}return null},_e.getPublicRootInstance=function(s){if(s=s.current,!s.child)return null;switch(s.child.tag){case 27:case 5:return Go(s.child.stateNode);default:return s.child.stateNode}},_e.injectIntoDevTools=function(){var s={bundleType:0,version:ZS,rendererPackageName:KS,currentDispatcherRef:ae,findFiberByHostInstance:U0,reconcilerVersion:"19.0.0"};if(w0!==null&&(s.rendererConfig=w0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")s=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)s=!0;else{try{Xo=r.inject(s),hi=r}catch{}s=!!r.checkDCE}}return s},_e.isAlreadyRendering=function(){return!1},_e.observeVisibleRects=function(s,r,u,d){if(!ko)throw Error(i(363));s=Wf(s,r);var _=_M(s,u,d).disconnect;return{disconnect:function(){_()}}},_e.shouldError=function(){return null},_e.shouldSuspend=function(){return!1},_e.startHostTransition=function(s,r,u,d){if(s.tag!==5)throw Error(i(476));var _=lg(s).queue;og(s,_,r,br,u===null?n:function(){var M=lg(s).next.queue;return Po(s,M,{},li()),u(d)})},_e.updateContainer=function(s,r,u,d){var _=r.current,M=li();return S0(_,M,s,r,u,d),M},_e.updateContainerSync=function(s,r,u,d){return r.tag===0&&xa(),S0(r.current,2,s,r,u,d),2},_e},a.exports.default=a.exports,Object.defineProperty(a.exports,"__esModule",{value:!0})}(Cp)),Cp.exports}var Z_;function n3(){return Z_||(Z_=1,Ap.exports=e3()),Ap.exports}var i3=n3();const s3=sy(i3);var K_=oS();function Zm(a,t,e){if(!a)return;if(e(a)===!0)return a;let n=t?a.return:a.child;for(;n;){const i=Zm(n,t,e);if(i)return i;n=t?null:n.sibling}}function lS(a){try{return Object.defineProperties(a,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return a}}const Km=lS(Fe.createContext(null));class a3 extends Fe.Component{render(){return Fe.createElement(Km.Provider,{value:this._reactInternals},this.props.children)}}function cS(){const a=Fe.useContext(Km);if(a===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=Fe.useId();return Fe.useMemo(()=>{for(const e of[a,a==null?void 0:a.alternate]){if(!e)continue;const n=Zm(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[a,t])}const r3=Symbol.for("react.context"),o3=a=>a!==null&&typeof a=="object"&&"$$typeof"in a&&a.$$typeof===r3;function l3(){const a=cS(),[t]=Fe.useState(()=>new Map);t.clear();let e=a;for(;e;){const n=e.type;o3(n)&&n!==Km&&!t.has(n)&&t.set(n,Fe.use(lS(n))),e=e.return}return t}function c3(){const a=l3();return Fe.useMemo(()=>Array.from(a.keys()).reduce((t,e)=>n=>Fe.createElement(t,null,Fe.createElement(e.Provider,{...n,value:a.get(e)})),t=>Fe.createElement(a3,{...t})),[a])}function uS(a){let t=a.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const hS=a=>a&&a.isOrthographicCamera,V3=a=>a&&a.hasOwnProperty("current"),u3=a=>a!=null&&(typeof a=="string"||typeof a=="number"||a.isColor),uf=((a,t)=>typeof window<"u"&&(((a=window.document)==null?void 0:a.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?Fe.useLayoutEffect:Fe.useEffect;function fS(a){const t=Fe.useRef(a);return uf(()=>void(t.current=a),[a]),t}function G3(){const a=cS(),t=c3();return Fe.useMemo(()=>({children:e})=>{const i=!!Zm(a,!0,o=>o.type===Fe.StrictMode)?Fe.StrictMode:Fe.Fragment;return oa.jsx(i,{children:oa.jsx(t,{children:e})})},[a,t])}function k3({set:a}){return uf(()=>(a(new Promise(()=>null)),()=>a(!1)),[a]),null}const W3=(a=>(a=class extends Fe.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},a.getDerivedStateFromError=()=>({error:!0}),a))();function dS(a){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(a)?Math.min(Math.max(a[0],e),a[1]):a}function ao(a){var t;return(t=a.__r3f)==null?void 0:t.root.getState()}const Ze={obj:a=>a===Object(a)&&!Ze.arr(a)&&typeof a!="function",fun:a=>typeof a=="function",str:a=>typeof a=="string",num:a=>typeof a=="number",boo:a=>typeof a=="boolean",und:a=>a===void 0,nul:a=>a===null,arr:a=>Array.isArray(a),equ(a,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof a!=typeof t||!!a!=!!t)return!1;if(Ze.str(a)||Ze.num(a)||Ze.boo(a))return a===t;const o=Ze.obj(a);if(o&&n==="reference")return a===t;const l=Ze.arr(a);if(l&&e==="reference")return a===t;if((l||o)&&a===t)return!0;let c;for(c in a)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:a)if(!Ze.equ(a[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:a)if(a[c]!==t[c])return!1;if(Ze.und(c)){if(l&&a.length===0&&t.length===0||o&&Object.keys(a).length===0&&Object.keys(t).length===0)return!0;if(a!==t)return!1}return!0}};function h3(a){const t={nodes:{},materials:{},meshes:{}};return a&&a.traverse(e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material),e.isMesh&&!t.meshes[e.name]&&(t.meshes[e.name]=e)}),t}function f3(a){a.type!=="Scene"&&(a.dispose==null||a.dispose());for(const t in a){const e=a[t];(e==null?void 0:e.type)!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const pS=["children","key","ref"];function d3(a){const t={};for(const e in a)pS.includes(e)||(t[e]=a[e]);return t}function Eh(a,t,e,n){const i=a;let o=i==null?void 0:i.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:d3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function ql(a,t){let e=a[t];if(!t.includes("-"))return{root:a,key:t,target:e};e=a;for(const i of t.split("-")){var n;t=i,a=e,e=(n=e)==null?void 0:n[t]}return{root:a,key:t,target:e}}const J_=/-\d+$/;function Th(a,t){if(Ze.str(t.props.attach)){if(J_.test(t.props.attach)){const i=t.props.attach.replace(J_,""),{root:o,key:l}=ql(a.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=ql(a.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else Ze.fun(t.props.attach)&&(t.previousAttach=t.props.attach(a.object,t.object))}function Ah(a,t){if(Ze.str(t.props.attach)){const{root:e,key:n}=ql(a.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(a.object,t.object);delete t.previousAttach}const $p=[...pS,"args","dispose","attach","object","onUpdate","dispose"],j_=new Map;function p3(a){let t=j_.get(a.constructor);try{t||(t=new a.constructor,j_.set(a.constructor,t))}catch{}return t}function m3(a,t){const e={};for(const n in t)if(!$p.includes(n)&&!Ze.equ(t[n],a.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in a.props){if($p.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=ql(a.object,n);if(i.constructor&&i.constructor.length===0){const l=p3(i);Ze.und(l)||(e[o]=l[o])}else e[o]=0}return e}const g3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],v3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ra(a,t){var e;const n=a.__r3f,i=n&&uS(n).getState(),o=n==null?void 0:n.eventCount;for(const c in t){let h=t[c];if($p.includes(c))continue;if(n&&v3.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=ql(a,c);if(m instanceof _o&&h instanceof _o)m.mask=h.mask;else if(m instanceof Ot&&u3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&g3.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Pn&&f[p].type===ki&&(f[p].colorSpace=Ln)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&wo(n),a}function wo(a){var t;if(!a.parent)return;a.props.onUpdate==null||a.props.onUpdate(a.object);const e=(t=a.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function mS(a,t){a.manual||(hS(a)?(a.left=t.width/-2,a.right=t.width/2,a.top=t.height/2,a.bottom=t.height/-2):a.aspect=t.width/t.height,a.updateProjectionMatrix())}const kn=a=>a==null?void 0:a.isObject3D;function Nu(a){return(a.eventObject||a.object).uuid+"/"+a.index+a.instanceId}function gS(a,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(a.delete(n),i.target.releasePointerCapture(n)))}function _3(a,t){const{internal:e}=a.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{gS(e.capturedMap,t,n,i)})}function y3(a){function t(h){const{internal:f}=a.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=a.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let y=0;y<v.length;y++){const E=ao(v[y]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(y){const E=ao(y);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(y,!0):[]}let b=v.flatMap(x).sort((y,E)=>{const A=ao(y.object),T=ao(E.object);return!A||!T?y.distance-E.distance:T.events.priority-A.events.priority||y.distance-E.distance}).filter(y=>{const E=Nu(y);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const y of b){let E=y.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({...y,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let y of p.internal.capturedMap.get(h.pointerId).values())m.has(Nu(y.intersection))||g.push(y.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=ao(v.object);if(x||v.object.traverseAncestors(b=>{const S=ao(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:y,internal:E}=x,A=new B(S.x,S.y,0).unproject(y),T=w=>{var C,F;return(C=(F=E.capturedMap.get(w))==null?void 0:F.has(v.eventObject))!=null?C:!1},L=w=>{const C={intersection:v,target:f.target};E.capturedMap.has(w)?E.capturedMap.get(w).set(v.eventObject,C):E.capturedMap.set(w,new Map([[v.eventObject,C]])),f.target.setPointerCapture(w)},U=w=>{const C=E.capturedMap.get(w);C&&gS(E.capturedMap,v.eventObject,C,w)};let I={};for(let w in f){let C=f[w];typeof C!="function"&&(I[w]=C)}let z={...v,...I,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:y,stopPropagation(){const w="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!w||w.has(v.eventObject))&&(z.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(C=>C.eventObject===v.eventObject))){const C=h.slice(0,h.indexOf(v));o([...C,v])}},target:{hasPointerCapture:T,setPointerCapture:L,releasePointerCapture:U},currentTarget:{hasPointerCapture:T,setPointerCapture:L,releasePointerCapture:U},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=a.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Nu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=a.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=a.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),y=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&y<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(A){const T=A.eventObject,L=T.__r3f;if(!(L!=null&&L.eventCount))return;const U=L.handlers;if(v){if(U.onPointerOver||U.onPointerEnter||U.onPointerOut||U.onPointerLeave){const I=Nu(A),z=g.hovered.get(I);z?z.stopped&&A.stopPropagation():(g.hovered.set(I,A),U.onPointerOver==null||U.onPointerOver(A),U.onPointerEnter==null||U.onPointerEnter(A))}U.onPointerMove==null||U.onPointerMove(A)}else{const I=U[h];I?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),I(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,y,E)}}return{handlePointer:c}}const Q_=a=>!!(a!=null&&a.render),Jm=Fe.createContext(null),x3=(a,t)=>{const e=sS((c,h)=>{const f=new B,p=new B,m=new B;function g(y=h().camera,E=p,A=h().size){const{width:T,height:L,top:U,left:I}=A,z=T/L;E.isVector3?m.copy(E):m.set(...E);const w=y.getWorldPosition(f).distanceTo(m);if(hS(y))return{width:T/y.zoom,height:L/y.zoom,top:U,left:I,factor:1,distance:w,aspect:z};{const C=y.fov*Math.PI/180,F=2*Math.tan(C/2)*w,$=F*(T/L);return{width:$,height:F,top:U,left:I,factor:T/$,distance:w,aspect:z}}}let v;const x=y=>c(E=>({performance:{...E.performance,current:y}})),b=new ht;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(y=1)=>a(h(),y),advance:(y,E)=>t(y,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Vm,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const y=h();v&&clearTimeout(v),y.performance.current!==y.performance.min&&x(y.performance.min),v=setTimeout(()=>x(h().performance.max),y.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:y=>c(E=>({...E,events:{...E.events,...y}})),setSize:(y,E,A=0,T=0)=>{const L=h().camera,U={width:y,height:E,top:A,left:T};c(I=>({size:U,viewport:{...I.viewport,...g(L,p,U)}}))},setDpr:y=>c(E=>{const A=dS(y);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(y="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,y!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:y}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:Fe.createRef(),active:!1,frames:0,priority:0,subscribe:(y,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:y,priority:E,store:A}),T.subscribers=T.subscribers.sort((L,U)=>L.priority-U.priority),()=>{const L=h().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(E>0?1:0),L.subscribers=L.subscribers.filter(U=>U.ref!==y))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,mS(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>a(c)),e};function jm(){const a=Fe.useContext(Jm);if(!a)throw new Error("R3F: Hooks can only be used within the Canvas component!");return a}function q3(a=e=>e,t){return jm()(a,t)}function Y3(a,t=0){const e=jm(),n=e.getState().internal.subscribe,i=fS(a);return uf(()=>n(i,t,e),[t,n,e]),null}const $_=new WeakMap,S3=a=>{var t;return typeof a=="function"&&(a==null||(t=a.prototype)==null?void 0:t.constructor)===a};function vS(a,t){return function(e,...n){let i;return S3(e)?(i=$_.get(e),i||(i=new e,$_.set(e,i))):i=e,a&&a(i),Promise.all(n.map(o=>new Promise((l,c)=>i.load(o,h=>{kn(h==null?void 0:h.scene)&&Object.assign(h,h3(h.scene)),l(h)},t,h=>c(new Error(`Could not load ${o}: ${h==null?void 0:h.message}`))))))}}function _S(a,t,e,n){const i=Array.isArray(t)?t:[t],o=j2(vS(e,n),[a,...i],{equal:Ze.equ});return Array.isArray(t)?o:o[0]}_S.preload=function(a,t,e){const n=Array.isArray(t)?t:[t];return Q2(vS(e),[a,...n])};_S.clear=function(a,t){const e=Array.isArray(t)?t:[t];return $2([a,...e])};function M3(a){const t=s3(a);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Fe.version}),t}const yS=0,So={},b3=/^three(?=[A-Z])/,hf=a=>`${a[0].toUpperCase()}${a.slice(1)}`;let E3=0;const T3=a=>typeof a=="function";function Z3(a){if(T3(a)){const t=`${E3++}`;return So[t]=a,t}else Object.assign(So,a)}function xS(a,t){const e=hf(a),n=So[e];if(a!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(a==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function A3(a,t,e){var n;return a=hf(a)in So?a:a.replace(b3,""),xS(a,t),a==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Eh(t.object,e,a,t)}function C3(a){if(!a.isHidden){var t;a.props.attach&&(t=a.parent)!=null&&t.object?Ah(a.parent,a):kn(a.object)&&(a.object.visible=!1),a.isHidden=!0,wo(a)}}function SS(a){if(a.isHidden){var t;a.props.attach&&(t=a.parent)!=null&&t.object?Th(a.parent,a):kn(a.object)&&a.props.visible!==!1&&(a.object.visible=!0),a.isHidden=!1,wo(a)}}function Qm(a,t,e){const n=t.root.getState();if(!(!a.parent&&a.object!==n.scene)){if(!t.object){var i,o;const l=So[hf(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(ra(t.object,t.props),t.props.attach)Th(a,t);else if(kn(t.object)&&kn(a.object)){const l=a.object.children.indexOf(e==null?void 0:e.object);if(e&&l!==-1){const c=a.object.children.indexOf(t.object);if(c!==-1){a.object.children.splice(c,1);const h=c<l?l-1:l;a.object.children.splice(h,0,t.object)}else t.object.parent=a.object,a.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),a.object.dispatchEvent({type:"childadded",child:t.object})}else a.object.add(t.object)}for(const l of t.children)Qm(t,l);wo(t)}}function Dp(a,t){t&&(t.parent=a,a.children.push(t),Qm(a,t))}function ty(a,t,e){if(!t||!e)return;t.parent=a;const n=a.children.indexOf(e);n!==-1?a.children.splice(n,0,t):a.children.push(t),Qm(a,t,e)}function MS(a){if(typeof a.dispose=="function"){const t=()=>{try{a.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():K_.unstable_scheduleCallback(K_.unstable_IdlePriority,t)}}function tm(a,t,e){if(!t)return;t.parent=null;const n=a.children.indexOf(t);n!==-1&&a.children.splice(n,1),t.props.attach?Ah(a,t):kn(t.object)&&kn(a.object)&&(a.object.remove(t.object),_3(uS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];tm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&MS(t.object),e===void 0&&wo(t)}function w3(a,t){for(const e of[a,a.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const zu=[];function R3(){for(const[e]of zu){const n=e.parent;if(n){e.props.attach?Ah(n,e):kn(e.object)&&kn(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Ah(e,i):kn(i.object)&&kn(e.object)&&e.object.remove(i.object)}e.isHidden&&SS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&MS(e.object)}for(const[e,n,i]of zu){e.props=n;const o=e.parent;if(o){var a,t;const l=So[hf(e.type)];e.object=(a=e.props.object)!=null?a:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,w3(i,e.object),ra(e.object,e.props),e.props.attach?Th(o,e):kn(e.object)&&kn(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Th(e,c):kn(c.object)&&kn(e.object)&&e.object.add(c.object);wo(e)}}zu.length=0}const Up=()=>{},ey={};let Lu=yS;const D3=0,U3=4,Ch=M3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:A3,removeChild:tm,appendChild:Dp,appendInitialChild:Dp,insertBefore:ty,appendChildToContainer(a,t){const e=a.getState().scene.__r3f;!t||!e||Dp(e,t)},removeChildFromContainer(a,t){const e=a.getState().scene.__r3f;!t||!e||tm(e,t)},insertInContainerBefore(a,t,e){const n=a.getState().scene.__r3f;!t||!e||!n||ty(n,t,e)},getRootHostContext:()=>ey,getChildHostContext:()=>ey,commitUpdate(a,t,e,n,i){var o,l,c;xS(t,n);let h=!1;if((a.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)zu.push([a,{...n},i]);else{const p=m3(a,n);Object.keys(p).length&&(Object.assign(a.props,p),ra(a.object,p))}(i.sibling===null||(i.flags&U3)===D3)&&R3()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:a=>a==null?void 0:a.object,prepareForCommit:()=>null,preparePortalMount:a=>Eh(a.getState().scene,a,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:C3,unhideInstance:SS,createTextInstance:Up,hideTextInstance:Up,unhideTextInstance:Up,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:Fe.createContext(null),setCurrentUpdatePriority(a){Lu=a},getCurrentUpdatePriority(){return Lu},resolveUpdatePriority(){var a;if(Lu!==yS)return Lu;switch(typeof window<"u"&&((a=window.event)==null?void 0:a.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Pu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Pu.ContinuousEventPriority;default:return Pu.DefaultEventPriority}},resetFormInstance(){}}),ur=new Map,ro={objects:"shallow",strict:!1};function N3(a,t){if(!t&&typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement&&a.parentElement){const{width:e,height:n,top:i,left:o}=a.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&a instanceof OffscreenCanvas)return{width:a.width,height:a.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function K3(a){const t=ur.get(a),e=t==null?void 0:t.fiber,n=t==null?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||x3(im,iy),l=e||Ch.createContainer(o,Pu.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||ur.set(a,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(St=>g=St);let{gl:v,size:x,scene:b,events:S,onCreated:y,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:L=!1,orthographic:U=!1,frameloop:I="always",dpr:z=[1,2],performance:w,raycaster:C,camera:F,onPointerMissed:$}=m,W=o.getState(),K=W.gl;if(!W.gl){const St={canvas:a,powerPreference:"high-performance",antialias:!0,alpha:!0},Pt=typeof v=="function"?await v(St):v;Q_(Pt)?K=Pt:K=new iS({...St,...v}),W.set({gl:K})}let at=W.raycaster;at||W.set({raycaster:at=new Xm});const{params:V,...it}=C||{};if(Ze.equ(it,at,ro)||ra(at,{...it}),Ze.equ(V,at.params,ro)||ra(at,{params:{...at.params,...V}}),!W.camera||W.camera===h&&!Ze.equ(h,F,ro)){h=F;const St=F==null?void 0:F.isCamera,Pt=St?F:U?new ic(0,0,0,0,.1,1e3):new yn(75,0,.1,1e3);St||(Pt.position.z=5,F&&(ra(Pt,F),Pt.manual||("aspect"in F||"left"in F||"right"in F||"bottom"in F||"top"in F)&&(Pt.manual=!0,Pt.updateProjectionMatrix())),!W.camera&&!(F!=null&&F.rotation)&&Pt.lookAt(0,0,0)),W.set({camera:Pt}),at.camera=Pt}if(!W.scene){let St;b!=null&&b.isScene?(St=b,Eh(St,o,"",{})):(St=new Sm,Eh(St,o,"",{}),b&&ra(St,b)),W.set({scene:St})}S&&!W.events.handlers&&W.set({events:S(o)});const Y=N3(a,x);if(Ze.equ(Y,W.size,ro)||W.setSize(Y.width,Y.height,Y.top,Y.left),z&&W.viewport.dpr!==dS(z)&&W.setDpr(z),W.frameloop!==I&&W.setFrameloop(I),W.onPointerMissed||W.set({onPointerMissed:$}),w&&!Ze.equ(w,W.performance,ro)&&W.set(St=>({performance:{...St.performance,...w}})),!W.xr){var ct;const St=(nt,_t)=>{const Bt=o.getState();Bt.frameloop!=="never"&&iy(nt,!0,Bt,_t)},Pt=()=>{const nt=o.getState();nt.gl.xr.enabled=nt.gl.xr.isPresenting,nt.gl.xr.setAnimationLoop(nt.gl.xr.isPresenting?St:null),nt.gl.xr.isPresenting||im(nt)},le={connect(){const nt=o.getState().gl;nt.xr.addEventListener("sessionstart",Pt),nt.xr.addEventListener("sessionend",Pt)},disconnect(){const nt=o.getState().gl;nt.xr.removeEventListener("sessionstart",Pt),nt.xr.removeEventListener("sessionend",Pt)}};typeof((ct=K.xr)==null?void 0:ct.addEventListener)=="function"&&le.connect(),W.set({xr:le})}if(K.shadowMap){const St=K.shadowMap.enabled,Pt=K.shadowMap.type;if(K.shadowMap.enabled=!!E,Ze.boo(E))K.shadowMap.type=vl;else if(Ze.str(E)){var gt;const le={basic:oy,percentage:Dh,soft:vl,variance:Hi};K.shadowMap.type=(gt=le[E])!=null?gt:vl}else Ze.obj(E)&&Object.assign(K.shadowMap,E);(St!==K.shadowMap.enabled||Pt!==K.shadowMap.type)&&(K.shadowMap.needsUpdate=!0)}return be.enabled=!L,f||(K.outputColorSpace=A?ca:Ln,K.toneMapping=T?ns:am),W.legacy!==L&&W.set(()=>({legacy:L})),W.linear!==A&&W.set(()=>({linear:A})),W.flat!==T&&W.set(()=>({flat:T})),v&&!Ze.fun(v)&&!Q_(v)&&!Ze.equ(v,K,ro)&&ra(K,v),c=y,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Ch.updateContainer(oa.jsx(L3,{store:o,children:m,onCreated:c,rootElement:a}),l,null,()=>{})}),o},unmount(){P3(a)}}}function L3({store:a,children:t,onCreated:e,rootElement:n}){return uf(()=>{const i=a.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),a.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),oa.jsx(Jm.Provider,{value:a,children:t})}function P3(a,t){const e=ur.get(a),n=e==null?void 0:e.fiber;if(n){const i=e==null?void 0:e.store.getState();i&&(i.internal.active=!1),Ch.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),f3(i.scene),ur.delete(a)}catch{}},500)})}}function J3(a,t,e){return oa.jsx(I3,{children:a,container:t,state:e})}function I3({state:a={},children:t,container:e}){const{events:n,size:i,...o}=a,l=jm(),[c]=Fe.useState(()=>new Xm),[h]=Fe.useState(()=>new ht),f=fS((m,g)=>{let v;if(g.camera&&i){const x=g.camera;v=m.viewport.getCurrentViewport(x,new B,i),x!==m.camera&&mS(x,i)}return{...m,...g,scene:e,raycaster:c,pointer:h,mouse:h,previousRoot:l,events:{...m.events,...g.events,...n},size:{...m.size,...i},viewport:{...m.viewport,...v},setEvents:x=>g.set(b=>({...b,events:{...b.events,...x}}))}}),p=Fe.useMemo(()=>{const m=sS((v,x)=>({...o,set:v,get:x})),g=v=>m.setState(x=>f.current(v,x));return g(l.getState()),l.subscribe(g),m},[l,e]);return oa.jsx(oa.Fragment,{children:Ch.createPortal(oa.jsx(Jm.Provider,{value:p,children:t}),p,null)})}const O3=new Set,B3=new Set,z3=new Set;function Np(a,t){if(a.size)for(const{callback:e}of a.values())e(t)}function Cl(a,t){switch(a){case"before":return Np(O3,t);case"after":return Np(B3,t);case"tail":return Np(z3,t)}}let Lp,Pp;function em(a,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof a=="number"&&(n=a-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=a),Lp=t.internal.subscribers;for(let i=0;i<Lp.length;i++)Pp=Lp[i],Pp.ref.current(Pp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let wh=!1,nm=!1,Ip,ny,oo;function bS(a){ny=requestAnimationFrame(bS),wh=!0,Ip=0,Cl("before",a),nm=!0;for(const e of ur.values()){var t;oo=e.store.getState(),oo.internal.active&&(oo.frameloop==="always"||oo.internal.frames>0)&&!((t=oo.gl.xr)!=null&&t.isPresenting)&&(Ip+=em(a,oo))}if(nm=!1,Cl("after",a),Ip===0)return Cl("tail",a),wh=!1,cancelAnimationFrame(ny)}function im(a,t=1){var e;if(!a)return ur.forEach(n=>im(n.store.getState(),t));(e=a.gl.xr)!=null&&e.isPresenting||!a.internal.active||a.frameloop==="never"||(t>1?a.internal.frames=Math.min(60,a.internal.frames+t):nm?a.internal.frames=2:a.internal.frames=1,wh||(wh=!0,requestAnimationFrame(bS)))}function iy(a,t=!0,e,n){if(t&&Cl("before",a),e)em(a,e,n);else for(const i of ur.values())em(a,i.store.getState());t&&Cl("after",a)}const Op={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function j3(a){const{handlePointer:t}=y3(a);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Op).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=a.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=a.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=Op[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=a.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=Op[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}export{is as $,Eo as A,qn as B,Ot as C,tE as D,sa as E,iT as F,ni as G,bo as H,Wx as I,XE as J,Pn as K,fn as L,Cx as M,Ih as N,ic as O,Ao as P,ii as Q,Rh as R,fe as S,sT as T,$y as U,ht as V,Di as W,Sm as X,as as Y,Uh as Z,iS as _,_S as a,Wl as a$,ca as a0,Nh as a1,lm as a2,om as a3,Ls as a4,ki as a5,Ps as a6,si as a7,zm as a8,Lb as a9,bx as aA,Bx as aB,zx as aC,Fx as aD,rx as aE,uT as aF,He as aG,Wh as aH,es as aI,co as aJ,_l as aK,rm as aL,Dl as aM,Ul as aN,Em as aO,On as aP,Yn as aQ,Nm as aR,we as aS,de as aT,ax as aU,os as aV,ua as aW,lx as aX,cx as aY,ho as aZ,Xh as a_,Ln as aa,Rs as ab,Ns as ac,wl as ad,nT as ae,ex as af,J3 as ag,AE as ah,En as ai,Wm as aj,q2 as ak,Ix as al,a3 as am,G3 as an,fS as ao,uf as ap,K3 as aq,j3 as ar,V3 as as,W3 as at,k3 as au,P3 as av,H3 as aw,De as ax,RT as ay,Zp as az,sn as b,bm as b0,Nl as b1,xh as b2,lr as b3,kl as b4,Gl as b5,nc as b6,Us as b7,ec as b8,Ob as b9,Bb as ba,Ib as bb,B as c,Y3 as d,Z3 as e,ee as f,ra as g,Pm as h,Lm as i,Fy as j,un as k,fa as l,In as m,xo as n,ce as o,Re as p,ts as q,sr as r,j2 as s,tf as t,q3 as u,Wi as v,OT as w,yn as x,Cb as y,wb as z};
