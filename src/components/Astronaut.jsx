// // // // /*
// // // // Auto-generated by: https://github.com/pmndrs/gltfjsx
// // // // Author: wallmasterr (https://sketchfab.com/wallmasterr)
// // // // License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// // // // Source: https://sketchfab.com/3d-models/tenhun-falling-spaceman-fanart-9fd80b6a259f41fd99e6f56eee686dc5
// // // // Title: Tenhun Falling spaceman (FanArt)
// // // // */

// // // // import React, { useEffect, useRef } from "react";
// // // // import { useGLTF, useAnimations } from "@react-three/drei";
// // // // import { useMotionValue, useSpring } from "motion/react";
// // // // import { useFrame } from "@react-three/fiber";

// // // // export function Astronaut(props) {
// // // //   const group = useRef();
// // // //   const { nodes, materials, animations } = useGLTF("/models/astronaut-opt.glb");
// // // //   const { actions } = useAnimations(animations, group);
// // // //   useEffect(() => {
// // // //     if (animations.length > 0) {
// // // //       actions[animations[0].name]?.play();
// // // //     }
// // // //   }, [actions, animations]);

// // // //   const yPosition = useMotionValue(5);
// // // //   const ySpring = useSpring(yPosition, { damping: 30 });
// // // //   useEffect(() => {
// // // //     ySpring.set(-1);
// // // //   }, [ySpring]);
// // // //   useFrame(() => {
// // // //     group.current.position.y = ySpring.get();
// // // //   });
// // // //   return (
// // // //     <group
// // // //       ref={group}
// // // //       {...props}
// // // //       dispose={null}
// // // //       rotation={[-Math.PI / 2, -0.2, 2.2]}
// // // //       scale={props.scale || 0.3}
// // // //       position={props.position || [1.3, -1, 0]}
// // // //     >
// // // //       <group name="Sketchfab_Scene">
// // // //         <group name="Sketchfab_model">
// // // //           <group name="Root">
// // // //             <group name="metarig">
// // // //               <primitive object={nodes.metarig_rootJoint} />
// // // //               <skinnedMesh
// // // //                 name="Cube001_0"
// // // //                 geometry={nodes.Cube001_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube001_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube005_0"
// // // //                 geometry={nodes.Cube005_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube005_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube002_0"
// // // //                 geometry={nodes.Cube002_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube002_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Plane_0"
// // // //                 geometry={nodes.Plane_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Plane_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube008_0"
// // // //                 geometry={nodes.Cube008_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube008_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube004_0"
// // // //                 geometry={nodes.Cube004_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube004_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube003_0"
// // // //                 geometry={nodes.Cube003_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube003_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube_0"
// // // //                 geometry={nodes.Cube_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube009_0"
// // // //                 geometry={nodes.Cube009_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube009_0.skeleton}
// // // //               />
// // // //               <skinnedMesh
// // // //                 name="Cube011_0"
// // // //                 geometry={nodes.Cube011_0.geometry}
// // // //                 material={materials["AstronautFallingTexture.png"]}
// // // //                 skeleton={nodes.Cube011_0.skeleton}
// // // //               />
// // // //               <group name="Cube001" />
// // // //               <group name="Cube005" />
// // // //               <group name="Cube002" />
// // // //               <group name="Plane" />
// // // //               <group name="Cube008" />
// // // //               <group name="Cube004" />
// // // //               <group name="Cube003" />
// // // //               <group name="Cube" />
// // // //               <group
// // // //                 name="Cube009"
// // // //                 rotation={[-2.708, 0.013, -1.447]}
// // // //                 scale={1.307}
// // // //               />
// // // //               <group name="Cube011" />
// // // //             </group>
// // // //           </group>
// // // //         </group>
// // // //       </group>
// // // //     </group>
// // // //   );
// // // // }

// // // // useGLTF.preload("/models/astronaut-opt.glb");

// // // import React, { useEffect, useRef, useLayoutEffect } from "react";
// // // import { useGLTF, useAnimations } from "@react-three/drei";
// // // import { useMediaQuery } from "react-responsive";
// // // import gsap from "gsap";
// // // import { ScrollTrigger } from "gsap/ScrollTrigger";

// // // gsap.registerPlugin(ScrollTrigger);

// // // export function Astronaut(props) {
// // //   const group = useRef();
// // //   const { scene, animations } = useGLTF("/models/astronaut-opt.glb");
// // //   const { actions } = useAnimations(animations, group);
// // //   const isMobile = useMediaQuery({ maxWidth: 853 });

// // //   useEffect(() => {
// // //     if (actions && animations.length > 0) {
// // //       actions[animations[0].name]?.play();
// // //     }
// // //   }, [actions, animations]);

// // //   useEffect(() => {
// // //     scene.traverse((child) => {
// // //       if (child.isMesh) {
// // //         child.material.transparent = true;
// // //       }
// // //     });
// // //   }, [scene]);

// // //   useLayoutEffect(() => {
// // //     // --- PERBAIKAN UTAMA ADA DI SINI ---
// // //     // Argumen kedua 'group' dihapus dari context agar GSAP mencari trigger di seluruh halaman
// // //     const ctx = gsap.context(() => {
// // //       // --- STAGE 1: Animasi "Kepental" ---
// // //       const heroTl = gsap.timeline({
// // //         scrollTrigger: {
// // //           trigger: "#hero-section",
// // //           start: "top top",
// // //           end: "bottom top",
// // //           scrub: 1.5,
// // //         },
// // //       });

// // //       const finalScale = isMobile ? 0.25 : 0.2;
// // //       const finalPosition = isMobile ? [0, -2, 0] : [2.5, -2, -1];
// // //       const finalRotation = isMobile ? [0, 0, 0] : [0, Math.PI / 2, 0];

// // //       heroTl.to(
// // //         group.current.scale,
// // //         { x: finalScale, y: finalScale, z: finalScale },
// // //         0
// // //       );
// // //       heroTl.to(
// // //         group.current.position,
// // //         { x: finalPosition[0], y: finalPosition[1], z: finalPosition[2] },
// // //         0
// // //       );
// // //       heroTl.to(
// // //         group.current.rotation,
// // //         { x: finalRotation[0], y: finalRotation[1], z: finalRotation[2] },
// // //         0
// // //       );

// // //       // --- STAGE 2: Animasi Menghilang ---
// // //       const fadeOutTl = gsap.timeline({
// // //         scrollTrigger: {
// // //           trigger: "#tech-showcase",
// // //           start: "top 80%",
// // //           end: "top 30%",
// // //           scrub: 1.5,
// // //         },
// // //       });

// // //       scene.traverse((child) => {
// // //         if (child.isMesh) {
// // //           fadeOutTl.to(child.material, { opacity: 0, duration: 0.5 }, 0);
// // //         }
// // //       });
// // //     });
// // //     return () => ctx.revert();
// // //   }, [isMobile, scene]);

// // //   return (
// // //     <group ref={group} {...props} dispose={null}>
// // //       <primitive
// // //         object={scene}
// // //         scale={isMobile ? 1.0 : 1.5}
// // //         position={isMobile ? [0.5, -2, 0] : [2, -0.5, 0]}
// // //         rotation={isMobile ? [-Math.PI / 2, 4, 4] : [-Math.PI / 2, 7.25, 2]}
// // //       />
// // //     </group>
// // //   );
// // // }

// // // useGLTF.preload("/models/astronaut-opt.glb");

// // import React, { useEffect, useRef, useLayoutEffect } from "react";
// // import { useGLTF, useAnimations } from "@react-three/drei";
// // import { useMediaQuery } from "react-responsive";
// // import gsap from "gsap";
// // import { ScrollTrigger } from "gsap/ScrollTrigger";

// // gsap.registerPlugin(ScrollTrigger);

// // export function Astronaut(props) {
// //   const group = useRef();
// //   const { scene, animations } = useGLTF("/models/astronaut-opt.glb");
// //   const { actions } = useAnimations(animations, group);
// //   const isMobile = useMediaQuery({ maxWidth: 853 });

// //   useEffect(() => {
// //     if (actions && animations.length > 0) {
// //       actions[animations[0].name]?.play();
// //     }
// //   }, [actions, animations]);

// //   useEffect(() => {
// //     scene.traverse((child) => {
// //       if (child.isMesh) {
// //         child.material.transparent = true;
// //       }
// //     });
// //   }, [scene]);

// //   useLayoutEffect(() => {
// //     const ctx = gsap.context(() => {
// //       // STAGE 1: Animasi "Kepental" dari Hero
// //       const heroTl = gsap.timeline({
// //         scrollTrigger: {
// //           trigger: "#hero-section",
// //           start: "top top",
// //           end: "bottom top",
// //           scrub: 1.5,
// //         },
// //       });

// //       const finalScale = isMobile ? 0.25 : 0.2;
// //       const finalPosition = isMobile ? [0, -2, 0] : [2.5, -2, -1];
// //       const finalRotation = isMobile ? [0, 0, 0] : [0, Math.PI / 2, 0];

// //       heroTl.to(
// //         group.current.scale,
// //         { x: finalScale, y: finalScale, z: finalScale },
// //         0
// //       );
// //       heroTl.to(
// //         group.current.position,
// //         { x: finalPosition[0], y: finalPosition[1], z: finalPosition[2] },
// //         0
// //       );
// //       heroTl.to(
// //         group.current.rotation,
// //         { x: finalRotation[0], y: finalRotation[1], z: finalRotation[2] },
// //         0
// //       );

// //       // STAGE 2: Animasi Menghilang saat TechShowcase muncul
// //       scene.traverse((child) => {
// //         if (child.isMesh) {
// //           gsap.to(child.material, {
// //             opacity: 0,
// //             duration: 0.5,
// //             scrollTrigger: {
// //               trigger: "#tech-showcase",
// //               start: "top 80%",
// //               end: "top 30%",
// //               scrub: 1.5,
// //             },
// //           });
// //         }
// //       });
// //     });
// //     return () => ctx.revert();
// //   }, [isMobile, scene]);

// //   return (
// //     <group ref={group} {...props} dispose={null}>
// //       <primitive
// //         object={scene}
// //         scale={isMobile ? 1.0 : 1.5}
// //         position={isMobile ? [0.5, -2, 0] : [2, -0.5, 0]}
// //         rotation={isMobile ? [-Math.PI / 2, 4, 4] : [-Math.PI / 2, 7.25, 2]}
// //       />
// //     </group>
// //   );
// // }

// // useGLTF.preload("/models/astronaut-opt.glb");

// import React, { useEffect, useRef, useLayoutEffect } from "react";
// import { useGLTF, useAnimations } from "@react-three/drei";
// import gsap from "gsap";
// import { ScrollTrigger } from "gsap/ScrollTrigger";

// gsap.registerPlugin(ScrollTrigger);

// export function Astronaut(props) {
//   const group = useRef();
//   const { scene, animations } = useGLTF("/models/astronaut-opt.glb");
//   const { actions } = useAnimations(animations, group);

//   useEffect(() => {
//     if (actions && animations.length > 0) {
//       actions[animations[0].name]?.play();
//     }
//   }, [actions, animations]);

//   useLayoutEffect(() => {
//     // Pastikan semua material bisa transparan
//     scene.traverse((child) => {
//       if (child.isMesh) {
//         child.material.transparent = true;
//       }
//     });

//     const ctx = gsap.context(() => {
//       // Timeline untuk menghilangkan astronot saat #tech-showcase muncul
//       scene.traverse((child) => {
//         if (child.isMesh) {
//           gsap.to(child.material, {
//             opacity: 0,
//             duration: 0.5,
//             scrollTrigger: {
//               trigger: "#tech-showcase",
//               start: "top 80%",
//               end: "top 30%",
//               scrub: 1.5,
//             },
//           });
//         }
//       });
//     });
//     return () => ctx.revert();
//   }, [scene]);

//   return (
//     <group ref={group} {...props} dispose={null}>
//       <primitive object={scene} />
//     </group>
//   );
// }

// useGLTF.preload("/models/astronaut-opt.glb");

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export function Astronaut(props) {
  const group = useRef();
  const { scene, animations } = useGLTF("/models/astronaut-opt.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    scene.traverse((child) => {
      if (child.isMesh) {
        child.material.transparent = true;
      }
    });
    if (actions && animations.length > 0) {
      actions[animations[0].name]?.play();
    }
  }, [scene, actions, animations]);

  return (
    <group ref={group} dispose={null}>
      <primitive object={scene} {...props} />
    </group>
  );
}

useGLTF.preload("/models/astronaut-opt.glb");
